#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18449
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace wfmis.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="easyfis")]
	public partial class wfmisDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertUsersOpenAuthData(UsersOpenAuthData instance);
    partial void UpdateUsersOpenAuthData(UsersOpenAuthData instance);
    partial void DeleteUsersOpenAuthData(UsersOpenAuthData instance);
    partial void InsertApplication(Application instance);
    partial void UpdateApplication(Application instance);
    partial void DeleteApplication(Application instance);
    partial void InsertMembership(Membership instance);
    partial void UpdateMembership(Membership instance);
    partial void DeleteMembership(Membership instance);
    partial void InsertMstAccount(MstAccount instance);
    partial void UpdateMstAccount(MstAccount instance);
    partial void DeleteMstAccount(MstAccount instance);
    partial void InsertMstAccountBudget(MstAccountBudget instance);
    partial void UpdateMstAccountBudget(MstAccountBudget instance);
    partial void DeleteMstAccountBudget(MstAccountBudget instance);
    partial void InsertMstAccountCashFlow(MstAccountCashFlow instance);
    partial void UpdateMstAccountCashFlow(MstAccountCashFlow instance);
    partial void DeleteMstAccountCashFlow(MstAccountCashFlow instance);
    partial void InsertMstAccountCategory(MstAccountCategory instance);
    partial void UpdateMstAccountCategory(MstAccountCategory instance);
    partial void DeleteMstAccountCategory(MstAccountCategory instance);
    partial void InsertMstAccountType(MstAccountType instance);
    partial void UpdateMstAccountType(MstAccountType instance);
    partial void DeleteMstAccountType(MstAccountType instance);
    partial void InsertMstArticle(MstArticle instance);
    partial void UpdateMstArticle(MstArticle instance);
    partial void DeleteMstArticle(MstArticle instance);
    partial void InsertMstArticleBank(MstArticleBank instance);
    partial void UpdateMstArticleBank(MstArticleBank instance);
    partial void DeleteMstArticleBank(MstArticleBank instance);
    partial void InsertMstArticleCustomer(MstArticleCustomer instance);
    partial void UpdateMstArticleCustomer(MstArticleCustomer instance);
    partial void DeleteMstArticleCustomer(MstArticleCustomer instance);
    partial void InsertMstArticleItem(MstArticleItem instance);
    partial void UpdateMstArticleItem(MstArticleItem instance);
    partial void DeleteMstArticleItem(MstArticleItem instance);
    partial void InsertMstArticleItemComponent(MstArticleItemComponent instance);
    partial void UpdateMstArticleItemComponent(MstArticleItemComponent instance);
    partial void DeleteMstArticleItemComponent(MstArticleItemComponent instance);
    partial void InsertMstArticleItemInventory(MstArticleItemInventory instance);
    partial void UpdateMstArticleItemInventory(MstArticleItemInventory instance);
    partial void DeleteMstArticleItemInventory(MstArticleItemInventory instance);
    partial void InsertMstArticleItemPrice(MstArticleItemPrice instance);
    partial void UpdateMstArticleItemPrice(MstArticleItemPrice instance);
    partial void DeleteMstArticleItemPrice(MstArticleItemPrice instance);
    partial void InsertMstArticleItemUnit(MstArticleItemUnit instance);
    partial void UpdateMstArticleItemUnit(MstArticleItemUnit instance);
    partial void DeleteMstArticleItemUnit(MstArticleItemUnit instance);
    partial void InsertMstArticleSupplier(MstArticleSupplier instance);
    partial void UpdateMstArticleSupplier(MstArticleSupplier instance);
    partial void DeleteMstArticleSupplier(MstArticleSupplier instance);
    partial void InsertMstArticleType(MstArticleType instance);
    partial void UpdateMstArticleType(MstArticleType instance);
    partial void DeleteMstArticleType(MstArticleType instance);
    partial void InsertMstBranch(MstBranch instance);
    partial void UpdateMstBranch(MstBranch instance);
    partial void DeleteMstBranch(MstBranch instance);
    partial void InsertMstCompany(MstCompany instance);
    partial void UpdateMstCompany(MstCompany instance);
    partial void DeleteMstCompany(MstCompany instance);
    partial void InsertMstDiscount(MstDiscount instance);
    partial void UpdateMstDiscount(MstDiscount instance);
    partial void DeleteMstDiscount(MstDiscount instance);
    partial void InsertMstPayType(MstPayType instance);
    partial void UpdateMstPayType(MstPayType instance);
    partial void DeleteMstPayType(MstPayType instance);
    partial void InsertMstPeriod(MstPeriod instance);
    partial void UpdateMstPeriod(MstPeriod instance);
    partial void DeleteMstPeriod(MstPeriod instance);
    partial void InsertMstTax(MstTax instance);
    partial void UpdateMstTax(MstTax instance);
    partial void DeleteMstTax(MstTax instance);
    partial void InsertMstTaxType(MstTaxType instance);
    partial void UpdateMstTaxType(MstTaxType instance);
    partial void DeleteMstTaxType(MstTaxType instance);
    partial void InsertMstTerm(MstTerm instance);
    partial void UpdateMstTerm(MstTerm instance);
    partial void DeleteMstTerm(MstTerm instance);
    partial void InsertMstUnit(MstUnit instance);
    partial void UpdateMstUnit(MstUnit instance);
    partial void DeleteMstUnit(MstUnit instance);
    partial void InsertMstUser(MstUser instance);
    partial void UpdateMstUser(MstUser instance);
    partial void DeleteMstUser(MstUser instance);
    partial void InsertMstUserSerialNumber(MstUserSerialNumber instance);
    partial void UpdateMstUserSerialNumber(MstUserSerialNumber instance);
    partial void DeleteMstUserSerialNumber(MstUserSerialNumber instance);
    partial void InsertMstUserStaff(MstUserStaff instance);
    partial void UpdateMstUserStaff(MstUserStaff instance);
    partial void DeleteMstUserStaff(MstUserStaff instance);
    partial void InsertMstUserStaffRole(MstUserStaffRole instance);
    partial void UpdateMstUserStaffRole(MstUserStaffRole instance);
    partial void DeleteMstUserStaffRole(MstUserStaffRole instance);
    partial void InsertProfile(Profile instance);
    partial void UpdateProfile(Profile instance);
    partial void DeleteProfile(Profile instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertSysPage(SysPage instance);
    partial void UpdateSysPage(SysPage instance);
    partial void DeleteSysPage(SysPage instance);
    partial void InsertSysRole(SysRole instance);
    partial void UpdateSysRole(SysRole instance);
    partial void DeleteSysRole(SysRole instance);
    partial void InsertSysRolePage(SysRolePage instance);
    partial void UpdateSysRolePage(SysRolePage instance);
    partial void DeleteSysRolePage(SysRolePage instance);
    partial void InsertTrnBank(TrnBank instance);
    partial void UpdateTrnBank(TrnBank instance);
    partial void DeleteTrnBank(TrnBank instance);
    partial void InsertTrnCollection(TrnCollection instance);
    partial void UpdateTrnCollection(TrnCollection instance);
    partial void DeleteTrnCollection(TrnCollection instance);
    partial void InsertTrnCollectionLine(TrnCollectionLine instance);
    partial void UpdateTrnCollectionLine(TrnCollectionLine instance);
    partial void DeleteTrnCollectionLine(TrnCollectionLine instance);
    partial void InsertTrnDisbursement(TrnDisbursement instance);
    partial void UpdateTrnDisbursement(TrnDisbursement instance);
    partial void DeleteTrnDisbursement(TrnDisbursement instance);
    partial void InsertTrnDisbursementLine(TrnDisbursementLine instance);
    partial void UpdateTrnDisbursementLine(TrnDisbursementLine instance);
    partial void DeleteTrnDisbursementLine(TrnDisbursementLine instance);
    partial void InsertTrnInventory(TrnInventory instance);
    partial void UpdateTrnInventory(TrnInventory instance);
    partial void DeleteTrnInventory(TrnInventory instance);
    partial void InsertTrnJournal(TrnJournal instance);
    partial void UpdateTrnJournal(TrnJournal instance);
    partial void DeleteTrnJournal(TrnJournal instance);
    partial void InsertTrnJournalVoucher(TrnJournalVoucher instance);
    partial void UpdateTrnJournalVoucher(TrnJournalVoucher instance);
    partial void DeleteTrnJournalVoucher(TrnJournalVoucher instance);
    partial void InsertTrnJournalVoucherLine(TrnJournalVoucherLine instance);
    partial void UpdateTrnJournalVoucherLine(TrnJournalVoucherLine instance);
    partial void DeleteTrnJournalVoucherLine(TrnJournalVoucherLine instance);
    partial void InsertTrnPurchaseInvoice(TrnPurchaseInvoice instance);
    partial void UpdateTrnPurchaseInvoice(TrnPurchaseInvoice instance);
    partial void DeleteTrnPurchaseInvoice(TrnPurchaseInvoice instance);
    partial void InsertTrnPurchaseInvoiceLine(TrnPurchaseInvoiceLine instance);
    partial void UpdateTrnPurchaseInvoiceLine(TrnPurchaseInvoiceLine instance);
    partial void DeleteTrnPurchaseInvoiceLine(TrnPurchaseInvoiceLine instance);
    partial void InsertTrnPurchaseOrder(TrnPurchaseOrder instance);
    partial void UpdateTrnPurchaseOrder(TrnPurchaseOrder instance);
    partial void DeleteTrnPurchaseOrder(TrnPurchaseOrder instance);
    partial void InsertTrnPurchaseOrderLine(TrnPurchaseOrderLine instance);
    partial void UpdateTrnPurchaseOrderLine(TrnPurchaseOrderLine instance);
    partial void DeleteTrnPurchaseOrderLine(TrnPurchaseOrderLine instance);
    partial void InsertTrnSalesInvoice(TrnSalesInvoice instance);
    partial void UpdateTrnSalesInvoice(TrnSalesInvoice instance);
    partial void DeleteTrnSalesInvoice(TrnSalesInvoice instance);
    partial void InsertTrnSalesInvoiceLine(TrnSalesInvoiceLine instance);
    partial void UpdateTrnSalesInvoiceLine(TrnSalesInvoiceLine instance);
    partial void DeleteTrnSalesInvoiceLine(TrnSalesInvoiceLine instance);
    partial void InsertTrnSalesOrder(TrnSalesOrder instance);
    partial void UpdateTrnSalesOrder(TrnSalesOrder instance);
    partial void DeleteTrnSalesOrder(TrnSalesOrder instance);
    partial void InsertTrnSalesOrderLine(TrnSalesOrderLine instance);
    partial void UpdateTrnSalesOrderLine(TrnSalesOrderLine instance);
    partial void DeleteTrnSalesOrderLine(TrnSalesOrderLine instance);
    partial void InsertTrnStockIn(TrnStockIn instance);
    partial void UpdateTrnStockIn(TrnStockIn instance);
    partial void DeleteTrnStockIn(TrnStockIn instance);
    partial void InsertTrnStockInLine(TrnStockInLine instance);
    partial void UpdateTrnStockInLine(TrnStockInLine instance);
    partial void DeleteTrnStockInLine(TrnStockInLine instance);
    partial void InsertTrnStockOut(TrnStockOut instance);
    partial void UpdateTrnStockOut(TrnStockOut instance);
    partial void DeleteTrnStockOut(TrnStockOut instance);
    partial void InsertTrnStockOutLine(TrnStockOutLine instance);
    partial void UpdateTrnStockOutLine(TrnStockOutLine instance);
    partial void DeleteTrnStockOutLine(TrnStockOutLine instance);
    partial void InsertTrnStockTransfer(TrnStockTransfer instance);
    partial void UpdateTrnStockTransfer(TrnStockTransfer instance);
    partial void DeleteTrnStockTransfer(TrnStockTransfer instance);
    partial void InsertTrnStockTransferLine(TrnStockTransferLine instance);
    partial void UpdateTrnStockTransferLine(TrnStockTransferLine instance);
    partial void DeleteTrnStockTransferLine(TrnStockTransferLine instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertUsersInRole(UsersInRole instance);
    partial void UpdateUsersInRole(UsersInRole instance);
    partial void DeleteUsersInRole(UsersInRole instance);
    partial void InsertUsersOpenAuthAccount(UsersOpenAuthAccount instance);
    partial void UpdateUsersOpenAuthAccount(UsersOpenAuthAccount instance);
    partial void DeleteUsersOpenAuthAccount(UsersOpenAuthAccount instance);
    #endregion
		
		public wfmisDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["easyfisConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public wfmisDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public wfmisDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public wfmisDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public wfmisDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<UsersOpenAuthData> UsersOpenAuthDatas
		{
			get
			{
				return this.GetTable<UsersOpenAuthData>();
			}
		}
		
		public System.Data.Linq.Table<Application> Applications
		{
			get
			{
				return this.GetTable<Application>();
			}
		}
		
		public System.Data.Linq.Table<Membership> Memberships
		{
			get
			{
				return this.GetTable<Membership>();
			}
		}
		
		public System.Data.Linq.Table<MstAccount> MstAccounts
		{
			get
			{
				return this.GetTable<MstAccount>();
			}
		}
		
		public System.Data.Linq.Table<MstAccountBudget> MstAccountBudgets
		{
			get
			{
				return this.GetTable<MstAccountBudget>();
			}
		}
		
		public System.Data.Linq.Table<MstAccountCashFlow> MstAccountCashFlows
		{
			get
			{
				return this.GetTable<MstAccountCashFlow>();
			}
		}
		
		public System.Data.Linq.Table<MstAccountCategory> MstAccountCategories
		{
			get
			{
				return this.GetTable<MstAccountCategory>();
			}
		}
		
		public System.Data.Linq.Table<MstAccountType> MstAccountTypes
		{
			get
			{
				return this.GetTable<MstAccountType>();
			}
		}
		
		public System.Data.Linq.Table<MstArticle> MstArticles
		{
			get
			{
				return this.GetTable<MstArticle>();
			}
		}
		
		public System.Data.Linq.Table<MstArticleBank> MstArticleBanks
		{
			get
			{
				return this.GetTable<MstArticleBank>();
			}
		}
		
		public System.Data.Linq.Table<MstArticleCustomer> MstArticleCustomers
		{
			get
			{
				return this.GetTable<MstArticleCustomer>();
			}
		}
		
		public System.Data.Linq.Table<MstArticleItem> MstArticleItems
		{
			get
			{
				return this.GetTable<MstArticleItem>();
			}
		}
		
		public System.Data.Linq.Table<MstArticleItemComponent> MstArticleItemComponents
		{
			get
			{
				return this.GetTable<MstArticleItemComponent>();
			}
		}
		
		public System.Data.Linq.Table<MstArticleItemInventory> MstArticleItemInventories
		{
			get
			{
				return this.GetTable<MstArticleItemInventory>();
			}
		}
		
		public System.Data.Linq.Table<MstArticleItemPrice> MstArticleItemPrices
		{
			get
			{
				return this.GetTable<MstArticleItemPrice>();
			}
		}
		
		public System.Data.Linq.Table<MstArticleItemUnit> MstArticleItemUnits
		{
			get
			{
				return this.GetTable<MstArticleItemUnit>();
			}
		}
		
		public System.Data.Linq.Table<MstArticleSupplier> MstArticleSuppliers
		{
			get
			{
				return this.GetTable<MstArticleSupplier>();
			}
		}
		
		public System.Data.Linq.Table<MstArticleType> MstArticleTypes
		{
			get
			{
				return this.GetTable<MstArticleType>();
			}
		}
		
		public System.Data.Linq.Table<MstBranch> MstBranches
		{
			get
			{
				return this.GetTable<MstBranch>();
			}
		}
		
		public System.Data.Linq.Table<MstCompany> MstCompanies
		{
			get
			{
				return this.GetTable<MstCompany>();
			}
		}
		
		public System.Data.Linq.Table<MstDiscount> MstDiscounts
		{
			get
			{
				return this.GetTable<MstDiscount>();
			}
		}
		
		public System.Data.Linq.Table<MstPayType> MstPayTypes
		{
			get
			{
				return this.GetTable<MstPayType>();
			}
		}
		
		public System.Data.Linq.Table<MstPeriod> MstPeriods
		{
			get
			{
				return this.GetTable<MstPeriod>();
			}
		}
		
		public System.Data.Linq.Table<MstTax> MstTaxes
		{
			get
			{
				return this.GetTable<MstTax>();
			}
		}
		
		public System.Data.Linq.Table<MstTaxType> MstTaxTypes
		{
			get
			{
				return this.GetTable<MstTaxType>();
			}
		}
		
		public System.Data.Linq.Table<MstTerm> MstTerms
		{
			get
			{
				return this.GetTable<MstTerm>();
			}
		}
		
		public System.Data.Linq.Table<MstUnit> MstUnits
		{
			get
			{
				return this.GetTable<MstUnit>();
			}
		}
		
		public System.Data.Linq.Table<MstUser> MstUsers
		{
			get
			{
				return this.GetTable<MstUser>();
			}
		}
		
		public System.Data.Linq.Table<MstUserSerialNumber> MstUserSerialNumbers
		{
			get
			{
				return this.GetTable<MstUserSerialNumber>();
			}
		}
		
		public System.Data.Linq.Table<MstUserStaff> MstUserStaffs
		{
			get
			{
				return this.GetTable<MstUserStaff>();
			}
		}
		
		public System.Data.Linq.Table<MstUserStaffRole> MstUserStaffRoles
		{
			get
			{
				return this.GetTable<MstUserStaffRole>();
			}
		}
		
		public System.Data.Linq.Table<Profile> Profiles
		{
			get
			{
				return this.GetTable<Profile>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<SysPage> SysPages
		{
			get
			{
				return this.GetTable<SysPage>();
			}
		}
		
		public System.Data.Linq.Table<SysRole> SysRoles
		{
			get
			{
				return this.GetTable<SysRole>();
			}
		}
		
		public System.Data.Linq.Table<SysRolePage> SysRolePages
		{
			get
			{
				return this.GetTable<SysRolePage>();
			}
		}
		
		public System.Data.Linq.Table<TrnBank> TrnBanks
		{
			get
			{
				return this.GetTable<TrnBank>();
			}
		}
		
		public System.Data.Linq.Table<TrnCollection> TrnCollections
		{
			get
			{
				return this.GetTable<TrnCollection>();
			}
		}
		
		public System.Data.Linq.Table<TrnCollectionLine> TrnCollectionLines
		{
			get
			{
				return this.GetTable<TrnCollectionLine>();
			}
		}
		
		public System.Data.Linq.Table<TrnDisbursement> TrnDisbursements
		{
			get
			{
				return this.GetTable<TrnDisbursement>();
			}
		}
		
		public System.Data.Linq.Table<TrnDisbursementLine> TrnDisbursementLines
		{
			get
			{
				return this.GetTable<TrnDisbursementLine>();
			}
		}
		
		public System.Data.Linq.Table<TrnInventory> TrnInventories
		{
			get
			{
				return this.GetTable<TrnInventory>();
			}
		}
		
		public System.Data.Linq.Table<TrnJournal> TrnJournals
		{
			get
			{
				return this.GetTable<TrnJournal>();
			}
		}
		
		public System.Data.Linq.Table<TrnJournalVoucher> TrnJournalVouchers
		{
			get
			{
				return this.GetTable<TrnJournalVoucher>();
			}
		}
		
		public System.Data.Linq.Table<TrnJournalVoucherLine> TrnJournalVoucherLines
		{
			get
			{
				return this.GetTable<TrnJournalVoucherLine>();
			}
		}
		
		public System.Data.Linq.Table<TrnPurchaseInvoice> TrnPurchaseInvoices
		{
			get
			{
				return this.GetTable<TrnPurchaseInvoice>();
			}
		}
		
		public System.Data.Linq.Table<TrnPurchaseInvoiceLine> TrnPurchaseInvoiceLines
		{
			get
			{
				return this.GetTable<TrnPurchaseInvoiceLine>();
			}
		}
		
		public System.Data.Linq.Table<TrnPurchaseOrder> TrnPurchaseOrders
		{
			get
			{
				return this.GetTable<TrnPurchaseOrder>();
			}
		}
		
		public System.Data.Linq.Table<TrnPurchaseOrderLine> TrnPurchaseOrderLines
		{
			get
			{
				return this.GetTable<TrnPurchaseOrderLine>();
			}
		}
		
		public System.Data.Linq.Table<TrnSalesInvoice> TrnSalesInvoices
		{
			get
			{
				return this.GetTable<TrnSalesInvoice>();
			}
		}
		
		public System.Data.Linq.Table<TrnSalesInvoiceLine> TrnSalesInvoiceLines
		{
			get
			{
				return this.GetTable<TrnSalesInvoiceLine>();
			}
		}
		
		public System.Data.Linq.Table<TrnSalesOrder> TrnSalesOrders
		{
			get
			{
				return this.GetTable<TrnSalesOrder>();
			}
		}
		
		public System.Data.Linq.Table<TrnSalesOrderLine> TrnSalesOrderLines
		{
			get
			{
				return this.GetTable<TrnSalesOrderLine>();
			}
		}
		
		public System.Data.Linq.Table<TrnStockIn> TrnStockIns
		{
			get
			{
				return this.GetTable<TrnStockIn>();
			}
		}
		
		public System.Data.Linq.Table<TrnStockInLine> TrnStockInLines
		{
			get
			{
				return this.GetTable<TrnStockInLine>();
			}
		}
		
		public System.Data.Linq.Table<TrnStockOut> TrnStockOuts
		{
			get
			{
				return this.GetTable<TrnStockOut>();
			}
		}
		
		public System.Data.Linq.Table<TrnStockOutLine> TrnStockOutLines
		{
			get
			{
				return this.GetTable<TrnStockOutLine>();
			}
		}
		
		public System.Data.Linq.Table<TrnStockTransfer> TrnStockTransfers
		{
			get
			{
				return this.GetTable<TrnStockTransfer>();
			}
		}
		
		public System.Data.Linq.Table<TrnStockTransferLine> TrnStockTransferLines
		{
			get
			{
				return this.GetTable<TrnStockTransferLine>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<UsersInRole> UsersInRoles
		{
			get
			{
				return this.GetTable<UsersInRole>();
			}
		}
		
		public System.Data.Linq.Table<UsersOpenAuthAccount> UsersOpenAuthAccounts
		{
			get
			{
				return this.GetTable<UsersOpenAuthAccount>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UsersOpenAuthData")]
	public partial class UsersOpenAuthData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ApplicationName;
		
		private string _MembershipUserName;
		
		private bool _HasLocalPassword;
		
		private EntitySet<UsersOpenAuthAccount> _UsersOpenAuthAccounts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationNameChanging(string value);
    partial void OnApplicationNameChanged();
    partial void OnMembershipUserNameChanging(string value);
    partial void OnMembershipUserNameChanged();
    partial void OnHasLocalPasswordChanging(bool value);
    partial void OnHasLocalPasswordChanged();
    #endregion
		
		public UsersOpenAuthData()
		{
			this._UsersOpenAuthAccounts = new EntitySet<UsersOpenAuthAccount>(new Action<UsersOpenAuthAccount>(this.attach_UsersOpenAuthAccounts), new Action<UsersOpenAuthAccount>(this.detach_UsersOpenAuthAccounts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationName", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ApplicationName
		{
			get
			{
				return this._ApplicationName;
			}
			set
			{
				if ((this._ApplicationName != value))
				{
					this.OnApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._ApplicationName = value;
					this.SendPropertyChanged("ApplicationName");
					this.OnApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MembershipUserName", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MembershipUserName
		{
			get
			{
				return this._MembershipUserName;
			}
			set
			{
				if ((this._MembershipUserName != value))
				{
					this.OnMembershipUserNameChanging(value);
					this.SendPropertyChanging();
					this._MembershipUserName = value;
					this.SendPropertyChanged("MembershipUserName");
					this.OnMembershipUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasLocalPassword", DbType="Bit NOT NULL")]
		public bool HasLocalPassword
		{
			get
			{
				return this._HasLocalPassword;
			}
			set
			{
				if ((this._HasLocalPassword != value))
				{
					this.OnHasLocalPasswordChanging(value);
					this.SendPropertyChanging();
					this._HasLocalPassword = value;
					this.SendPropertyChanged("HasLocalPassword");
					this.OnHasLocalPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UsersOpenAuthData_UsersOpenAuthAccount", Storage="_UsersOpenAuthAccounts", ThisKey="ApplicationName,MembershipUserName", OtherKey="ApplicationName,MembershipUserName")]
		public EntitySet<UsersOpenAuthAccount> UsersOpenAuthAccounts
		{
			get
			{
				return this._UsersOpenAuthAccounts;
			}
			set
			{
				this._UsersOpenAuthAccounts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UsersOpenAuthAccounts(UsersOpenAuthAccount entity)
		{
			this.SendPropertyChanging();
			entity.UsersOpenAuthData = this;
		}
		
		private void detach_UsersOpenAuthAccounts(UsersOpenAuthAccount entity)
		{
			this.SendPropertyChanging();
			entity.UsersOpenAuthData = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Applications")]
	public partial class Application : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ApplicationName;
		
		private System.Guid _ApplicationId;
		
		private string _Description;
		
		private EntitySet<Membership> _Memberships;
		
		private EntitySet<Role> _Roles;
		
		private EntitySet<User> _Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationNameChanging(string value);
    partial void OnApplicationNameChanged();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Application()
		{
			this._Memberships = new EntitySet<Membership>(new Action<Membership>(this.attach_Memberships), new Action<Membership>(this.detach_Memberships));
			this._Roles = new EntitySet<Role>(new Action<Role>(this.attach_Roles), new Action<Role>(this.detach_Roles));
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationName", DbType="NVarChar(235) NOT NULL", CanBeNull=false)]
		public string ApplicationName
		{
			get
			{
				return this._ApplicationName;
			}
			set
			{
				if ((this._ApplicationName != value))
				{
					this.OnApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._ApplicationName = value;
					this.SendPropertyChanged("ApplicationName");
					this.OnApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_Membership", Storage="_Memberships", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<Membership> Memberships
		{
			get
			{
				return this._Memberships;
			}
			set
			{
				this._Memberships.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_Role", Storage="_Roles", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<Role> Roles
		{
			get
			{
				return this._Roles;
			}
			set
			{
				this._Roles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_User", Storage="_Users", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Memberships(Membership entity)
		{
			this.SendPropertyChanging();
			entity.Application = this;
		}
		
		private void detach_Memberships(Membership entity)
		{
			this.SendPropertyChanging();
			entity.Application = null;
		}
		
		private void attach_Roles(Role entity)
		{
			this.SendPropertyChanging();
			entity.Application = this;
		}
		
		private void detach_Roles(Role entity)
		{
			this.SendPropertyChanging();
			entity.Application = null;
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Application = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Application = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Memberships")]
	public partial class Membership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _Password;
		
		private int _PasswordFormat;
		
		private string _PasswordSalt;
		
		private string _Email;
		
		private string _PasswordQuestion;
		
		private string _PasswordAnswer;
		
		private bool _IsApproved;
		
		private bool _IsLockedOut;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _LastLoginDate;
		
		private System.DateTime _LastPasswordChangedDate;
		
		private System.DateTime _LastLockoutDate;
		
		private int _FailedPasswordAttemptCount;
		
		private System.DateTime _FailedPasswordAttemptWindowStart;
		
		private int _FailedPasswordAnswerAttemptCount;
		
		private System.DateTime _FailedPasswordAnswerAttemptWindowsStart;
		
		private string _Comment;
		
		private EntitySet<MstUser> _MstUsers;
		
		private EntityRef<Application> _Application;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordFormatChanging(int value);
    partial void OnPasswordFormatChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordQuestionChanging(string value);
    partial void OnPasswordQuestionChanged();
    partial void OnPasswordAnswerChanging(string value);
    partial void OnPasswordAnswerChanged();
    partial void OnIsApprovedChanging(bool value);
    partial void OnIsApprovedChanged();
    partial void OnIsLockedOutChanging(bool value);
    partial void OnIsLockedOutChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnLastLoginDateChanging(System.DateTime value);
    partial void OnLastLoginDateChanged();
    partial void OnLastPasswordChangedDateChanging(System.DateTime value);
    partial void OnLastPasswordChangedDateChanged();
    partial void OnLastLockoutDateChanging(System.DateTime value);
    partial void OnLastLockoutDateChanged();
    partial void OnFailedPasswordAttemptCountChanging(int value);
    partial void OnFailedPasswordAttemptCountChanged();
    partial void OnFailedPasswordAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAttemptWindowStartChanged();
    partial void OnFailedPasswordAnswerAttemptCountChanging(int value);
    partial void OnFailedPasswordAnswerAttemptCountChanged();
    partial void OnFailedPasswordAnswerAttemptWindowsStartChanging(System.DateTime value);
    partial void OnFailedPasswordAnswerAttemptWindowsStartChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public Membership()
		{
			this._MstUsers = new EntitySet<MstUser>(new Action<MstUser>(this.attach_MstUsers), new Action<MstUser>(this.detach_MstUsers));
			this._Application = default(EntityRef<Application>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordFormat", DbType="Int NOT NULL")]
		public int PasswordFormat
		{
			get
			{
				return this._PasswordFormat;
			}
			set
			{
				if ((this._PasswordFormat != value))
				{
					this.OnPasswordFormatChanging(value);
					this.SendPropertyChanging();
					this._PasswordFormat = value;
					this.SendPropertyChanged("PasswordFormat");
					this.OnPasswordFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordQuestion", DbType="NVarChar(256)")]
		public string PasswordQuestion
		{
			get
			{
				return this._PasswordQuestion;
			}
			set
			{
				if ((this._PasswordQuestion != value))
				{
					this.OnPasswordQuestionChanging(value);
					this.SendPropertyChanging();
					this._PasswordQuestion = value;
					this.SendPropertyChanged("PasswordQuestion");
					this.OnPasswordQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordAnswer", DbType="NVarChar(128)")]
		public string PasswordAnswer
		{
			get
			{
				return this._PasswordAnswer;
			}
			set
			{
				if ((this._PasswordAnswer != value))
				{
					this.OnPasswordAnswerChanging(value);
					this.SendPropertyChanging();
					this._PasswordAnswer = value;
					this.SendPropertyChanged("PasswordAnswer");
					this.OnPasswordAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit NOT NULL")]
		public bool IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLockedOut", DbType="Bit NOT NULL")]
		public bool IsLockedOut
		{
			get
			{
				return this._IsLockedOut;
			}
			set
			{
				if ((this._IsLockedOut != value))
				{
					this.OnIsLockedOutChanging(value);
					this.SendPropertyChanging();
					this._IsLockedOut = value;
					this.SendPropertyChanged("IsLockedOut");
					this.OnIsLockedOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPasswordChangedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastPasswordChangedDate
		{
			get
			{
				return this._LastPasswordChangedDate;
			}
			set
			{
				if ((this._LastPasswordChangedDate != value))
				{
					this.OnLastPasswordChangedDateChanging(value);
					this.SendPropertyChanging();
					this._LastPasswordChangedDate = value;
					this.SendPropertyChanged("LastPasswordChangedDate");
					this.OnLastPasswordChangedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLockoutDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLockoutDate
		{
			get
			{
				return this._LastLockoutDate;
			}
			set
			{
				if ((this._LastLockoutDate != value))
				{
					this.OnLastLockoutDateChanging(value);
					this.SendPropertyChanging();
					this._LastLockoutDate = value;
					this.SendPropertyChanged("LastLockoutDate");
					this.OnLastLockoutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAttemptCount
		{
			get
			{
				return this._FailedPasswordAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAttemptCount != value))
				{
					this.OnFailedPasswordAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAttemptCount");
					this.OnFailedPasswordAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAttemptWindowStart != value))
				{
					this.OnFailedPasswordAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAttemptWindowStart");
					this.OnFailedPasswordAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAnswerAttemptCount
		{
			get
			{
				return this._FailedPasswordAnswerAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptCount != value))
				{
					this.OnFailedPasswordAnswerAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptCount");
					this.OnFailedPasswordAnswerAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptWindowsStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAnswerAttemptWindowsStart
		{
			get
			{
				return this._FailedPasswordAnswerAttemptWindowsStart;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptWindowsStart != value))
				{
					this.OnFailedPasswordAnswerAttemptWindowsStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptWindowsStart = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptWindowsStart");
					this.OnFailedPasswordAnswerAttemptWindowsStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(256)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Membership_MstUser", Storage="_MstUsers", ThisKey="UserId", OtherKey="MembershipUserId")]
		public EntitySet<MstUser> MstUsers
		{
			get
			{
				return this._MstUsers;
			}
			set
			{
				this._MstUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_Membership", Storage="_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public Application Application
		{
			get
			{
				return this._Application.Entity;
			}
			set
			{
				Application previousValue = this._Application.Entity;
				if (((previousValue != value) 
							|| (this._Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Application.Entity = null;
						previousValue.Memberships.Remove(this);
					}
					this._Application.Entity = value;
					if ((value != null))
					{
						value.Memberships.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("Application");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Membership", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Membership = null;
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Membership = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstUsers(MstUser entity)
		{
			this.SendPropertyChanging();
			entity.Membership = this;
		}
		
		private void detach_MstUsers(MstUser entity)
		{
			this.SendPropertyChanging();
			entity.Membership = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstAccount")]
	public partial class MstAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _UserId;
		
		private string _AccountCode;
		
		private string _Account;
		
		private long _AccountTypeId;
		
		private bool _IsLocked;
		
		private long _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private long _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private System.Nullable<long> _AccountCashFlowId;
		
		private EntitySet<MstAccountBudget> _MstAccountBudgets;
		
		private EntitySet<MstArticle> _MstArticles;
		
		private EntitySet<MstArticleItem> _MstArticleItems;
		
		private EntitySet<MstArticleItem> _MstArticleItems1;
		
		private EntitySet<MstArticleItem> _MstArticleItems2;
		
		private EntitySet<MstArticleItem> _MstArticleItems3;
		
		private EntitySet<MstArticleItem> _MstArticleItems4;
		
		private EntitySet<MstArticleItem> _MstArticleItems5;
		
		private EntitySet<MstPayType> _MstPayTypes;
		
		private EntitySet<MstTax> _MstTaxes;
		
		private EntitySet<MstUser> _MstUsers;
		
		private EntitySet<MstUser> _MstUsers1;
		
		private EntitySet<MstUser> _MstUsers2;
		
		private EntitySet<MstUser> _MstUsers3;
		
		private EntitySet<MstUser> _MstUsers4;
		
		private EntitySet<MstUser> _MstUsers5;
		
		private EntitySet<MstUser> _MstUsers6;
		
		private EntitySet<TrnCollectionLine> _TrnCollectionLines;
		
		private EntitySet<TrnDisbursementLine> _TrnDisbursementLines;
		
		private EntitySet<TrnJournal> _TrnJournals;
		
		private EntitySet<TrnJournalVoucherLine> _TrnJournalVoucherLines;
		
		private EntitySet<TrnStockIn> _TrnStockIns;
		
		private EntitySet<TrnStockOut> _TrnStockOuts;
		
		private EntitySet<TrnStockTransfer> _TrnStockTransfers;
		
		private EntityRef<MstAccountCashFlow> _MstAccountCashFlow;
		
		private EntityRef<MstAccountType> _MstAccountType;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnAccountCodeChanging(string value);
    partial void OnAccountCodeChanged();
    partial void OnAccountChanging(string value);
    partial void OnAccountChanged();
    partial void OnAccountTypeIdChanging(long value);
    partial void OnAccountTypeIdChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(long value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(long value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    partial void OnAccountCashFlowIdChanging(System.Nullable<long> value);
    partial void OnAccountCashFlowIdChanged();
    #endregion
		
		public MstAccount()
		{
			this._MstAccountBudgets = new EntitySet<MstAccountBudget>(new Action<MstAccountBudget>(this.attach_MstAccountBudgets), new Action<MstAccountBudget>(this.detach_MstAccountBudgets));
			this._MstArticles = new EntitySet<MstArticle>(new Action<MstArticle>(this.attach_MstArticles), new Action<MstArticle>(this.detach_MstArticles));
			this._MstArticleItems = new EntitySet<MstArticleItem>(new Action<MstArticleItem>(this.attach_MstArticleItems), new Action<MstArticleItem>(this.detach_MstArticleItems));
			this._MstArticleItems1 = new EntitySet<MstArticleItem>(new Action<MstArticleItem>(this.attach_MstArticleItems1), new Action<MstArticleItem>(this.detach_MstArticleItems1));
			this._MstArticleItems2 = new EntitySet<MstArticleItem>(new Action<MstArticleItem>(this.attach_MstArticleItems2), new Action<MstArticleItem>(this.detach_MstArticleItems2));
			this._MstArticleItems3 = new EntitySet<MstArticleItem>(new Action<MstArticleItem>(this.attach_MstArticleItems3), new Action<MstArticleItem>(this.detach_MstArticleItems3));
			this._MstArticleItems4 = new EntitySet<MstArticleItem>(new Action<MstArticleItem>(this.attach_MstArticleItems4), new Action<MstArticleItem>(this.detach_MstArticleItems4));
			this._MstArticleItems5 = new EntitySet<MstArticleItem>(new Action<MstArticleItem>(this.attach_MstArticleItems5), new Action<MstArticleItem>(this.detach_MstArticleItems5));
			this._MstPayTypes = new EntitySet<MstPayType>(new Action<MstPayType>(this.attach_MstPayTypes), new Action<MstPayType>(this.detach_MstPayTypes));
			this._MstTaxes = new EntitySet<MstTax>(new Action<MstTax>(this.attach_MstTaxes), new Action<MstTax>(this.detach_MstTaxes));
			this._MstUsers = new EntitySet<MstUser>(new Action<MstUser>(this.attach_MstUsers), new Action<MstUser>(this.detach_MstUsers));
			this._MstUsers1 = new EntitySet<MstUser>(new Action<MstUser>(this.attach_MstUsers1), new Action<MstUser>(this.detach_MstUsers1));
			this._MstUsers2 = new EntitySet<MstUser>(new Action<MstUser>(this.attach_MstUsers2), new Action<MstUser>(this.detach_MstUsers2));
			this._MstUsers3 = new EntitySet<MstUser>(new Action<MstUser>(this.attach_MstUsers3), new Action<MstUser>(this.detach_MstUsers3));
			this._MstUsers4 = new EntitySet<MstUser>(new Action<MstUser>(this.attach_MstUsers4), new Action<MstUser>(this.detach_MstUsers4));
			this._MstUsers5 = new EntitySet<MstUser>(new Action<MstUser>(this.attach_MstUsers5), new Action<MstUser>(this.detach_MstUsers5));
			this._MstUsers6 = new EntitySet<MstUser>(new Action<MstUser>(this.attach_MstUsers6), new Action<MstUser>(this.detach_MstUsers6));
			this._TrnCollectionLines = new EntitySet<TrnCollectionLine>(new Action<TrnCollectionLine>(this.attach_TrnCollectionLines), new Action<TrnCollectionLine>(this.detach_TrnCollectionLines));
			this._TrnDisbursementLines = new EntitySet<TrnDisbursementLine>(new Action<TrnDisbursementLine>(this.attach_TrnDisbursementLines), new Action<TrnDisbursementLine>(this.detach_TrnDisbursementLines));
			this._TrnJournals = new EntitySet<TrnJournal>(new Action<TrnJournal>(this.attach_TrnJournals), new Action<TrnJournal>(this.detach_TrnJournals));
			this._TrnJournalVoucherLines = new EntitySet<TrnJournalVoucherLine>(new Action<TrnJournalVoucherLine>(this.attach_TrnJournalVoucherLines), new Action<TrnJournalVoucherLine>(this.detach_TrnJournalVoucherLines));
			this._TrnStockIns = new EntitySet<TrnStockIn>(new Action<TrnStockIn>(this.attach_TrnStockIns), new Action<TrnStockIn>(this.detach_TrnStockIns));
			this._TrnStockOuts = new EntitySet<TrnStockOut>(new Action<TrnStockOut>(this.attach_TrnStockOuts), new Action<TrnStockOut>(this.detach_TrnStockOuts));
			this._TrnStockTransfers = new EntitySet<TrnStockTransfer>(new Action<TrnStockTransfer>(this.attach_TrnStockTransfers), new Action<TrnStockTransfer>(this.detach_TrnStockTransfers));
			this._MstAccountCashFlow = default(EntityRef<MstAccountCashFlow>);
			this._MstAccountType = default(EntityRef<MstAccountType>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountCode
		{
			get
			{
				return this._AccountCode;
			}
			set
			{
				if ((this._AccountCode != value))
				{
					this.OnAccountCodeChanging(value);
					this.SendPropertyChanging();
					this._AccountCode = value;
					this.SendPropertyChanged("AccountCode");
					this.OnAccountCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Account
		{
			get
			{
				return this._Account;
			}
			set
			{
				if ((this._Account != value))
				{
					this.OnAccountChanging(value);
					this.SendPropertyChanging();
					this._Account = value;
					this.SendPropertyChanged("Account");
					this.OnAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountTypeId", DbType="BigInt NOT NULL")]
		public long AccountTypeId
		{
			get
			{
				return this._AccountTypeId;
			}
			set
			{
				if ((this._AccountTypeId != value))
				{
					if (this._MstAccountType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountTypeIdChanging(value);
					this.SendPropertyChanging();
					this._AccountTypeId = value;
					this.SendPropertyChanged("AccountTypeId");
					this.OnAccountTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="BigInt NOT NULL")]
		public long CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="BigInt NOT NULL")]
		public long UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountCashFlowId", DbType="BigInt")]
		public System.Nullable<long> AccountCashFlowId
		{
			get
			{
				return this._AccountCashFlowId;
			}
			set
			{
				if ((this._AccountCashFlowId != value))
				{
					if (this._MstAccountCashFlow.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountCashFlowIdChanging(value);
					this.SendPropertyChanging();
					this._AccountCashFlowId = value;
					this.SendPropertyChanged("AccountCashFlowId");
					this.OnAccountCashFlowIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstAccountBudget", Storage="_MstAccountBudgets", ThisKey="Id", OtherKey="AccountId")]
		public EntitySet<MstAccountBudget> MstAccountBudgets
		{
			get
			{
				return this._MstAccountBudgets;
			}
			set
			{
				this._MstAccountBudgets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstArticle", Storage="_MstArticles", ThisKey="Id", OtherKey="AccountId")]
		public EntitySet<MstArticle> MstArticles
		{
			get
			{
				return this._MstArticles;
			}
			set
			{
				this._MstArticles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstArticleItem", Storage="_MstArticleItems", ThisKey="Id", OtherKey="AssetAccountId")]
		public EntitySet<MstArticleItem> MstArticleItems
		{
			get
			{
				return this._MstArticleItems;
			}
			set
			{
				this._MstArticleItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstArticleItem1", Storage="_MstArticleItems1", ThisKey="Id", OtherKey="PurchaseAccountId")]
		public EntitySet<MstArticleItem> MstArticleItems1
		{
			get
			{
				return this._MstArticleItems1;
			}
			set
			{
				this._MstArticleItems1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstArticleItem2", Storage="_MstArticleItems2", ThisKey="Id", OtherKey="SalesAccountId")]
		public EntitySet<MstArticleItem> MstArticleItems2
		{
			get
			{
				return this._MstArticleItems2;
			}
			set
			{
				this._MstArticleItems2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstArticleItem3", Storage="_MstArticleItems3", ThisKey="Id", OtherKey="AssetDepreciationAccountId")]
		public EntitySet<MstArticleItem> MstArticleItems3
		{
			get
			{
				return this._MstArticleItems3;
			}
			set
			{
				this._MstArticleItems3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstArticleItem4", Storage="_MstArticleItems4", ThisKey="Id", OtherKey="AssetDepreciationExpenseAccountId")]
		public EntitySet<MstArticleItem> MstArticleItems4
		{
			get
			{
				return this._MstArticleItems4;
			}
			set
			{
				this._MstArticleItems4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstArticleItem5", Storage="_MstArticleItems5", ThisKey="Id", OtherKey="CostAccountId")]
		public EntitySet<MstArticleItem> MstArticleItems5
		{
			get
			{
				return this._MstArticleItems5;
			}
			set
			{
				this._MstArticleItems5.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstPayType", Storage="_MstPayTypes", ThisKey="Id", OtherKey="AccountId")]
		public EntitySet<MstPayType> MstPayTypes
		{
			get
			{
				return this._MstPayTypes;
			}
			set
			{
				this._MstPayTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstTax", Storage="_MstTaxes", ThisKey="Id", OtherKey="AccountId")]
		public EntitySet<MstTax> MstTaxes
		{
			get
			{
				return this._MstTaxes;
			}
			set
			{
				this._MstTaxes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstUser", Storage="_MstUsers", ThisKey="Id", OtherKey="FSIncomeStatementAccountId")]
		public EntitySet<MstUser> MstUsers
		{
			get
			{
				return this._MstUsers;
			}
			set
			{
				this._MstUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstUser1", Storage="_MstUsers1", ThisKey="Id", OtherKey="SupplierAccountId")]
		public EntitySet<MstUser> MstUsers1
		{
			get
			{
				return this._MstUsers1;
			}
			set
			{
				this._MstUsers1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstUser2", Storage="_MstUsers2", ThisKey="Id", OtherKey="CustomerAccountId")]
		public EntitySet<MstUser> MstUsers2
		{
			get
			{
				return this._MstUsers2;
			}
			set
			{
				this._MstUsers2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstUser3", Storage="_MstUsers3", ThisKey="Id", OtherKey="ItemPurchaseAccountId")]
		public EntitySet<MstUser> MstUsers3
		{
			get
			{
				return this._MstUsers3;
			}
			set
			{
				this._MstUsers3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstUser4", Storage="_MstUsers4", ThisKey="Id", OtherKey="ItemSalesAccountId")]
		public EntitySet<MstUser> MstUsers4
		{
			get
			{
				return this._MstUsers4;
			}
			set
			{
				this._MstUsers4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstUser5", Storage="_MstUsers5", ThisKey="Id", OtherKey="ItemAssetAccountId")]
		public EntitySet<MstUser> MstUsers5
		{
			get
			{
				return this._MstUsers5;
			}
			set
			{
				this._MstUsers5.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstUser6", Storage="_MstUsers6", ThisKey="Id", OtherKey="ItemCostAccountId")]
		public EntitySet<MstUser> MstUsers6
		{
			get
			{
				return this._MstUsers6;
			}
			set
			{
				this._MstUsers6.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_TrnCollectionLine", Storage="_TrnCollectionLines", ThisKey="Id", OtherKey="AccountId")]
		public EntitySet<TrnCollectionLine> TrnCollectionLines
		{
			get
			{
				return this._TrnCollectionLines;
			}
			set
			{
				this._TrnCollectionLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_TrnDisbursementLine", Storage="_TrnDisbursementLines", ThisKey="Id", OtherKey="AccountId")]
		public EntitySet<TrnDisbursementLine> TrnDisbursementLines
		{
			get
			{
				return this._TrnDisbursementLines;
			}
			set
			{
				this._TrnDisbursementLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_TrnJournal", Storage="_TrnJournals", ThisKey="Id", OtherKey="AccountId")]
		public EntitySet<TrnJournal> TrnJournals
		{
			get
			{
				return this._TrnJournals;
			}
			set
			{
				this._TrnJournals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_TrnJournalVoucherLine", Storage="_TrnJournalVoucherLines", ThisKey="Id", OtherKey="AccountId")]
		public EntitySet<TrnJournalVoucherLine> TrnJournalVoucherLines
		{
			get
			{
				return this._TrnJournalVoucherLines;
			}
			set
			{
				this._TrnJournalVoucherLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_TrnStockIn", Storage="_TrnStockIns", ThisKey="Id", OtherKey="AccountId")]
		public EntitySet<TrnStockIn> TrnStockIns
		{
			get
			{
				return this._TrnStockIns;
			}
			set
			{
				this._TrnStockIns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_TrnStockOut", Storage="_TrnStockOuts", ThisKey="Id", OtherKey="AccountId")]
		public EntitySet<TrnStockOut> TrnStockOuts
		{
			get
			{
				return this._TrnStockOuts;
			}
			set
			{
				this._TrnStockOuts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_TrnStockTransfer", Storage="_TrnStockTransfers", ThisKey="Id", OtherKey="AccountId")]
		public EntitySet<TrnStockTransfer> TrnStockTransfers
		{
			get
			{
				return this._TrnStockTransfers;
			}
			set
			{
				this._TrnStockTransfers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccountCashFlow_MstAccount", Storage="_MstAccountCashFlow", ThisKey="AccountCashFlowId", OtherKey="Id", IsForeignKey=true)]
		public MstAccountCashFlow MstAccountCashFlow
		{
			get
			{
				return this._MstAccountCashFlow.Entity;
			}
			set
			{
				MstAccountCashFlow previousValue = this._MstAccountCashFlow.Entity;
				if (((previousValue != value) 
							|| (this._MstAccountCashFlow.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccountCashFlow.Entity = null;
						previousValue.MstAccounts.Remove(this);
					}
					this._MstAccountCashFlow.Entity = value;
					if ((value != null))
					{
						value.MstAccounts.Add(this);
						this._AccountCashFlowId = value.Id;
					}
					else
					{
						this._AccountCashFlowId = default(Nullable<long>);
					}
					this.SendPropertyChanged("MstAccountCashFlow");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccountType_MstAccount", Storage="_MstAccountType", ThisKey="AccountTypeId", OtherKey="Id", IsForeignKey=true)]
		public MstAccountType MstAccountType
		{
			get
			{
				return this._MstAccountType.Entity;
			}
			set
			{
				MstAccountType previousValue = this._MstAccountType.Entity;
				if (((previousValue != value) 
							|| (this._MstAccountType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccountType.Entity = null;
						previousValue.MstAccounts.Remove(this);
					}
					this._MstAccountType.Entity = value;
					if ((value != null))
					{
						value.MstAccounts.Add(this);
						this._AccountTypeId = value.Id;
					}
					else
					{
						this._AccountTypeId = default(long);
					}
					this.SendPropertyChanged("MstAccountType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstAccount", Storage="_MstUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstAccounts.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstAccounts.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(long);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstAccount1", Storage="_MstUser1", ThisKey="CreatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.MstAccounts1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.MstAccounts1.Add(this);
						this._CreatedById = value.Id;
					}
					else
					{
						this._CreatedById = default(long);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstAccount2", Storage="_MstUser2", ThisKey="UpdatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.MstAccounts2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.MstAccounts2.Add(this);
						this._UpdatedById = value.Id;
					}
					else
					{
						this._UpdatedById = default(long);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstAccountBudgets(MstAccountBudget entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = this;
		}
		
		private void detach_MstAccountBudgets(MstAccountBudget entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = null;
		}
		
		private void attach_MstArticles(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = this;
		}
		
		private void detach_MstArticles(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = null;
		}
		
		private void attach_MstArticleItems(MstArticleItem entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = this;
		}
		
		private void detach_MstArticleItems(MstArticleItem entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = null;
		}
		
		private void attach_MstArticleItems1(MstArticleItem entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount1 = this;
		}
		
		private void detach_MstArticleItems1(MstArticleItem entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount1 = null;
		}
		
		private void attach_MstArticleItems2(MstArticleItem entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount2 = this;
		}
		
		private void detach_MstArticleItems2(MstArticleItem entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount2 = null;
		}
		
		private void attach_MstArticleItems3(MstArticleItem entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount3 = this;
		}
		
		private void detach_MstArticleItems3(MstArticleItem entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount3 = null;
		}
		
		private void attach_MstArticleItems4(MstArticleItem entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount4 = this;
		}
		
		private void detach_MstArticleItems4(MstArticleItem entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount4 = null;
		}
		
		private void attach_MstArticleItems5(MstArticleItem entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount5 = this;
		}
		
		private void detach_MstArticleItems5(MstArticleItem entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount5 = null;
		}
		
		private void attach_MstPayTypes(MstPayType entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = this;
		}
		
		private void detach_MstPayTypes(MstPayType entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = null;
		}
		
		private void attach_MstTaxes(MstTax entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = this;
		}
		
		private void detach_MstTaxes(MstTax entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = null;
		}
		
		private void attach_MstUsers(MstUser entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = this;
		}
		
		private void detach_MstUsers(MstUser entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = null;
		}
		
		private void attach_MstUsers1(MstUser entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount1 = this;
		}
		
		private void detach_MstUsers1(MstUser entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount1 = null;
		}
		
		private void attach_MstUsers2(MstUser entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount2 = this;
		}
		
		private void detach_MstUsers2(MstUser entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount2 = null;
		}
		
		private void attach_MstUsers3(MstUser entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount3 = this;
		}
		
		private void detach_MstUsers3(MstUser entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount3 = null;
		}
		
		private void attach_MstUsers4(MstUser entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount4 = this;
		}
		
		private void detach_MstUsers4(MstUser entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount4 = null;
		}
		
		private void attach_MstUsers5(MstUser entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount5 = this;
		}
		
		private void detach_MstUsers5(MstUser entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount5 = null;
		}
		
		private void attach_MstUsers6(MstUser entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount6 = this;
		}
		
		private void detach_MstUsers6(MstUser entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount6 = null;
		}
		
		private void attach_TrnCollectionLines(TrnCollectionLine entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = this;
		}
		
		private void detach_TrnCollectionLines(TrnCollectionLine entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = null;
		}
		
		private void attach_TrnDisbursementLines(TrnDisbursementLine entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = this;
		}
		
		private void detach_TrnDisbursementLines(TrnDisbursementLine entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = null;
		}
		
		private void attach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = this;
		}
		
		private void detach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = null;
		}
		
		private void attach_TrnJournalVoucherLines(TrnJournalVoucherLine entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = this;
		}
		
		private void detach_TrnJournalVoucherLines(TrnJournalVoucherLine entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = null;
		}
		
		private void attach_TrnStockIns(TrnStockIn entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = this;
		}
		
		private void detach_TrnStockIns(TrnStockIn entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = null;
		}
		
		private void attach_TrnStockOuts(TrnStockOut entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = this;
		}
		
		private void detach_TrnStockOuts(TrnStockOut entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = null;
		}
		
		private void attach_TrnStockTransfers(TrnStockTransfer entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = this;
		}
		
		private void detach_TrnStockTransfers(TrnStockTransfer entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstAccountBudget")]
	public partial class MstAccountBudget : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _AccountId;
		
		private long _PeriodId;
		
		private long _CompanyId;
		
		private string _Particulars;
		
		private decimal _Amount;
		
		private EntityRef<MstAccount> _MstAccount;
		
		private EntityRef<MstCompany> _MstCompany;
		
		private EntityRef<MstPeriod> _MstPeriod;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnAccountIdChanging(long value);
    partial void OnAccountIdChanged();
    partial void OnPeriodIdChanging(long value);
    partial void OnPeriodIdChanged();
    partial void OnCompanyIdChanging(long value);
    partial void OnCompanyIdChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    #endregion
		
		public MstAccountBudget()
		{
			this._MstAccount = default(EntityRef<MstAccount>);
			this._MstCompany = default(EntityRef<MstCompany>);
			this._MstPeriod = default(EntityRef<MstPeriod>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="BigInt NOT NULL")]
		public long AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._MstAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodId", DbType="BigInt NOT NULL")]
		public long PeriodId
		{
			get
			{
				return this._PeriodId;
			}
			set
			{
				if ((this._PeriodId != value))
				{
					if (this._MstPeriod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPeriodIdChanging(value);
					this.SendPropertyChanging();
					this._PeriodId = value;
					this.SendPropertyChanged("PeriodId");
					this.OnPeriodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="BigInt NOT NULL")]
		public long CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					if (this._MstCompany.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstAccountBudget", Storage="_MstAccount", ThisKey="AccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount
		{
			get
			{
				return this._MstAccount.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount.Entity = null;
						previousValue.MstAccountBudgets.Remove(this);
					}
					this._MstAccount.Entity = value;
					if ((value != null))
					{
						value.MstAccountBudgets.Add(this);
						this._AccountId = value.Id;
					}
					else
					{
						this._AccountId = default(long);
					}
					this.SendPropertyChanged("MstAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstCompany_MstAccountBudget", Storage="_MstCompany", ThisKey="CompanyId", OtherKey="Id", IsForeignKey=true)]
		public MstCompany MstCompany
		{
			get
			{
				return this._MstCompany.Entity;
			}
			set
			{
				MstCompany previousValue = this._MstCompany.Entity;
				if (((previousValue != value) 
							|| (this._MstCompany.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstCompany.Entity = null;
						previousValue.MstAccountBudgets.Remove(this);
					}
					this._MstCompany.Entity = value;
					if ((value != null))
					{
						value.MstAccountBudgets.Add(this);
						this._CompanyId = value.Id;
					}
					else
					{
						this._CompanyId = default(long);
					}
					this.SendPropertyChanged("MstCompany");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_MstAccountBudget", Storage="_MstPeriod", ThisKey="PeriodId", OtherKey="Id", IsForeignKey=true)]
		public MstPeriod MstPeriod
		{
			get
			{
				return this._MstPeriod.Entity;
			}
			set
			{
				MstPeriod previousValue = this._MstPeriod.Entity;
				if (((previousValue != value) 
							|| (this._MstPeriod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPeriod.Entity = null;
						previousValue.MstAccountBudgets.Remove(this);
					}
					this._MstPeriod.Entity = value;
					if ((value != null))
					{
						value.MstAccountBudgets.Add(this);
						this._PeriodId = value.Id;
					}
					else
					{
						this._PeriodId = default(long);
					}
					this.SendPropertyChanged("MstPeriod");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstAccountCashFlow")]
	public partial class MstAccountCashFlow : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _UserId;
		
		private string _AccountCashFlowCode;
		
		private string _AccountCashFlow;
		
		private bool _IsLocked;
		
		private long _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private long _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<MstAccount> _MstAccounts;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnAccountCashFlowCodeChanging(string value);
    partial void OnAccountCashFlowCodeChanged();
    partial void OnAccountCashFlowChanging(string value);
    partial void OnAccountCashFlowChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(long value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(long value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public MstAccountCashFlow()
		{
			this._MstAccounts = new EntitySet<MstAccount>(new Action<MstAccount>(this.attach_MstAccounts), new Action<MstAccount>(this.detach_MstAccounts));
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountCashFlowCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountCashFlowCode
		{
			get
			{
				return this._AccountCashFlowCode;
			}
			set
			{
				if ((this._AccountCashFlowCode != value))
				{
					this.OnAccountCashFlowCodeChanging(value);
					this.SendPropertyChanging();
					this._AccountCashFlowCode = value;
					this.SendPropertyChanged("AccountCashFlowCode");
					this.OnAccountCashFlowCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountCashFlow", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string AccountCashFlow
		{
			get
			{
				return this._AccountCashFlow;
			}
			set
			{
				if ((this._AccountCashFlow != value))
				{
					this.OnAccountCashFlowChanging(value);
					this.SendPropertyChanging();
					this._AccountCashFlow = value;
					this.SendPropertyChanged("AccountCashFlow");
					this.OnAccountCashFlowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="BigInt NOT NULL")]
		public long CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="BigInt NOT NULL")]
		public long UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccountCashFlow_MstAccount", Storage="_MstAccounts", ThisKey="Id", OtherKey="AccountCashFlowId")]
		public EntitySet<MstAccount> MstAccounts
		{
			get
			{
				return this._MstAccounts;
			}
			set
			{
				this._MstAccounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstAccountCashFlow", Storage="_MstUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstAccountCashFlows.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstAccountCashFlows.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(long);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstAccountCashFlow1", Storage="_MstUser1", ThisKey="CreatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.MstAccountCashFlows1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.MstAccountCashFlows1.Add(this);
						this._CreatedById = value.Id;
					}
					else
					{
						this._CreatedById = default(long);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstAccountCashFlow2", Storage="_MstUser2", ThisKey="UpdatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.MstAccountCashFlows2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.MstAccountCashFlows2.Add(this);
						this._UpdatedById = value.Id;
					}
					else
					{
						this._UpdatedById = default(long);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstAccounts(MstAccount entity)
		{
			this.SendPropertyChanging();
			entity.MstAccountCashFlow = this;
		}
		
		private void detach_MstAccounts(MstAccount entity)
		{
			this.SendPropertyChanging();
			entity.MstAccountCashFlow = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstAccountCategory")]
	public partial class MstAccountCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _UserId;
		
		private string _AccountCategoryCode;
		
		private string _AccountCategory;
		
		private bool _IsLocked;
		
		private long _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private long _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<MstAccountType> _MstAccountTypes;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnAccountCategoryCodeChanging(string value);
    partial void OnAccountCategoryCodeChanged();
    partial void OnAccountCategoryChanging(string value);
    partial void OnAccountCategoryChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(long value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(long value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public MstAccountCategory()
		{
			this._MstAccountTypes = new EntitySet<MstAccountType>(new Action<MstAccountType>(this.attach_MstAccountTypes), new Action<MstAccountType>(this.detach_MstAccountTypes));
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountCategoryCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountCategoryCode
		{
			get
			{
				return this._AccountCategoryCode;
			}
			set
			{
				if ((this._AccountCategoryCode != value))
				{
					this.OnAccountCategoryCodeChanging(value);
					this.SendPropertyChanging();
					this._AccountCategoryCode = value;
					this.SendPropertyChanged("AccountCategoryCode");
					this.OnAccountCategoryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountCategory", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string AccountCategory
		{
			get
			{
				return this._AccountCategory;
			}
			set
			{
				if ((this._AccountCategory != value))
				{
					this.OnAccountCategoryChanging(value);
					this.SendPropertyChanging();
					this._AccountCategory = value;
					this.SendPropertyChanged("AccountCategory");
					this.OnAccountCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="BigInt NOT NULL")]
		public long CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="BigInt NOT NULL")]
		public long UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccountCategory_MstAccountType", Storage="_MstAccountTypes", ThisKey="Id", OtherKey="AccountCategoryId")]
		public EntitySet<MstAccountType> MstAccountTypes
		{
			get
			{
				return this._MstAccountTypes;
			}
			set
			{
				this._MstAccountTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstAccountCategory", Storage="_MstUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstAccountCategories.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstAccountCategories.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(long);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstAccountCategory1", Storage="_MstUser1", ThisKey="CreatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.MstAccountCategories1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.MstAccountCategories1.Add(this);
						this._CreatedById = value.Id;
					}
					else
					{
						this._CreatedById = default(long);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstAccountCategory2", Storage="_MstUser2", ThisKey="UpdatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.MstAccountCategories2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.MstAccountCategories2.Add(this);
						this._UpdatedById = value.Id;
					}
					else
					{
						this._UpdatedById = default(long);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstAccountTypes(MstAccountType entity)
		{
			this.SendPropertyChanging();
			entity.MstAccountCategory = this;
		}
		
		private void detach_MstAccountTypes(MstAccountType entity)
		{
			this.SendPropertyChanging();
			entity.MstAccountCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstAccountType")]
	public partial class MstAccountType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _UserId;
		
		private string _AccountTypeCode;
		
		private string _AccountType;
		
		private long _AccountCategoryId;
		
		private bool _IsLocked;
		
		private long _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private long _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<MstAccount> _MstAccounts;
		
		private EntityRef<MstAccountCategory> _MstAccountCategory;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnAccountTypeCodeChanging(string value);
    partial void OnAccountTypeCodeChanged();
    partial void OnAccountTypeChanging(string value);
    partial void OnAccountTypeChanged();
    partial void OnAccountCategoryIdChanging(long value);
    partial void OnAccountCategoryIdChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(long value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(long value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public MstAccountType()
		{
			this._MstAccounts = new EntitySet<MstAccount>(new Action<MstAccount>(this.attach_MstAccounts), new Action<MstAccount>(this.detach_MstAccounts));
			this._MstAccountCategory = default(EntityRef<MstAccountCategory>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountTypeCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountTypeCode
		{
			get
			{
				return this._AccountTypeCode;
			}
			set
			{
				if ((this._AccountTypeCode != value))
				{
					this.OnAccountTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._AccountTypeCode = value;
					this.SendPropertyChanged("AccountTypeCode");
					this.OnAccountTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountType", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string AccountType
		{
			get
			{
				return this._AccountType;
			}
			set
			{
				if ((this._AccountType != value))
				{
					this.OnAccountTypeChanging(value);
					this.SendPropertyChanging();
					this._AccountType = value;
					this.SendPropertyChanged("AccountType");
					this.OnAccountTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountCategoryId", DbType="BigInt NOT NULL")]
		public long AccountCategoryId
		{
			get
			{
				return this._AccountCategoryId;
			}
			set
			{
				if ((this._AccountCategoryId != value))
				{
					if (this._MstAccountCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._AccountCategoryId = value;
					this.SendPropertyChanged("AccountCategoryId");
					this.OnAccountCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="BigInt NOT NULL")]
		public long CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="BigInt NOT NULL")]
		public long UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccountType_MstAccount", Storage="_MstAccounts", ThisKey="Id", OtherKey="AccountTypeId")]
		public EntitySet<MstAccount> MstAccounts
		{
			get
			{
				return this._MstAccounts;
			}
			set
			{
				this._MstAccounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccountCategory_MstAccountType", Storage="_MstAccountCategory", ThisKey="AccountCategoryId", OtherKey="Id", IsForeignKey=true)]
		public MstAccountCategory MstAccountCategory
		{
			get
			{
				return this._MstAccountCategory.Entity;
			}
			set
			{
				MstAccountCategory previousValue = this._MstAccountCategory.Entity;
				if (((previousValue != value) 
							|| (this._MstAccountCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccountCategory.Entity = null;
						previousValue.MstAccountTypes.Remove(this);
					}
					this._MstAccountCategory.Entity = value;
					if ((value != null))
					{
						value.MstAccountTypes.Add(this);
						this._AccountCategoryId = value.Id;
					}
					else
					{
						this._AccountCategoryId = default(long);
					}
					this.SendPropertyChanged("MstAccountCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstAccountType", Storage="_MstUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstAccountTypes.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstAccountTypes.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(long);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstAccountType1", Storage="_MstUser1", ThisKey="CreatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.MstAccountTypes1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.MstAccountTypes1.Add(this);
						this._CreatedById = value.Id;
					}
					else
					{
						this._CreatedById = default(long);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstAccountType2", Storage="_MstUser2", ThisKey="UpdatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.MstAccountTypes2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.MstAccountTypes2.Add(this);
						this._UpdatedById = value.Id;
					}
					else
					{
						this._UpdatedById = default(long);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstAccounts(MstAccount entity)
		{
			this.SendPropertyChanging();
			entity.MstAccountType = this;
		}
		
		private void detach_MstAccounts(MstAccount entity)
		{
			this.SendPropertyChanging();
			entity.MstAccountType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstArticle")]
	public partial class MstArticle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _UserId;
		
		private string _ArticleCode;
		
		private string _ArticleManualCode;
		
		private string _Article;
		
		private long _ArticleTypeId;
		
		private long _AccountId;
		
		private bool _IsLocked;
		
		private long _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private long _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<MstArticleBank> _MstArticleBanks;
		
		private EntitySet<MstArticleCustomer> _MstArticleCustomers;
		
		private EntitySet<MstArticleItem> _MstArticleItems;
		
		private EntitySet<MstArticleItemComponent> _MstArticleItemComponents;
		
		private EntitySet<MstArticleItemComponent> _MstArticleItemComponents1;
		
		private EntitySet<MstArticleItemInventory> _MstArticleItemInventories;
		
		private EntitySet<MstArticleItemPrice> _MstArticleItemPrices;
		
		private EntitySet<MstArticleItemUnit> _MstArticleItemUnits;
		
		private EntitySet<MstArticleSupplier> _MstArticleSuppliers;
		
		private EntitySet<TrnBank> _TrnBanks;
		
		private EntitySet<TrnCollection> _TrnCollections;
		
		private EntitySet<TrnCollectionLine> _TrnCollectionLines;
		
		private EntitySet<TrnDisbursement> _TrnDisbursements;
		
		private EntitySet<TrnDisbursement> _TrnDisbursements1;
		
		private EntitySet<TrnInventory> _TrnInventories;
		
		private EntitySet<TrnJournal> _TrnJournals;
		
		private EntitySet<TrnJournalVoucherLine> _TrnJournalVoucherLines;
		
		private EntitySet<TrnPurchaseInvoice> _TrnPurchaseInvoices;
		
		private EntitySet<TrnPurchaseInvoiceLine> _TrnPurchaseInvoiceLines;
		
		private EntitySet<TrnPurchaseOrder> _TrnPurchaseOrders;
		
		private EntitySet<TrnPurchaseOrderLine> _TrnPurchaseOrderLines;
		
		private EntitySet<TrnSalesInvoice> _TrnSalesInvoices;
		
		private EntitySet<TrnSalesInvoiceLine> _TrnSalesInvoiceLines;
		
		private EntitySet<TrnSalesOrder> _TrnSalesOrders;
		
		private EntitySet<TrnSalesOrderLine> _TrnSalesOrderLines;
		
		private EntitySet<TrnStockIn> _TrnStockIns;
		
		private EntitySet<TrnStockInLine> _TrnStockInLines;
		
		private EntitySet<TrnStockOut> _TrnStockOuts;
		
		private EntitySet<TrnStockOutLine> _TrnStockOutLines;
		
		private EntitySet<TrnStockTransfer> _TrnStockTransfers;
		
		private EntitySet<TrnStockTransferLine> _TrnStockTransferLines;
		
		private EntityRef<MstAccount> _MstAccount;
		
		private EntityRef<MstArticleType> _MstArticleType;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnArticleCodeChanging(string value);
    partial void OnArticleCodeChanged();
    partial void OnArticleManualCodeChanging(string value);
    partial void OnArticleManualCodeChanged();
    partial void OnArticleChanging(string value);
    partial void OnArticleChanged();
    partial void OnArticleTypeIdChanging(long value);
    partial void OnArticleTypeIdChanged();
    partial void OnAccountIdChanging(long value);
    partial void OnAccountIdChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(long value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(long value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public MstArticle()
		{
			this._MstArticleBanks = new EntitySet<MstArticleBank>(new Action<MstArticleBank>(this.attach_MstArticleBanks), new Action<MstArticleBank>(this.detach_MstArticleBanks));
			this._MstArticleCustomers = new EntitySet<MstArticleCustomer>(new Action<MstArticleCustomer>(this.attach_MstArticleCustomers), new Action<MstArticleCustomer>(this.detach_MstArticleCustomers));
			this._MstArticleItems = new EntitySet<MstArticleItem>(new Action<MstArticleItem>(this.attach_MstArticleItems), new Action<MstArticleItem>(this.detach_MstArticleItems));
			this._MstArticleItemComponents = new EntitySet<MstArticleItemComponent>(new Action<MstArticleItemComponent>(this.attach_MstArticleItemComponents), new Action<MstArticleItemComponent>(this.detach_MstArticleItemComponents));
			this._MstArticleItemComponents1 = new EntitySet<MstArticleItemComponent>(new Action<MstArticleItemComponent>(this.attach_MstArticleItemComponents1), new Action<MstArticleItemComponent>(this.detach_MstArticleItemComponents1));
			this._MstArticleItemInventories = new EntitySet<MstArticleItemInventory>(new Action<MstArticleItemInventory>(this.attach_MstArticleItemInventories), new Action<MstArticleItemInventory>(this.detach_MstArticleItemInventories));
			this._MstArticleItemPrices = new EntitySet<MstArticleItemPrice>(new Action<MstArticleItemPrice>(this.attach_MstArticleItemPrices), new Action<MstArticleItemPrice>(this.detach_MstArticleItemPrices));
			this._MstArticleItemUnits = new EntitySet<MstArticleItemUnit>(new Action<MstArticleItemUnit>(this.attach_MstArticleItemUnits), new Action<MstArticleItemUnit>(this.detach_MstArticleItemUnits));
			this._MstArticleSuppliers = new EntitySet<MstArticleSupplier>(new Action<MstArticleSupplier>(this.attach_MstArticleSuppliers), new Action<MstArticleSupplier>(this.detach_MstArticleSuppliers));
			this._TrnBanks = new EntitySet<TrnBank>(new Action<TrnBank>(this.attach_TrnBanks), new Action<TrnBank>(this.detach_TrnBanks));
			this._TrnCollections = new EntitySet<TrnCollection>(new Action<TrnCollection>(this.attach_TrnCollections), new Action<TrnCollection>(this.detach_TrnCollections));
			this._TrnCollectionLines = new EntitySet<TrnCollectionLine>(new Action<TrnCollectionLine>(this.attach_TrnCollectionLines), new Action<TrnCollectionLine>(this.detach_TrnCollectionLines));
			this._TrnDisbursements = new EntitySet<TrnDisbursement>(new Action<TrnDisbursement>(this.attach_TrnDisbursements), new Action<TrnDisbursement>(this.detach_TrnDisbursements));
			this._TrnDisbursements1 = new EntitySet<TrnDisbursement>(new Action<TrnDisbursement>(this.attach_TrnDisbursements1), new Action<TrnDisbursement>(this.detach_TrnDisbursements1));
			this._TrnInventories = new EntitySet<TrnInventory>(new Action<TrnInventory>(this.attach_TrnInventories), new Action<TrnInventory>(this.detach_TrnInventories));
			this._TrnJournals = new EntitySet<TrnJournal>(new Action<TrnJournal>(this.attach_TrnJournals), new Action<TrnJournal>(this.detach_TrnJournals));
			this._TrnJournalVoucherLines = new EntitySet<TrnJournalVoucherLine>(new Action<TrnJournalVoucherLine>(this.attach_TrnJournalVoucherLines), new Action<TrnJournalVoucherLine>(this.detach_TrnJournalVoucherLines));
			this._TrnPurchaseInvoices = new EntitySet<TrnPurchaseInvoice>(new Action<TrnPurchaseInvoice>(this.attach_TrnPurchaseInvoices), new Action<TrnPurchaseInvoice>(this.detach_TrnPurchaseInvoices));
			this._TrnPurchaseInvoiceLines = new EntitySet<TrnPurchaseInvoiceLine>(new Action<TrnPurchaseInvoiceLine>(this.attach_TrnPurchaseInvoiceLines), new Action<TrnPurchaseInvoiceLine>(this.detach_TrnPurchaseInvoiceLines));
			this._TrnPurchaseOrders = new EntitySet<TrnPurchaseOrder>(new Action<TrnPurchaseOrder>(this.attach_TrnPurchaseOrders), new Action<TrnPurchaseOrder>(this.detach_TrnPurchaseOrders));
			this._TrnPurchaseOrderLines = new EntitySet<TrnPurchaseOrderLine>(new Action<TrnPurchaseOrderLine>(this.attach_TrnPurchaseOrderLines), new Action<TrnPurchaseOrderLine>(this.detach_TrnPurchaseOrderLines));
			this._TrnSalesInvoices = new EntitySet<TrnSalesInvoice>(new Action<TrnSalesInvoice>(this.attach_TrnSalesInvoices), new Action<TrnSalesInvoice>(this.detach_TrnSalesInvoices));
			this._TrnSalesInvoiceLines = new EntitySet<TrnSalesInvoiceLine>(new Action<TrnSalesInvoiceLine>(this.attach_TrnSalesInvoiceLines), new Action<TrnSalesInvoiceLine>(this.detach_TrnSalesInvoiceLines));
			this._TrnSalesOrders = new EntitySet<TrnSalesOrder>(new Action<TrnSalesOrder>(this.attach_TrnSalesOrders), new Action<TrnSalesOrder>(this.detach_TrnSalesOrders));
			this._TrnSalesOrderLines = new EntitySet<TrnSalesOrderLine>(new Action<TrnSalesOrderLine>(this.attach_TrnSalesOrderLines), new Action<TrnSalesOrderLine>(this.detach_TrnSalesOrderLines));
			this._TrnStockIns = new EntitySet<TrnStockIn>(new Action<TrnStockIn>(this.attach_TrnStockIns), new Action<TrnStockIn>(this.detach_TrnStockIns));
			this._TrnStockInLines = new EntitySet<TrnStockInLine>(new Action<TrnStockInLine>(this.attach_TrnStockInLines), new Action<TrnStockInLine>(this.detach_TrnStockInLines));
			this._TrnStockOuts = new EntitySet<TrnStockOut>(new Action<TrnStockOut>(this.attach_TrnStockOuts), new Action<TrnStockOut>(this.detach_TrnStockOuts));
			this._TrnStockOutLines = new EntitySet<TrnStockOutLine>(new Action<TrnStockOutLine>(this.attach_TrnStockOutLines), new Action<TrnStockOutLine>(this.detach_TrnStockOutLines));
			this._TrnStockTransfers = new EntitySet<TrnStockTransfer>(new Action<TrnStockTransfer>(this.attach_TrnStockTransfers), new Action<TrnStockTransfer>(this.detach_TrnStockTransfers));
			this._TrnStockTransferLines = new EntitySet<TrnStockTransferLine>(new Action<TrnStockTransferLine>(this.attach_TrnStockTransferLines), new Action<TrnStockTransferLine>(this.detach_TrnStockTransferLines));
			this._MstAccount = default(EntityRef<MstAccount>);
			this._MstArticleType = default(EntityRef<MstArticleType>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ArticleCode
		{
			get
			{
				return this._ArticleCode;
			}
			set
			{
				if ((this._ArticleCode != value))
				{
					this.OnArticleCodeChanging(value);
					this.SendPropertyChanging();
					this._ArticleCode = value;
					this.SendPropertyChanged("ArticleCode");
					this.OnArticleCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleManualCode", DbType="NVarChar(50)")]
		public string ArticleManualCode
		{
			get
			{
				return this._ArticleManualCode;
			}
			set
			{
				if ((this._ArticleManualCode != value))
				{
					this.OnArticleManualCodeChanging(value);
					this.SendPropertyChanging();
					this._ArticleManualCode = value;
					this.SendPropertyChanged("ArticleManualCode");
					this.OnArticleManualCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Article", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Article
		{
			get
			{
				return this._Article;
			}
			set
			{
				if ((this._Article != value))
				{
					this.OnArticleChanging(value);
					this.SendPropertyChanging();
					this._Article = value;
					this.SendPropertyChanged("Article");
					this.OnArticleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleTypeId", DbType="BigInt NOT NULL")]
		public long ArticleTypeId
		{
			get
			{
				return this._ArticleTypeId;
			}
			set
			{
				if ((this._ArticleTypeId != value))
				{
					if (this._MstArticleType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticleTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleTypeId = value;
					this.SendPropertyChanged("ArticleTypeId");
					this.OnArticleTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="BigInt NOT NULL")]
		public long AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._MstAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="BigInt NOT NULL")]
		public long CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="BigInt NOT NULL")]
		public long UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_MstArticleBank", Storage="_MstArticleBanks", ThisKey="Id", OtherKey="ArticleId")]
		public EntitySet<MstArticleBank> MstArticleBanks
		{
			get
			{
				return this._MstArticleBanks;
			}
			set
			{
				this._MstArticleBanks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_MstArticleCustomer", Storage="_MstArticleCustomers", ThisKey="Id", OtherKey="ArticleId")]
		public EntitySet<MstArticleCustomer> MstArticleCustomers
		{
			get
			{
				return this._MstArticleCustomers;
			}
			set
			{
				this._MstArticleCustomers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_MstArticleItem", Storage="_MstArticleItems", ThisKey="Id", OtherKey="ArticleId")]
		public EntitySet<MstArticleItem> MstArticleItems
		{
			get
			{
				return this._MstArticleItems;
			}
			set
			{
				this._MstArticleItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_MstArticleItemComponent", Storage="_MstArticleItemComponents", ThisKey="Id", OtherKey="ArticleId")]
		public EntitySet<MstArticleItemComponent> MstArticleItemComponents
		{
			get
			{
				return this._MstArticleItemComponents;
			}
			set
			{
				this._MstArticleItemComponents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_MstArticleItemComponent1", Storage="_MstArticleItemComponents1", ThisKey="Id", OtherKey="ComponentArticleId")]
		public EntitySet<MstArticleItemComponent> MstArticleItemComponents1
		{
			get
			{
				return this._MstArticleItemComponents1;
			}
			set
			{
				this._MstArticleItemComponents1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_MstArticleItemInventory", Storage="_MstArticleItemInventories", ThisKey="Id", OtherKey="ArticleId")]
		public EntitySet<MstArticleItemInventory> MstArticleItemInventories
		{
			get
			{
				return this._MstArticleItemInventories;
			}
			set
			{
				this._MstArticleItemInventories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_MstArticleItemPrice", Storage="_MstArticleItemPrices", ThisKey="Id", OtherKey="ArticleId")]
		public EntitySet<MstArticleItemPrice> MstArticleItemPrices
		{
			get
			{
				return this._MstArticleItemPrices;
			}
			set
			{
				this._MstArticleItemPrices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_MstArticleItemUnit", Storage="_MstArticleItemUnits", ThisKey="Id", OtherKey="ArticleId")]
		public EntitySet<MstArticleItemUnit> MstArticleItemUnits
		{
			get
			{
				return this._MstArticleItemUnits;
			}
			set
			{
				this._MstArticleItemUnits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_MstArticleSupplier", Storage="_MstArticleSuppliers", ThisKey="Id", OtherKey="ArticleId")]
		public EntitySet<MstArticleSupplier> MstArticleSuppliers
		{
			get
			{
				return this._MstArticleSuppliers;
			}
			set
			{
				this._MstArticleSuppliers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnBank", Storage="_TrnBanks", ThisKey="Id", OtherKey="BankId")]
		public EntitySet<TrnBank> TrnBanks
		{
			get
			{
				return this._TrnBanks;
			}
			set
			{
				this._TrnBanks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnCollection", Storage="_TrnCollections", ThisKey="Id", OtherKey="CustomerId")]
		public EntitySet<TrnCollection> TrnCollections
		{
			get
			{
				return this._TrnCollections;
			}
			set
			{
				this._TrnCollections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnCollectionLine", Storage="_TrnCollectionLines", ThisKey="Id", OtherKey="BankId")]
		public EntitySet<TrnCollectionLine> TrnCollectionLines
		{
			get
			{
				return this._TrnCollectionLines;
			}
			set
			{
				this._TrnCollectionLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnDisbursement", Storage="_TrnDisbursements", ThisKey="Id", OtherKey="SupplierId")]
		public EntitySet<TrnDisbursement> TrnDisbursements
		{
			get
			{
				return this._TrnDisbursements;
			}
			set
			{
				this._TrnDisbursements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnDisbursement1", Storage="_TrnDisbursements1", ThisKey="Id", OtherKey="BankId")]
		public EntitySet<TrnDisbursement> TrnDisbursements1
		{
			get
			{
				return this._TrnDisbursements1;
			}
			set
			{
				this._TrnDisbursements1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnInventory", Storage="_TrnInventories", ThisKey="Id", OtherKey="ItemId")]
		public EntitySet<TrnInventory> TrnInventories
		{
			get
			{
				return this._TrnInventories;
			}
			set
			{
				this._TrnInventories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnJournal", Storage="_TrnJournals", ThisKey="Id", OtherKey="ArticleId")]
		public EntitySet<TrnJournal> TrnJournals
		{
			get
			{
				return this._TrnJournals;
			}
			set
			{
				this._TrnJournals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnJournalVoucherLine", Storage="_TrnJournalVoucherLines", ThisKey="Id", OtherKey="ArticleId")]
		public EntitySet<TrnJournalVoucherLine> TrnJournalVoucherLines
		{
			get
			{
				return this._TrnJournalVoucherLines;
			}
			set
			{
				this._TrnJournalVoucherLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnPurchaseInvoice", Storage="_TrnPurchaseInvoices", ThisKey="Id", OtherKey="SupplierId")]
		public EntitySet<TrnPurchaseInvoice> TrnPurchaseInvoices
		{
			get
			{
				return this._TrnPurchaseInvoices;
			}
			set
			{
				this._TrnPurchaseInvoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnPurchaseInvoiceLine", Storage="_TrnPurchaseInvoiceLines", ThisKey="Id", OtherKey="ItemId")]
		public EntitySet<TrnPurchaseInvoiceLine> TrnPurchaseInvoiceLines
		{
			get
			{
				return this._TrnPurchaseInvoiceLines;
			}
			set
			{
				this._TrnPurchaseInvoiceLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnPurchaseOrder", Storage="_TrnPurchaseOrders", ThisKey="Id", OtherKey="SupplierId")]
		public EntitySet<TrnPurchaseOrder> TrnPurchaseOrders
		{
			get
			{
				return this._TrnPurchaseOrders;
			}
			set
			{
				this._TrnPurchaseOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnPurchaseOrderLine", Storage="_TrnPurchaseOrderLines", ThisKey="Id", OtherKey="ItemId")]
		public EntitySet<TrnPurchaseOrderLine> TrnPurchaseOrderLines
		{
			get
			{
				return this._TrnPurchaseOrderLines;
			}
			set
			{
				this._TrnPurchaseOrderLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnSalesInvoice", Storage="_TrnSalesInvoices", ThisKey="Id", OtherKey="CustomerId")]
		public EntitySet<TrnSalesInvoice> TrnSalesInvoices
		{
			get
			{
				return this._TrnSalesInvoices;
			}
			set
			{
				this._TrnSalesInvoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnSalesInvoiceLine", Storage="_TrnSalesInvoiceLines", ThisKey="Id", OtherKey="ItemId")]
		public EntitySet<TrnSalesInvoiceLine> TrnSalesInvoiceLines
		{
			get
			{
				return this._TrnSalesInvoiceLines;
			}
			set
			{
				this._TrnSalesInvoiceLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnSalesOrder", Storage="_TrnSalesOrders", ThisKey="Id", OtherKey="CustomerId")]
		public EntitySet<TrnSalesOrder> TrnSalesOrders
		{
			get
			{
				return this._TrnSalesOrders;
			}
			set
			{
				this._TrnSalesOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnSalesOrderLine", Storage="_TrnSalesOrderLines", ThisKey="Id", OtherKey="ItemId")]
		public EntitySet<TrnSalesOrderLine> TrnSalesOrderLines
		{
			get
			{
				return this._TrnSalesOrderLines;
			}
			set
			{
				this._TrnSalesOrderLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnStockIn", Storage="_TrnStockIns", ThisKey="Id", OtherKey="ArticleId")]
		public EntitySet<TrnStockIn> TrnStockIns
		{
			get
			{
				return this._TrnStockIns;
			}
			set
			{
				this._TrnStockIns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnStockInLine", Storage="_TrnStockInLines", ThisKey="Id", OtherKey="ItemId")]
		public EntitySet<TrnStockInLine> TrnStockInLines
		{
			get
			{
				return this._TrnStockInLines;
			}
			set
			{
				this._TrnStockInLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnStockOut", Storage="_TrnStockOuts", ThisKey="Id", OtherKey="ArticleId")]
		public EntitySet<TrnStockOut> TrnStockOuts
		{
			get
			{
				return this._TrnStockOuts;
			}
			set
			{
				this._TrnStockOuts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnStockOutLine", Storage="_TrnStockOutLines", ThisKey="Id", OtherKey="ItemId")]
		public EntitySet<TrnStockOutLine> TrnStockOutLines
		{
			get
			{
				return this._TrnStockOutLines;
			}
			set
			{
				this._TrnStockOutLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnStockTransfer", Storage="_TrnStockTransfers", ThisKey="Id", OtherKey="ArticleId")]
		public EntitySet<TrnStockTransfer> TrnStockTransfers
		{
			get
			{
				return this._TrnStockTransfers;
			}
			set
			{
				this._TrnStockTransfers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnStockTransferLine", Storage="_TrnStockTransferLines", ThisKey="Id", OtherKey="ItemId")]
		public EntitySet<TrnStockTransferLine> TrnStockTransferLines
		{
			get
			{
				return this._TrnStockTransferLines;
			}
			set
			{
				this._TrnStockTransferLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstArticle", Storage="_MstAccount", ThisKey="AccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount
		{
			get
			{
				return this._MstAccount.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount.Entity = null;
						previousValue.MstArticles.Remove(this);
					}
					this._MstAccount.Entity = value;
					if ((value != null))
					{
						value.MstArticles.Add(this);
						this._AccountId = value.Id;
					}
					else
					{
						this._AccountId = default(long);
					}
					this.SendPropertyChanged("MstAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleType_MstArticle", Storage="_MstArticleType", ThisKey="ArticleTypeId", OtherKey="Id", IsForeignKey=true)]
		public MstArticleType MstArticleType
		{
			get
			{
				return this._MstArticleType.Entity;
			}
			set
			{
				MstArticleType previousValue = this._MstArticleType.Entity;
				if (((previousValue != value) 
							|| (this._MstArticleType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticleType.Entity = null;
						previousValue.MstArticles.Remove(this);
					}
					this._MstArticleType.Entity = value;
					if ((value != null))
					{
						value.MstArticles.Add(this);
						this._ArticleTypeId = value.Id;
					}
					else
					{
						this._ArticleTypeId = default(long);
					}
					this.SendPropertyChanged("MstArticleType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstArticle", Storage="_MstUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstArticles.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstArticles.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(long);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstArticle1", Storage="_MstUser1", ThisKey="CreatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.MstArticles1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.MstArticles1.Add(this);
						this._CreatedById = value.Id;
					}
					else
					{
						this._CreatedById = default(long);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstArticle2", Storage="_MstUser2", ThisKey="UpdatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.MstArticles2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.MstArticles2.Add(this);
						this._UpdatedById = value.Id;
					}
					else
					{
						this._UpdatedById = default(long);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstArticleBanks(MstArticleBank entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_MstArticleBanks(MstArticleBank entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_MstArticleCustomers(MstArticleCustomer entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_MstArticleCustomers(MstArticleCustomer entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_MstArticleItems(MstArticleItem entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_MstArticleItems(MstArticleItem entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_MstArticleItemComponents(MstArticleItemComponent entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_MstArticleItemComponents(MstArticleItemComponent entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_MstArticleItemComponents1(MstArticleItemComponent entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle1 = this;
		}
		
		private void detach_MstArticleItemComponents1(MstArticleItemComponent entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle1 = null;
		}
		
		private void attach_MstArticleItemInventories(MstArticleItemInventory entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_MstArticleItemInventories(MstArticleItemInventory entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_MstArticleItemPrices(MstArticleItemPrice entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_MstArticleItemPrices(MstArticleItemPrice entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_MstArticleItemUnits(MstArticleItemUnit entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_MstArticleItemUnits(MstArticleItemUnit entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_MstArticleSuppliers(MstArticleSupplier entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_MstArticleSuppliers(MstArticleSupplier entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_TrnBanks(TrnBank entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_TrnBanks(TrnBank entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_TrnCollections(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_TrnCollections(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_TrnCollectionLines(TrnCollectionLine entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_TrnCollectionLines(TrnCollectionLine entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_TrnDisbursements(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_TrnDisbursements(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_TrnDisbursements1(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle1 = this;
		}
		
		private void detach_TrnDisbursements1(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle1 = null;
		}
		
		private void attach_TrnInventories(TrnInventory entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_TrnInventories(TrnInventory entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_TrnJournalVoucherLines(TrnJournalVoucherLine entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_TrnJournalVoucherLines(TrnJournalVoucherLine entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_TrnPurchaseInvoices(TrnPurchaseInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_TrnPurchaseInvoices(TrnPurchaseInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_TrnPurchaseInvoiceLines(TrnPurchaseInvoiceLine entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_TrnPurchaseInvoiceLines(TrnPurchaseInvoiceLine entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_TrnPurchaseOrders(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_TrnPurchaseOrders(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_TrnPurchaseOrderLines(TrnPurchaseOrderLine entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_TrnPurchaseOrderLines(TrnPurchaseOrderLine entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_TrnSalesInvoices(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_TrnSalesInvoices(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_TrnSalesInvoiceLines(TrnSalesInvoiceLine entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_TrnSalesInvoiceLines(TrnSalesInvoiceLine entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_TrnSalesOrders(TrnSalesOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_TrnSalesOrders(TrnSalesOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_TrnSalesOrderLines(TrnSalesOrderLine entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_TrnSalesOrderLines(TrnSalesOrderLine entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_TrnStockIns(TrnStockIn entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_TrnStockIns(TrnStockIn entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_TrnStockInLines(TrnStockInLine entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_TrnStockInLines(TrnStockInLine entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_TrnStockOuts(TrnStockOut entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_TrnStockOuts(TrnStockOut entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_TrnStockOutLines(TrnStockOutLine entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_TrnStockOutLines(TrnStockOutLine entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_TrnStockTransfers(TrnStockTransfer entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_TrnStockTransfers(TrnStockTransfer entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_TrnStockTransferLines(TrnStockTransferLine entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_TrnStockTransferLines(TrnStockTransferLine entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstArticleBank")]
	public partial class MstArticleBank : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _ArticleId;
		
		private string _BankAccountNumber;
		
		private string _Particulars;
		
		private string _Address;
		
		private string _ContactNumbers;
		
		private string _ContactPerson;
		
		private EntityRef<MstArticle> _MstArticle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnArticleIdChanging(long value);
    partial void OnArticleIdChanged();
    partial void OnBankAccountNumberChanging(string value);
    partial void OnBankAccountNumberChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnContactNumbersChanging(string value);
    partial void OnContactNumbersChanged();
    partial void OnContactPersonChanging(string value);
    partial void OnContactPersonChanged();
    #endregion
		
		public MstArticleBank()
		{
			this._MstArticle = default(EntityRef<MstArticle>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleId", DbType="BigInt NOT NULL")]
		public long ArticleId
		{
			get
			{
				return this._ArticleId;
			}
			set
			{
				if ((this._ArticleId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticleIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleId = value;
					this.SendPropertyChanged("ArticleId");
					this.OnArticleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccountNumber", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string BankAccountNumber
		{
			get
			{
				return this._BankAccountNumber;
			}
			set
			{
				if ((this._BankAccountNumber != value))
				{
					this.OnBankAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._BankAccountNumber = value;
					this.SendPropertyChanged("BankAccountNumber");
					this.OnBankAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNumbers", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ContactNumbers
		{
			get
			{
				return this._ContactNumbers;
			}
			set
			{
				if ((this._ContactNumbers != value))
				{
					this.OnContactNumbersChanging(value);
					this.SendPropertyChanging();
					this._ContactNumbers = value;
					this.SendPropertyChanged("ContactNumbers");
					this.OnContactNumbersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPerson", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ContactPerson
		{
			get
			{
				return this._ContactPerson;
			}
			set
			{
				if ((this._ContactPerson != value))
				{
					this.OnContactPersonChanging(value);
					this.SendPropertyChanging();
					this._ContactPerson = value;
					this.SendPropertyChanged("ContactPerson");
					this.OnContactPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_MstArticleBank", Storage="_MstArticle", ThisKey="ArticleId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.MstArticleBanks.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.MstArticleBanks.Add(this);
						this._ArticleId = value.Id;
					}
					else
					{
						this._ArticleId = default(long);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstArticleCustomer")]
	public partial class MstArticleCustomer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _ArticleId;
		
		private string _Address;
		
		private string _ContactNumbers;
		
		private string _ContactPerson;
		
		private string _EmailAddress;
		
		private long _TermId;
		
		private string _TaxNumber;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstTerm> _MstTerm;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnArticleIdChanging(long value);
    partial void OnArticleIdChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnContactNumbersChanging(string value);
    partial void OnContactNumbersChanged();
    partial void OnContactPersonChanging(string value);
    partial void OnContactPersonChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnTermIdChanging(long value);
    partial void OnTermIdChanged();
    partial void OnTaxNumberChanging(string value);
    partial void OnTaxNumberChanged();
    #endregion
		
		public MstArticleCustomer()
		{
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstTerm = default(EntityRef<MstTerm>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleId", DbType="BigInt NOT NULL")]
		public long ArticleId
		{
			get
			{
				return this._ArticleId;
			}
			set
			{
				if ((this._ArticleId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticleIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleId = value;
					this.SendPropertyChanged("ArticleId");
					this.OnArticleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNumbers", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ContactNumbers
		{
			get
			{
				return this._ContactNumbers;
			}
			set
			{
				if ((this._ContactNumbers != value))
				{
					this.OnContactNumbersChanging(value);
					this.SendPropertyChanging();
					this._ContactNumbers = value;
					this.SendPropertyChanged("ContactNumbers");
					this.OnContactNumbersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPerson", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ContactPerson
		{
			get
			{
				return this._ContactPerson;
			}
			set
			{
				if ((this._ContactPerson != value))
				{
					this.OnContactPersonChanging(value);
					this.SendPropertyChanging();
					this._ContactPerson = value;
					this.SendPropertyChanged("ContactPerson");
					this.OnContactPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="BigInt NOT NULL")]
		public long TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					if (this._MstTerm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTermIdChanging(value);
					this.SendPropertyChanging();
					this._TermId = value;
					this.SendPropertyChanged("TermId");
					this.OnTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TaxNumber
		{
			get
			{
				return this._TaxNumber;
			}
			set
			{
				if ((this._TaxNumber != value))
				{
					this.OnTaxNumberChanging(value);
					this.SendPropertyChanging();
					this._TaxNumber = value;
					this.SendPropertyChanged("TaxNumber");
					this.OnTaxNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_MstArticleCustomer", Storage="_MstArticle", ThisKey="ArticleId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.MstArticleCustomers.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.MstArticleCustomers.Add(this);
						this._ArticleId = value.Id;
					}
					else
					{
						this._ArticleId = default(long);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTerm_MstArticleCustomer", Storage="_MstTerm", ThisKey="TermId", OtherKey="Id", IsForeignKey=true)]
		public MstTerm MstTerm
		{
			get
			{
				return this._MstTerm.Entity;
			}
			set
			{
				MstTerm previousValue = this._MstTerm.Entity;
				if (((previousValue != value) 
							|| (this._MstTerm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstTerm.Entity = null;
						previousValue.MstArticleCustomers.Remove(this);
					}
					this._MstTerm.Entity = value;
					if ((value != null))
					{
						value.MstArticleCustomers.Add(this);
						this._TermId = value.Id;
					}
					else
					{
						this._TermId = default(long);
					}
					this.SendPropertyChanged("MstTerm");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstArticleItem")]
	public partial class MstArticleItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _ArticleId;
		
		private string _BarCode;
		
		private string _Category;
		
		private long _UnitId;
		
		private long _PurchaseTaxId;
		
		private long _SalesTaxId;
		
		private System.Nullable<long> _PurchaseAccountId;
		
		private System.Nullable<long> _SalesAccountId;
		
		private string _Remarks;
		
		private bool _IsAsset;
		
		private string _AssetManualNumber;
		
		private System.Nullable<long> _AssetAccountId;
		
		private System.Nullable<System.DateTime> _AssetDateAcquired;
		
		private decimal _AssetCost;
		
		private decimal _AssetLifeInYears;
		
		private decimal _AssetSalvageValue;
		
		private System.Nullable<long> _AssetDepreciationAccountId;
		
		private System.Nullable<long> _AssetDepreciationExpenseAccountId;
		
		private System.Nullable<long> _CostAccountId;
		
		private EntityRef<MstArticleItem> _MstArticleItem2;
		
		private EntityRef<MstAccount> _MstAccount;
		
		private EntityRef<MstAccount> _MstAccount1;
		
		private EntityRef<MstAccount> _MstAccount2;
		
		private EntityRef<MstAccount> _MstAccount3;
		
		private EntityRef<MstAccount> _MstAccount4;
		
		private EntityRef<MstAccount> _MstAccount5;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstArticleItem> _MstArticleItem1;
		
		private EntityRef<MstTax> _MstTax;
		
		private EntityRef<MstTax> _MstTax1;
		
		private EntityRef<MstUnit> _MstUnit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnArticleIdChanging(long value);
    partial void OnArticleIdChanged();
    partial void OnBarCodeChanging(string value);
    partial void OnBarCodeChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnUnitIdChanging(long value);
    partial void OnUnitIdChanged();
    partial void OnPurchaseTaxIdChanging(long value);
    partial void OnPurchaseTaxIdChanged();
    partial void OnSalesTaxIdChanging(long value);
    partial void OnSalesTaxIdChanged();
    partial void OnPurchaseAccountIdChanging(System.Nullable<long> value);
    partial void OnPurchaseAccountIdChanged();
    partial void OnSalesAccountIdChanging(System.Nullable<long> value);
    partial void OnSalesAccountIdChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnIsAssetChanging(bool value);
    partial void OnIsAssetChanged();
    partial void OnAssetManualNumberChanging(string value);
    partial void OnAssetManualNumberChanged();
    partial void OnAssetAccountIdChanging(System.Nullable<long> value);
    partial void OnAssetAccountIdChanged();
    partial void OnAssetDateAcquiredChanging(System.Nullable<System.DateTime> value);
    partial void OnAssetDateAcquiredChanged();
    partial void OnAssetCostChanging(decimal value);
    partial void OnAssetCostChanged();
    partial void OnAssetLifeInYearsChanging(decimal value);
    partial void OnAssetLifeInYearsChanged();
    partial void OnAssetSalvageValueChanging(decimal value);
    partial void OnAssetSalvageValueChanged();
    partial void OnAssetDepreciationAccountIdChanging(System.Nullable<long> value);
    partial void OnAssetDepreciationAccountIdChanged();
    partial void OnAssetDepreciationExpenseAccountIdChanging(System.Nullable<long> value);
    partial void OnAssetDepreciationExpenseAccountIdChanged();
    partial void OnCostAccountIdChanging(System.Nullable<long> value);
    partial void OnCostAccountIdChanged();
    #endregion
		
		public MstArticleItem()
		{
			this._MstArticleItem2 = default(EntityRef<MstArticleItem>);
			this._MstAccount = default(EntityRef<MstAccount>);
			this._MstAccount1 = default(EntityRef<MstAccount>);
			this._MstAccount2 = default(EntityRef<MstAccount>);
			this._MstAccount3 = default(EntityRef<MstAccount>);
			this._MstAccount4 = default(EntityRef<MstAccount>);
			this._MstAccount5 = default(EntityRef<MstAccount>);
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstArticleItem1 = default(EntityRef<MstArticleItem>);
			this._MstTax = default(EntityRef<MstTax>);
			this._MstTax1 = default(EntityRef<MstTax>);
			this._MstUnit = default(EntityRef<MstUnit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._MstArticleItem1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleId", DbType="BigInt NOT NULL")]
		public long ArticleId
		{
			get
			{
				return this._ArticleId;
			}
			set
			{
				if ((this._ArticleId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticleIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleId = value;
					this.SendPropertyChanged("ArticleId");
					this.OnArticleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BarCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BarCode
		{
			get
			{
				return this._BarCode;
			}
			set
			{
				if ((this._BarCode != value))
				{
					this.OnBarCodeChanging(value);
					this.SendPropertyChanging();
					this._BarCode = value;
					this.SendPropertyChanged("BarCode");
					this.OnBarCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="BigInt NOT NULL")]
		public long UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._MstUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseTaxId", DbType="BigInt NOT NULL")]
		public long PurchaseTaxId
		{
			get
			{
				return this._PurchaseTaxId;
			}
			set
			{
				if ((this._PurchaseTaxId != value))
				{
					if (this._MstTax.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPurchaseTaxIdChanging(value);
					this.SendPropertyChanging();
					this._PurchaseTaxId = value;
					this.SendPropertyChanged("PurchaseTaxId");
					this.OnPurchaseTaxIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesTaxId", DbType="BigInt NOT NULL")]
		public long SalesTaxId
		{
			get
			{
				return this._SalesTaxId;
			}
			set
			{
				if ((this._SalesTaxId != value))
				{
					if (this._MstTax1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalesTaxIdChanging(value);
					this.SendPropertyChanging();
					this._SalesTaxId = value;
					this.SendPropertyChanged("SalesTaxId");
					this.OnSalesTaxIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseAccountId", DbType="BigInt")]
		public System.Nullable<long> PurchaseAccountId
		{
			get
			{
				return this._PurchaseAccountId;
			}
			set
			{
				if ((this._PurchaseAccountId != value))
				{
					if (this._MstAccount1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPurchaseAccountIdChanging(value);
					this.SendPropertyChanging();
					this._PurchaseAccountId = value;
					this.SendPropertyChanged("PurchaseAccountId");
					this.OnPurchaseAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesAccountId", DbType="BigInt")]
		public System.Nullable<long> SalesAccountId
		{
			get
			{
				return this._SalesAccountId;
			}
			set
			{
				if ((this._SalesAccountId != value))
				{
					if (this._MstAccount2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalesAccountIdChanging(value);
					this.SendPropertyChanging();
					this._SalesAccountId = value;
					this.SendPropertyChanged("SalesAccountId");
					this.OnSalesAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(255)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAsset", DbType="Bit NOT NULL")]
		public bool IsAsset
		{
			get
			{
				return this._IsAsset;
			}
			set
			{
				if ((this._IsAsset != value))
				{
					this.OnIsAssetChanging(value);
					this.SendPropertyChanging();
					this._IsAsset = value;
					this.SendPropertyChanged("IsAsset");
					this.OnIsAssetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetManualNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AssetManualNumber
		{
			get
			{
				return this._AssetManualNumber;
			}
			set
			{
				if ((this._AssetManualNumber != value))
				{
					this.OnAssetManualNumberChanging(value);
					this.SendPropertyChanging();
					this._AssetManualNumber = value;
					this.SendPropertyChanged("AssetManualNumber");
					this.OnAssetManualNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetAccountId", DbType="BigInt")]
		public System.Nullable<long> AssetAccountId
		{
			get
			{
				return this._AssetAccountId;
			}
			set
			{
				if ((this._AssetAccountId != value))
				{
					if (this._MstAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssetAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AssetAccountId = value;
					this.SendPropertyChanged("AssetAccountId");
					this.OnAssetAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetDateAcquired", DbType="DateTime")]
		public System.Nullable<System.DateTime> AssetDateAcquired
		{
			get
			{
				return this._AssetDateAcquired;
			}
			set
			{
				if ((this._AssetDateAcquired != value))
				{
					this.OnAssetDateAcquiredChanging(value);
					this.SendPropertyChanging();
					this._AssetDateAcquired = value;
					this.SendPropertyChanged("AssetDateAcquired");
					this.OnAssetDateAcquiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetCost", DbType="Decimal(18,5) NOT NULL")]
		public decimal AssetCost
		{
			get
			{
				return this._AssetCost;
			}
			set
			{
				if ((this._AssetCost != value))
				{
					this.OnAssetCostChanging(value);
					this.SendPropertyChanging();
					this._AssetCost = value;
					this.SendPropertyChanged("AssetCost");
					this.OnAssetCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetLifeInYears", DbType="Decimal(18,5) NOT NULL")]
		public decimal AssetLifeInYears
		{
			get
			{
				return this._AssetLifeInYears;
			}
			set
			{
				if ((this._AssetLifeInYears != value))
				{
					this.OnAssetLifeInYearsChanging(value);
					this.SendPropertyChanging();
					this._AssetLifeInYears = value;
					this.SendPropertyChanged("AssetLifeInYears");
					this.OnAssetLifeInYearsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetSalvageValue", DbType="Decimal(18,5) NOT NULL")]
		public decimal AssetSalvageValue
		{
			get
			{
				return this._AssetSalvageValue;
			}
			set
			{
				if ((this._AssetSalvageValue != value))
				{
					this.OnAssetSalvageValueChanging(value);
					this.SendPropertyChanging();
					this._AssetSalvageValue = value;
					this.SendPropertyChanged("AssetSalvageValue");
					this.OnAssetSalvageValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetDepreciationAccountId", DbType="BigInt")]
		public System.Nullable<long> AssetDepreciationAccountId
		{
			get
			{
				return this._AssetDepreciationAccountId;
			}
			set
			{
				if ((this._AssetDepreciationAccountId != value))
				{
					if (this._MstAccount3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssetDepreciationAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AssetDepreciationAccountId = value;
					this.SendPropertyChanged("AssetDepreciationAccountId");
					this.OnAssetDepreciationAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetDepreciationExpenseAccountId", DbType="BigInt")]
		public System.Nullable<long> AssetDepreciationExpenseAccountId
		{
			get
			{
				return this._AssetDepreciationExpenseAccountId;
			}
			set
			{
				if ((this._AssetDepreciationExpenseAccountId != value))
				{
					if (this._MstAccount4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssetDepreciationExpenseAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AssetDepreciationExpenseAccountId = value;
					this.SendPropertyChanged("AssetDepreciationExpenseAccountId");
					this.OnAssetDepreciationExpenseAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostAccountId", DbType="BigInt")]
		public System.Nullable<long> CostAccountId
		{
			get
			{
				return this._CostAccountId;
			}
			set
			{
				if ((this._CostAccountId != value))
				{
					if (this._MstAccount5.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCostAccountIdChanging(value);
					this.SendPropertyChanging();
					this._CostAccountId = value;
					this.SendPropertyChanged("CostAccountId");
					this.OnCostAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleItem_MstArticleItem", Storage="_MstArticleItem2", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public MstArticleItem MstArticleItem2
		{
			get
			{
				return this._MstArticleItem2.Entity;
			}
			set
			{
				MstArticleItem previousValue = this._MstArticleItem2.Entity;
				if (((previousValue != value) 
							|| (this._MstArticleItem2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticleItem2.Entity = null;
						previousValue.MstArticleItem1 = null;
					}
					this._MstArticleItem2.Entity = value;
					if ((value != null))
					{
						value.MstArticleItem1 = this;
					}
					this.SendPropertyChanged("MstArticleItem2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstArticleItem", Storage="_MstAccount", ThisKey="AssetAccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount
		{
			get
			{
				return this._MstAccount.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount.Entity = null;
						previousValue.MstArticleItems.Remove(this);
					}
					this._MstAccount.Entity = value;
					if ((value != null))
					{
						value.MstArticleItems.Add(this);
						this._AssetAccountId = value.Id;
					}
					else
					{
						this._AssetAccountId = default(Nullable<long>);
					}
					this.SendPropertyChanged("MstAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstArticleItem1", Storage="_MstAccount1", ThisKey="PurchaseAccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount1
		{
			get
			{
				return this._MstAccount1.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount1.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount1.Entity = null;
						previousValue.MstArticleItems1.Remove(this);
					}
					this._MstAccount1.Entity = value;
					if ((value != null))
					{
						value.MstArticleItems1.Add(this);
						this._PurchaseAccountId = value.Id;
					}
					else
					{
						this._PurchaseAccountId = default(Nullable<long>);
					}
					this.SendPropertyChanged("MstAccount1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstArticleItem2", Storage="_MstAccount2", ThisKey="SalesAccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount2
		{
			get
			{
				return this._MstAccount2.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount2.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount2.Entity = null;
						previousValue.MstArticleItems2.Remove(this);
					}
					this._MstAccount2.Entity = value;
					if ((value != null))
					{
						value.MstArticleItems2.Add(this);
						this._SalesAccountId = value.Id;
					}
					else
					{
						this._SalesAccountId = default(Nullable<long>);
					}
					this.SendPropertyChanged("MstAccount2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstArticleItem3", Storage="_MstAccount3", ThisKey="AssetDepreciationAccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount3
		{
			get
			{
				return this._MstAccount3.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount3.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount3.Entity = null;
						previousValue.MstArticleItems3.Remove(this);
					}
					this._MstAccount3.Entity = value;
					if ((value != null))
					{
						value.MstArticleItems3.Add(this);
						this._AssetDepreciationAccountId = value.Id;
					}
					else
					{
						this._AssetDepreciationAccountId = default(Nullable<long>);
					}
					this.SendPropertyChanged("MstAccount3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstArticleItem4", Storage="_MstAccount4", ThisKey="AssetDepreciationExpenseAccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount4
		{
			get
			{
				return this._MstAccount4.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount4.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount4.Entity = null;
						previousValue.MstArticleItems4.Remove(this);
					}
					this._MstAccount4.Entity = value;
					if ((value != null))
					{
						value.MstArticleItems4.Add(this);
						this._AssetDepreciationExpenseAccountId = value.Id;
					}
					else
					{
						this._AssetDepreciationExpenseAccountId = default(Nullable<long>);
					}
					this.SendPropertyChanged("MstAccount4");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstArticleItem5", Storage="_MstAccount5", ThisKey="CostAccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount5
		{
			get
			{
				return this._MstAccount5.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount5.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount5.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount5.Entity = null;
						previousValue.MstArticleItems5.Remove(this);
					}
					this._MstAccount5.Entity = value;
					if ((value != null))
					{
						value.MstArticleItems5.Add(this);
						this._CostAccountId = value.Id;
					}
					else
					{
						this._CostAccountId = default(Nullable<long>);
					}
					this.SendPropertyChanged("MstAccount5");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_MstArticleItem", Storage="_MstArticle", ThisKey="ArticleId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.MstArticleItems.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.MstArticleItems.Add(this);
						this._ArticleId = value.Id;
					}
					else
					{
						this._ArticleId = default(long);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleItem_MstArticleItem", Storage="_MstArticleItem1", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public MstArticleItem MstArticleItem1
		{
			get
			{
				return this._MstArticleItem1.Entity;
			}
			set
			{
				MstArticleItem previousValue = this._MstArticleItem1.Entity;
				if (((previousValue != value) 
							|| (this._MstArticleItem1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticleItem1.Entity = null;
						previousValue.MstArticleItem2 = null;
					}
					this._MstArticleItem1.Entity = value;
					if ((value != null))
					{
						value.MstArticleItem2 = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(long);
					}
					this.SendPropertyChanged("MstArticleItem1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTax_MstArticleItem", Storage="_MstTax", ThisKey="PurchaseTaxId", OtherKey="Id", IsForeignKey=true)]
		public MstTax MstTax
		{
			get
			{
				return this._MstTax.Entity;
			}
			set
			{
				MstTax previousValue = this._MstTax.Entity;
				if (((previousValue != value) 
							|| (this._MstTax.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstTax.Entity = null;
						previousValue.MstArticleItems.Remove(this);
					}
					this._MstTax.Entity = value;
					if ((value != null))
					{
						value.MstArticleItems.Add(this);
						this._PurchaseTaxId = value.Id;
					}
					else
					{
						this._PurchaseTaxId = default(long);
					}
					this.SendPropertyChanged("MstTax");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTax_MstArticleItem1", Storage="_MstTax1", ThisKey="SalesTaxId", OtherKey="Id", IsForeignKey=true)]
		public MstTax MstTax1
		{
			get
			{
				return this._MstTax1.Entity;
			}
			set
			{
				MstTax previousValue = this._MstTax1.Entity;
				if (((previousValue != value) 
							|| (this._MstTax1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstTax1.Entity = null;
						previousValue.MstArticleItems1.Remove(this);
					}
					this._MstTax1.Entity = value;
					if ((value != null))
					{
						value.MstArticleItems1.Add(this);
						this._SalesTaxId = value.Id;
					}
					else
					{
						this._SalesTaxId = default(long);
					}
					this.SendPropertyChanged("MstTax1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_MstArticleItem", Storage="_MstUnit", ThisKey="UnitId", OtherKey="Id", IsForeignKey=true)]
		public MstUnit MstUnit
		{
			get
			{
				return this._MstUnit.Entity;
			}
			set
			{
				MstUnit previousValue = this._MstUnit.Entity;
				if (((previousValue != value) 
							|| (this._MstUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUnit.Entity = null;
						previousValue.MstArticleItems.Remove(this);
					}
					this._MstUnit.Entity = value;
					if ((value != null))
					{
						value.MstArticleItems.Add(this);
						this._UnitId = value.Id;
					}
					else
					{
						this._UnitId = default(long);
					}
					this.SendPropertyChanged("MstUnit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstArticleItemComponent")]
	public partial class MstArticleItemComponent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _ArticleId;
		
		private long _ComponentArticleId;
		
		private long _UnitId;
		
		private decimal _Quantity;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstArticle> _MstArticle1;
		
		private EntityRef<MstUnit> _MstUnit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnArticleIdChanging(long value);
    partial void OnArticleIdChanged();
    partial void OnComponentArticleIdChanging(long value);
    partial void OnComponentArticleIdChanged();
    partial void OnUnitIdChanging(long value);
    partial void OnUnitIdChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    #endregion
		
		public MstArticleItemComponent()
		{
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstArticle1 = default(EntityRef<MstArticle>);
			this._MstUnit = default(EntityRef<MstUnit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleId", DbType="BigInt NOT NULL")]
		public long ArticleId
		{
			get
			{
				return this._ArticleId;
			}
			set
			{
				if ((this._ArticleId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticleIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleId = value;
					this.SendPropertyChanged("ArticleId");
					this.OnArticleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComponentArticleId", DbType="BigInt NOT NULL")]
		public long ComponentArticleId
		{
			get
			{
				return this._ComponentArticleId;
			}
			set
			{
				if ((this._ComponentArticleId != value))
				{
					if (this._MstArticle1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnComponentArticleIdChanging(value);
					this.SendPropertyChanging();
					this._ComponentArticleId = value;
					this.SendPropertyChanged("ComponentArticleId");
					this.OnComponentArticleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="BigInt NOT NULL")]
		public long UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._MstUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_MstArticleItemComponent", Storage="_MstArticle", ThisKey="ArticleId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.MstArticleItemComponents.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.MstArticleItemComponents.Add(this);
						this._ArticleId = value.Id;
					}
					else
					{
						this._ArticleId = default(long);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_MstArticleItemComponent1", Storage="_MstArticle1", ThisKey="ComponentArticleId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle1
		{
			get
			{
				return this._MstArticle1.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle1.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle1.Entity = null;
						previousValue.MstArticleItemComponents1.Remove(this);
					}
					this._MstArticle1.Entity = value;
					if ((value != null))
					{
						value.MstArticleItemComponents1.Add(this);
						this._ComponentArticleId = value.Id;
					}
					else
					{
						this._ComponentArticleId = default(long);
					}
					this.SendPropertyChanged("MstArticle1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_MstArticleItemComponent", Storage="_MstUnit", ThisKey="UnitId", OtherKey="Id", IsForeignKey=true)]
		public MstUnit MstUnit
		{
			get
			{
				return this._MstUnit.Entity;
			}
			set
			{
				MstUnit previousValue = this._MstUnit.Entity;
				if (((previousValue != value) 
							|| (this._MstUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUnit.Entity = null;
						previousValue.MstArticleItemComponents.Remove(this);
					}
					this._MstUnit.Entity = value;
					if ((value != null))
					{
						value.MstArticleItemComponents.Add(this);
						this._UnitId = value.Id;
					}
					else
					{
						this._UnitId = default(long);
					}
					this.SendPropertyChanged("MstUnit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstArticleItemInventory")]
	public partial class MstArticleItemInventory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _ArticleId;
		
		private long _BranchId;
		
		private System.Nullable<long> _INId;
		
		private string _InventoryNumber;
		
		private decimal _Cost;
		
		private decimal _TotalQuantityIn;
		
		private decimal _TotalQuantityOut;
		
		private decimal _BalanceQuantity;
		
		private long _UnitId;
		
		private decimal _Amount;
		
		private System.Nullable<long> _STId;
		
		private EntitySet<TrnInventory> _TrnInventories;
		
		private EntitySet<TrnSalesInvoiceLine> _TrnSalesInvoiceLines;
		
		private EntitySet<TrnStockInLine> _TrnStockInLines;
		
		private EntitySet<TrnStockOutLine> _TrnStockOutLines;
		
		private EntitySet<TrnStockTransferLine> _TrnStockTransferLines;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstBranch> _MstBranch;
		
		private EntityRef<MstUnit> _MstUnit;
		
		private EntityRef<TrnStockIn> _TrnStockIn;
		
		private EntityRef<TrnStockTransfer> _TrnStockTransfer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnArticleIdChanging(long value);
    partial void OnArticleIdChanged();
    partial void OnBranchIdChanging(long value);
    partial void OnBranchIdChanged();
    partial void OnINIdChanging(System.Nullable<long> value);
    partial void OnINIdChanged();
    partial void OnInventoryNumberChanging(string value);
    partial void OnInventoryNumberChanged();
    partial void OnCostChanging(decimal value);
    partial void OnCostChanged();
    partial void OnTotalQuantityInChanging(decimal value);
    partial void OnTotalQuantityInChanged();
    partial void OnTotalQuantityOutChanging(decimal value);
    partial void OnTotalQuantityOutChanged();
    partial void OnBalanceQuantityChanging(decimal value);
    partial void OnBalanceQuantityChanged();
    partial void OnUnitIdChanging(long value);
    partial void OnUnitIdChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnSTIdChanging(System.Nullable<long> value);
    partial void OnSTIdChanged();
    #endregion
		
		public MstArticleItemInventory()
		{
			this._TrnInventories = new EntitySet<TrnInventory>(new Action<TrnInventory>(this.attach_TrnInventories), new Action<TrnInventory>(this.detach_TrnInventories));
			this._TrnSalesInvoiceLines = new EntitySet<TrnSalesInvoiceLine>(new Action<TrnSalesInvoiceLine>(this.attach_TrnSalesInvoiceLines), new Action<TrnSalesInvoiceLine>(this.detach_TrnSalesInvoiceLines));
			this._TrnStockInLines = new EntitySet<TrnStockInLine>(new Action<TrnStockInLine>(this.attach_TrnStockInLines), new Action<TrnStockInLine>(this.detach_TrnStockInLines));
			this._TrnStockOutLines = new EntitySet<TrnStockOutLine>(new Action<TrnStockOutLine>(this.attach_TrnStockOutLines), new Action<TrnStockOutLine>(this.detach_TrnStockOutLines));
			this._TrnStockTransferLines = new EntitySet<TrnStockTransferLine>(new Action<TrnStockTransferLine>(this.attach_TrnStockTransferLines), new Action<TrnStockTransferLine>(this.detach_TrnStockTransferLines));
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstBranch = default(EntityRef<MstBranch>);
			this._MstUnit = default(EntityRef<MstUnit>);
			this._TrnStockIn = default(EntityRef<TrnStockIn>);
			this._TrnStockTransfer = default(EntityRef<TrnStockTransfer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleId", DbType="BigInt NOT NULL")]
		public long ArticleId
		{
			get
			{
				return this._ArticleId;
			}
			set
			{
				if ((this._ArticleId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticleIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleId = value;
					this.SendPropertyChanged("ArticleId");
					this.OnArticleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="BigInt NOT NULL")]
		public long BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._MstBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INId", DbType="BigInt")]
		public System.Nullable<long> INId
		{
			get
			{
				return this._INId;
			}
			set
			{
				if ((this._INId != value))
				{
					if (this._TrnStockIn.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnINIdChanging(value);
					this.SendPropertyChanging();
					this._INId = value;
					this.SendPropertyChanged("INId");
					this.OnINIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string InventoryNumber
		{
			get
			{
				return this._InventoryNumber;
			}
			set
			{
				if ((this._InventoryNumber != value))
				{
					this.OnInventoryNumberChanging(value);
					this.SendPropertyChanging();
					this._InventoryNumber = value;
					this.SendPropertyChanged("InventoryNumber");
					this.OnInventoryNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(18,5) NOT NULL")]
		public decimal Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalQuantityIn", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalQuantityIn
		{
			get
			{
				return this._TotalQuantityIn;
			}
			set
			{
				if ((this._TotalQuantityIn != value))
				{
					this.OnTotalQuantityInChanging(value);
					this.SendPropertyChanging();
					this._TotalQuantityIn = value;
					this.SendPropertyChanged("TotalQuantityIn");
					this.OnTotalQuantityInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalQuantityOut", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalQuantityOut
		{
			get
			{
				return this._TotalQuantityOut;
			}
			set
			{
				if ((this._TotalQuantityOut != value))
				{
					this.OnTotalQuantityOutChanging(value);
					this.SendPropertyChanging();
					this._TotalQuantityOut = value;
					this.SendPropertyChanged("TotalQuantityOut");
					this.OnTotalQuantityOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BalanceQuantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal BalanceQuantity
		{
			get
			{
				return this._BalanceQuantity;
			}
			set
			{
				if ((this._BalanceQuantity != value))
				{
					this.OnBalanceQuantityChanging(value);
					this.SendPropertyChanging();
					this._BalanceQuantity = value;
					this.SendPropertyChanged("BalanceQuantity");
					this.OnBalanceQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="BigInt NOT NULL")]
		public long UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._MstUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STId", DbType="BigInt")]
		public System.Nullable<long> STId
		{
			get
			{
				return this._STId;
			}
			set
			{
				if ((this._STId != value))
				{
					if (this._TrnStockTransfer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSTIdChanging(value);
					this.SendPropertyChanging();
					this._STId = value;
					this.SendPropertyChanged("STId");
					this.OnSTIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleItemInventory_TrnInventory", Storage="_TrnInventories", ThisKey="Id", OtherKey="ItemInventoryId")]
		public EntitySet<TrnInventory> TrnInventories
		{
			get
			{
				return this._TrnInventories;
			}
			set
			{
				this._TrnInventories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleItemInventory_TrnSalesInvoiceLine", Storage="_TrnSalesInvoiceLines", ThisKey="Id", OtherKey="ItemInventoryId")]
		public EntitySet<TrnSalesInvoiceLine> TrnSalesInvoiceLines
		{
			get
			{
				return this._TrnSalesInvoiceLines;
			}
			set
			{
				this._TrnSalesInvoiceLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleItemInventory_TrnStockInLine", Storage="_TrnStockInLines", ThisKey="Id", OtherKey="ItemInventoryId")]
		public EntitySet<TrnStockInLine> TrnStockInLines
		{
			get
			{
				return this._TrnStockInLines;
			}
			set
			{
				this._TrnStockInLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleItemInventory_TrnStockOutLine", Storage="_TrnStockOutLines", ThisKey="Id", OtherKey="ItemInventoryId")]
		public EntitySet<TrnStockOutLine> TrnStockOutLines
		{
			get
			{
				return this._TrnStockOutLines;
			}
			set
			{
				this._TrnStockOutLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleItemInventory_TrnStockTransferLine", Storage="_TrnStockTransferLines", ThisKey="Id", OtherKey="ItemInventoryId")]
		public EntitySet<TrnStockTransferLine> TrnStockTransferLines
		{
			get
			{
				return this._TrnStockTransferLines;
			}
			set
			{
				this._TrnStockTransferLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_MstArticleItemInventory", Storage="_MstArticle", ThisKey="ArticleId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.MstArticleItemInventories.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.MstArticleItemInventories.Add(this);
						this._ArticleId = value.Id;
					}
					else
					{
						this._ArticleId = default(long);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_MstArticleItemInventory", Storage="_MstBranch", ThisKey="BranchId", OtherKey="Id", IsForeignKey=true)]
		public MstBranch MstBranch
		{
			get
			{
				return this._MstBranch.Entity;
			}
			set
			{
				MstBranch previousValue = this._MstBranch.Entity;
				if (((previousValue != value) 
							|| (this._MstBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBranch.Entity = null;
						previousValue.MstArticleItemInventories.Remove(this);
					}
					this._MstBranch.Entity = value;
					if ((value != null))
					{
						value.MstArticleItemInventories.Add(this);
						this._BranchId = value.Id;
					}
					else
					{
						this._BranchId = default(long);
					}
					this.SendPropertyChanged("MstBranch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_MstArticleItemInventory", Storage="_MstUnit", ThisKey="UnitId", OtherKey="Id", IsForeignKey=true)]
		public MstUnit MstUnit
		{
			get
			{
				return this._MstUnit.Entity;
			}
			set
			{
				MstUnit previousValue = this._MstUnit.Entity;
				if (((previousValue != value) 
							|| (this._MstUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUnit.Entity = null;
						previousValue.MstArticleItemInventories.Remove(this);
					}
					this._MstUnit.Entity = value;
					if ((value != null))
					{
						value.MstArticleItemInventories.Add(this);
						this._UnitId = value.Id;
					}
					else
					{
						this._UnitId = default(long);
					}
					this.SendPropertyChanged("MstUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockIn_MstArticleItemInventory", Storage="_TrnStockIn", ThisKey="INId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public TrnStockIn TrnStockIn
		{
			get
			{
				return this._TrnStockIn.Entity;
			}
			set
			{
				TrnStockIn previousValue = this._TrnStockIn.Entity;
				if (((previousValue != value) 
							|| (this._TrnStockIn.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnStockIn.Entity = null;
						previousValue.MstArticleItemInventories.Remove(this);
					}
					this._TrnStockIn.Entity = value;
					if ((value != null))
					{
						value.MstArticleItemInventories.Add(this);
						this._INId = value.Id;
					}
					else
					{
						this._INId = default(Nullable<long>);
					}
					this.SendPropertyChanged("TrnStockIn");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockTransfer_MstArticleItemInventory", Storage="_TrnStockTransfer", ThisKey="STId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public TrnStockTransfer TrnStockTransfer
		{
			get
			{
				return this._TrnStockTransfer.Entity;
			}
			set
			{
				TrnStockTransfer previousValue = this._TrnStockTransfer.Entity;
				if (((previousValue != value) 
							|| (this._TrnStockTransfer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnStockTransfer.Entity = null;
						previousValue.MstArticleItemInventories.Remove(this);
					}
					this._TrnStockTransfer.Entity = value;
					if ((value != null))
					{
						value.MstArticleItemInventories.Add(this);
						this._STId = value.Id;
					}
					else
					{
						this._STId = default(Nullable<long>);
					}
					this.SendPropertyChanged("TrnStockTransfer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnInventories(TrnInventory entity)
		{
			this.SendPropertyChanging();
			entity.MstArticleItemInventory = this;
		}
		
		private void detach_TrnInventories(TrnInventory entity)
		{
			this.SendPropertyChanging();
			entity.MstArticleItemInventory = null;
		}
		
		private void attach_TrnSalesInvoiceLines(TrnSalesInvoiceLine entity)
		{
			this.SendPropertyChanging();
			entity.MstArticleItemInventory = this;
		}
		
		private void detach_TrnSalesInvoiceLines(TrnSalesInvoiceLine entity)
		{
			this.SendPropertyChanging();
			entity.MstArticleItemInventory = null;
		}
		
		private void attach_TrnStockInLines(TrnStockInLine entity)
		{
			this.SendPropertyChanging();
			entity.MstArticleItemInventory = this;
		}
		
		private void detach_TrnStockInLines(TrnStockInLine entity)
		{
			this.SendPropertyChanging();
			entity.MstArticleItemInventory = null;
		}
		
		private void attach_TrnStockOutLines(TrnStockOutLine entity)
		{
			this.SendPropertyChanging();
			entity.MstArticleItemInventory = this;
		}
		
		private void detach_TrnStockOutLines(TrnStockOutLine entity)
		{
			this.SendPropertyChanging();
			entity.MstArticleItemInventory = null;
		}
		
		private void attach_TrnStockTransferLines(TrnStockTransferLine entity)
		{
			this.SendPropertyChanging();
			entity.MstArticleItemInventory = this;
		}
		
		private void detach_TrnStockTransferLines(TrnStockTransferLine entity)
		{
			this.SendPropertyChanging();
			entity.MstArticleItemInventory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstArticleItemPrice")]
	public partial class MstArticleItemPrice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _ArticleId;
		
		private string _PriceDescription;
		
		private decimal _Price;
		
		private decimal _MarkUpPercentage;
		
		private EntitySet<TrnSalesInvoiceLine> _TrnSalesInvoiceLines;
		
		private EntityRef<MstArticle> _MstArticle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnArticleIdChanging(long value);
    partial void OnArticleIdChanged();
    partial void OnPriceDescriptionChanging(string value);
    partial void OnPriceDescriptionChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnMarkUpPercentageChanging(decimal value);
    partial void OnMarkUpPercentageChanged();
    #endregion
		
		public MstArticleItemPrice()
		{
			this._TrnSalesInvoiceLines = new EntitySet<TrnSalesInvoiceLine>(new Action<TrnSalesInvoiceLine>(this.attach_TrnSalesInvoiceLines), new Action<TrnSalesInvoiceLine>(this.detach_TrnSalesInvoiceLines));
			this._MstArticle = default(EntityRef<MstArticle>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleId", DbType="BigInt NOT NULL")]
		public long ArticleId
		{
			get
			{
				return this._ArticleId;
			}
			set
			{
				if ((this._ArticleId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticleIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleId = value;
					this.SendPropertyChanged("ArticleId");
					this.OnArticleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceDescription", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PriceDescription
		{
			get
			{
				return this._PriceDescription;
			}
			set
			{
				if ((this._PriceDescription != value))
				{
					this.OnPriceDescriptionChanging(value);
					this.SendPropertyChanging();
					this._PriceDescription = value;
					this.SendPropertyChanged("PriceDescription");
					this.OnPriceDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,5) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarkUpPercentage", DbType="Decimal(18,5) NOT NULL")]
		public decimal MarkUpPercentage
		{
			get
			{
				return this._MarkUpPercentage;
			}
			set
			{
				if ((this._MarkUpPercentage != value))
				{
					this.OnMarkUpPercentageChanging(value);
					this.SendPropertyChanging();
					this._MarkUpPercentage = value;
					this.SendPropertyChanged("MarkUpPercentage");
					this.OnMarkUpPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleItemPrice_TrnSalesInvoiceLine", Storage="_TrnSalesInvoiceLines", ThisKey="Id", OtherKey="PriceId")]
		public EntitySet<TrnSalesInvoiceLine> TrnSalesInvoiceLines
		{
			get
			{
				return this._TrnSalesInvoiceLines;
			}
			set
			{
				this._TrnSalesInvoiceLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_MstArticleItemPrice", Storage="_MstArticle", ThisKey="ArticleId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.MstArticleItemPrices.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.MstArticleItemPrices.Add(this);
						this._ArticleId = value.Id;
					}
					else
					{
						this._ArticleId = default(long);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnSalesInvoiceLines(TrnSalesInvoiceLine entity)
		{
			this.SendPropertyChanging();
			entity.MstArticleItemPrice = this;
		}
		
		private void detach_TrnSalesInvoiceLines(TrnSalesInvoiceLine entity)
		{
			this.SendPropertyChanging();
			entity.MstArticleItemPrice = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstArticleItemUnit")]
	public partial class MstArticleItemUnit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _ArticleId;
		
		private long _UnitId;
		
		private decimal _Multiplier;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstUnit> _MstUnit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnArticleIdChanging(long value);
    partial void OnArticleIdChanged();
    partial void OnUnitIdChanging(long value);
    partial void OnUnitIdChanged();
    partial void OnMultiplierChanging(decimal value);
    partial void OnMultiplierChanged();
    #endregion
		
		public MstArticleItemUnit()
		{
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstUnit = default(EntityRef<MstUnit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleId", DbType="BigInt NOT NULL")]
		public long ArticleId
		{
			get
			{
				return this._ArticleId;
			}
			set
			{
				if ((this._ArticleId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticleIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleId = value;
					this.SendPropertyChanged("ArticleId");
					this.OnArticleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="BigInt NOT NULL")]
		public long UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._MstUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Multiplier", DbType="Decimal(18,5) NOT NULL")]
		public decimal Multiplier
		{
			get
			{
				return this._Multiplier;
			}
			set
			{
				if ((this._Multiplier != value))
				{
					this.OnMultiplierChanging(value);
					this.SendPropertyChanging();
					this._Multiplier = value;
					this.SendPropertyChanged("Multiplier");
					this.OnMultiplierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_MstArticleItemUnit", Storage="_MstArticle", ThisKey="ArticleId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.MstArticleItemUnits.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.MstArticleItemUnits.Add(this);
						this._ArticleId = value.Id;
					}
					else
					{
						this._ArticleId = default(long);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_MstArticleItemUnit", Storage="_MstUnit", ThisKey="UnitId", OtherKey="Id", IsForeignKey=true)]
		public MstUnit MstUnit
		{
			get
			{
				return this._MstUnit.Entity;
			}
			set
			{
				MstUnit previousValue = this._MstUnit.Entity;
				if (((previousValue != value) 
							|| (this._MstUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUnit.Entity = null;
						previousValue.MstArticleItemUnits.Remove(this);
					}
					this._MstUnit.Entity = value;
					if ((value != null))
					{
						value.MstArticleItemUnits.Add(this);
						this._UnitId = value.Id;
					}
					else
					{
						this._UnitId = default(long);
					}
					this.SendPropertyChanged("MstUnit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstArticleSupplier")]
	public partial class MstArticleSupplier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _ArticleId;
		
		private string _Address;
		
		private string _ContactNumbers;
		
		private string _ContactPerson;
		
		private string _EmailAddress;
		
		private long _TermId;
		
		private string _TaxNumber;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstTerm> _MstTerm;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnArticleIdChanging(long value);
    partial void OnArticleIdChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnContactNumbersChanging(string value);
    partial void OnContactNumbersChanged();
    partial void OnContactPersonChanging(string value);
    partial void OnContactPersonChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnTermIdChanging(long value);
    partial void OnTermIdChanged();
    partial void OnTaxNumberChanging(string value);
    partial void OnTaxNumberChanged();
    #endregion
		
		public MstArticleSupplier()
		{
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstTerm = default(EntityRef<MstTerm>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleId", DbType="BigInt NOT NULL")]
		public long ArticleId
		{
			get
			{
				return this._ArticleId;
			}
			set
			{
				if ((this._ArticleId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticleIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleId = value;
					this.SendPropertyChanged("ArticleId");
					this.OnArticleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNumbers", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ContactNumbers
		{
			get
			{
				return this._ContactNumbers;
			}
			set
			{
				if ((this._ContactNumbers != value))
				{
					this.OnContactNumbersChanging(value);
					this.SendPropertyChanging();
					this._ContactNumbers = value;
					this.SendPropertyChanged("ContactNumbers");
					this.OnContactNumbersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPerson", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ContactPerson
		{
			get
			{
				return this._ContactPerson;
			}
			set
			{
				if ((this._ContactPerson != value))
				{
					this.OnContactPersonChanging(value);
					this.SendPropertyChanging();
					this._ContactPerson = value;
					this.SendPropertyChanged("ContactPerson");
					this.OnContactPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="BigInt NOT NULL")]
		public long TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					if (this._MstTerm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTermIdChanging(value);
					this.SendPropertyChanging();
					this._TermId = value;
					this.SendPropertyChanged("TermId");
					this.OnTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TaxNumber
		{
			get
			{
				return this._TaxNumber;
			}
			set
			{
				if ((this._TaxNumber != value))
				{
					this.OnTaxNumberChanging(value);
					this.SendPropertyChanging();
					this._TaxNumber = value;
					this.SendPropertyChanged("TaxNumber");
					this.OnTaxNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_MstArticleSupplier", Storage="_MstArticle", ThisKey="ArticleId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.MstArticleSuppliers.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.MstArticleSuppliers.Add(this);
						this._ArticleId = value.Id;
					}
					else
					{
						this._ArticleId = default(long);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTerm_MstArticleSupplier", Storage="_MstTerm", ThisKey="TermId", OtherKey="Id", IsForeignKey=true)]
		public MstTerm MstTerm
		{
			get
			{
				return this._MstTerm.Entity;
			}
			set
			{
				MstTerm previousValue = this._MstTerm.Entity;
				if (((previousValue != value) 
							|| (this._MstTerm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstTerm.Entity = null;
						previousValue.MstArticleSuppliers.Remove(this);
					}
					this._MstTerm.Entity = value;
					if ((value != null))
					{
						value.MstArticleSuppliers.Add(this);
						this._TermId = value.Id;
					}
					else
					{
						this._TermId = default(long);
					}
					this.SendPropertyChanged("MstTerm");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstArticleType")]
	public partial class MstArticleType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _UserId;
		
		private string _ArticleType;
		
		private bool _IsLocked;
		
		private long _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private long _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<MstArticle> _MstArticles;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnArticleTypeChanging(string value);
    partial void OnArticleTypeChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(long value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(long value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public MstArticleType()
		{
			this._MstArticles = new EntitySet<MstArticle>(new Action<MstArticle>(this.attach_MstArticles), new Action<MstArticle>(this.detach_MstArticles));
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleType", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ArticleType
		{
			get
			{
				return this._ArticleType;
			}
			set
			{
				if ((this._ArticleType != value))
				{
					this.OnArticleTypeChanging(value);
					this.SendPropertyChanging();
					this._ArticleType = value;
					this.SendPropertyChanged("ArticleType");
					this.OnArticleTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="BigInt NOT NULL")]
		public long CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="BigInt NOT NULL")]
		public long UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleType_MstArticle", Storage="_MstArticles", ThisKey="Id", OtherKey="ArticleTypeId")]
		public EntitySet<MstArticle> MstArticles
		{
			get
			{
				return this._MstArticles;
			}
			set
			{
				this._MstArticles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstArticleType", Storage="_MstUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstArticleTypes.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstArticleTypes.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(long);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstArticleType1", Storage="_MstUser1", ThisKey="CreatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.MstArticleTypes1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.MstArticleTypes1.Add(this);
						this._CreatedById = value.Id;
					}
					else
					{
						this._CreatedById = default(long);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstArticleType2", Storage="_MstUser2", ThisKey="UpdatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.MstArticleTypes2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.MstArticleTypes2.Add(this);
						this._UpdatedById = value.Id;
					}
					else
					{
						this._UpdatedById = default(long);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstArticles(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstArticleType = this;
		}
		
		private void detach_MstArticles(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstArticleType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstBranch")]
	public partial class MstBranch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _UserId;
		
		private string _BranchCode;
		
		private string _Branch;
		
		private long _CompanyId;
		
		private bool _IsLocked;
		
		private long _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private long _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<MstArticleItemInventory> _MstArticleItemInventories;
		
		private EntitySet<MstUser> _MstUsers;
		
		private EntitySet<TrnCollection> _TrnCollections;
		
		private EntitySet<TrnDisbursement> _TrnDisbursements;
		
		private EntitySet<TrnDisbursementLine> _TrnDisbursementLines;
		
		private EntitySet<TrnInventory> _TrnInventories;
		
		private EntitySet<TrnJournal> _TrnJournals;
		
		private EntitySet<TrnJournalVoucher> _TrnJournalVouchers;
		
		private EntitySet<TrnJournalVoucherLine> _TrnJournalVoucherLines;
		
		private EntitySet<TrnPurchaseInvoice> _TrnPurchaseInvoices;
		
		private EntitySet<TrnPurchaseOrder> _TrnPurchaseOrders;
		
		private EntitySet<TrnSalesInvoice> _TrnSalesInvoices;
		
		private EntitySet<TrnSalesOrder> _TrnSalesOrders;
		
		private EntitySet<TrnStockIn> _TrnStockIns;
		
		private EntitySet<TrnStockOut> _TrnStockOuts;
		
		private EntitySet<TrnStockTransfer> _TrnStockTransfers;
		
		private EntitySet<TrnStockTransfer> _TrnStockTransfers1;
		
		private EntityRef<MstCompany> _MstCompany;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnBranchCodeChanging(string value);
    partial void OnBranchCodeChanged();
    partial void OnBranchChanging(string value);
    partial void OnBranchChanged();
    partial void OnCompanyIdChanging(long value);
    partial void OnCompanyIdChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(long value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(long value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public MstBranch()
		{
			this._MstArticleItemInventories = new EntitySet<MstArticleItemInventory>(new Action<MstArticleItemInventory>(this.attach_MstArticleItemInventories), new Action<MstArticleItemInventory>(this.detach_MstArticleItemInventories));
			this._MstUsers = new EntitySet<MstUser>(new Action<MstUser>(this.attach_MstUsers), new Action<MstUser>(this.detach_MstUsers));
			this._TrnCollections = new EntitySet<TrnCollection>(new Action<TrnCollection>(this.attach_TrnCollections), new Action<TrnCollection>(this.detach_TrnCollections));
			this._TrnDisbursements = new EntitySet<TrnDisbursement>(new Action<TrnDisbursement>(this.attach_TrnDisbursements), new Action<TrnDisbursement>(this.detach_TrnDisbursements));
			this._TrnDisbursementLines = new EntitySet<TrnDisbursementLine>(new Action<TrnDisbursementLine>(this.attach_TrnDisbursementLines), new Action<TrnDisbursementLine>(this.detach_TrnDisbursementLines));
			this._TrnInventories = new EntitySet<TrnInventory>(new Action<TrnInventory>(this.attach_TrnInventories), new Action<TrnInventory>(this.detach_TrnInventories));
			this._TrnJournals = new EntitySet<TrnJournal>(new Action<TrnJournal>(this.attach_TrnJournals), new Action<TrnJournal>(this.detach_TrnJournals));
			this._TrnJournalVouchers = new EntitySet<TrnJournalVoucher>(new Action<TrnJournalVoucher>(this.attach_TrnJournalVouchers), new Action<TrnJournalVoucher>(this.detach_TrnJournalVouchers));
			this._TrnJournalVoucherLines = new EntitySet<TrnJournalVoucherLine>(new Action<TrnJournalVoucherLine>(this.attach_TrnJournalVoucherLines), new Action<TrnJournalVoucherLine>(this.detach_TrnJournalVoucherLines));
			this._TrnPurchaseInvoices = new EntitySet<TrnPurchaseInvoice>(new Action<TrnPurchaseInvoice>(this.attach_TrnPurchaseInvoices), new Action<TrnPurchaseInvoice>(this.detach_TrnPurchaseInvoices));
			this._TrnPurchaseOrders = new EntitySet<TrnPurchaseOrder>(new Action<TrnPurchaseOrder>(this.attach_TrnPurchaseOrders), new Action<TrnPurchaseOrder>(this.detach_TrnPurchaseOrders));
			this._TrnSalesInvoices = new EntitySet<TrnSalesInvoice>(new Action<TrnSalesInvoice>(this.attach_TrnSalesInvoices), new Action<TrnSalesInvoice>(this.detach_TrnSalesInvoices));
			this._TrnSalesOrders = new EntitySet<TrnSalesOrder>(new Action<TrnSalesOrder>(this.attach_TrnSalesOrders), new Action<TrnSalesOrder>(this.detach_TrnSalesOrders));
			this._TrnStockIns = new EntitySet<TrnStockIn>(new Action<TrnStockIn>(this.attach_TrnStockIns), new Action<TrnStockIn>(this.detach_TrnStockIns));
			this._TrnStockOuts = new EntitySet<TrnStockOut>(new Action<TrnStockOut>(this.attach_TrnStockOuts), new Action<TrnStockOut>(this.detach_TrnStockOuts));
			this._TrnStockTransfers = new EntitySet<TrnStockTransfer>(new Action<TrnStockTransfer>(this.attach_TrnStockTransfers), new Action<TrnStockTransfer>(this.detach_TrnStockTransfers));
			this._TrnStockTransfers1 = new EntitySet<TrnStockTransfer>(new Action<TrnStockTransfer>(this.attach_TrnStockTransfers1), new Action<TrnStockTransfer>(this.detach_TrnStockTransfers1));
			this._MstCompany = default(EntityRef<MstCompany>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchCode", DbType="NVarChar(2) NOT NULL", CanBeNull=false)]
		public string BranchCode
		{
			get
			{
				return this._BranchCode;
			}
			set
			{
				if ((this._BranchCode != value))
				{
					this.OnBranchCodeChanging(value);
					this.SendPropertyChanging();
					this._BranchCode = value;
					this.SendPropertyChanged("BranchCode");
					this.OnBranchCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this.OnBranchChanging(value);
					this.SendPropertyChanging();
					this._Branch = value;
					this.SendPropertyChanged("Branch");
					this.OnBranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="BigInt NOT NULL")]
		public long CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					if (this._MstCompany.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="BigInt NOT NULL")]
		public long CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="BigInt NOT NULL")]
		public long UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_MstArticleItemInventory", Storage="_MstArticleItemInventories", ThisKey="Id", OtherKey="BranchId")]
		public EntitySet<MstArticleItemInventory> MstArticleItemInventories
		{
			get
			{
				return this._MstArticleItemInventories;
			}
			set
			{
				this._MstArticleItemInventories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_MstUser", Storage="_MstUsers", ThisKey="Id", OtherKey="DefaultBranchId")]
		public EntitySet<MstUser> MstUsers
		{
			get
			{
				return this._MstUsers;
			}
			set
			{
				this._MstUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnCollection", Storage="_TrnCollections", ThisKey="Id", OtherKey="BranchId")]
		public EntitySet<TrnCollection> TrnCollections
		{
			get
			{
				return this._TrnCollections;
			}
			set
			{
				this._TrnCollections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnDisbursement", Storage="_TrnDisbursements", ThisKey="Id", OtherKey="BranchId")]
		public EntitySet<TrnDisbursement> TrnDisbursements
		{
			get
			{
				return this._TrnDisbursements;
			}
			set
			{
				this._TrnDisbursements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnDisbursementLine", Storage="_TrnDisbursementLines", ThisKey="Id", OtherKey="BranchId")]
		public EntitySet<TrnDisbursementLine> TrnDisbursementLines
		{
			get
			{
				return this._TrnDisbursementLines;
			}
			set
			{
				this._TrnDisbursementLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnInventory", Storage="_TrnInventories", ThisKey="Id", OtherKey="BranchId")]
		public EntitySet<TrnInventory> TrnInventories
		{
			get
			{
				return this._TrnInventories;
			}
			set
			{
				this._TrnInventories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnJournal", Storage="_TrnJournals", ThisKey="Id", OtherKey="BranchId")]
		public EntitySet<TrnJournal> TrnJournals
		{
			get
			{
				return this._TrnJournals;
			}
			set
			{
				this._TrnJournals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnJournalVoucher", Storage="_TrnJournalVouchers", ThisKey="Id", OtherKey="BranchId")]
		public EntitySet<TrnJournalVoucher> TrnJournalVouchers
		{
			get
			{
				return this._TrnJournalVouchers;
			}
			set
			{
				this._TrnJournalVouchers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnJournalVoucherLine", Storage="_TrnJournalVoucherLines", ThisKey="Id", OtherKey="BranchId")]
		public EntitySet<TrnJournalVoucherLine> TrnJournalVoucherLines
		{
			get
			{
				return this._TrnJournalVoucherLines;
			}
			set
			{
				this._TrnJournalVoucherLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnPurchaseInvoice", Storage="_TrnPurchaseInvoices", ThisKey="Id", OtherKey="BranchId")]
		public EntitySet<TrnPurchaseInvoice> TrnPurchaseInvoices
		{
			get
			{
				return this._TrnPurchaseInvoices;
			}
			set
			{
				this._TrnPurchaseInvoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnPurchaseOrder", Storage="_TrnPurchaseOrders", ThisKey="Id", OtherKey="BranchId")]
		public EntitySet<TrnPurchaseOrder> TrnPurchaseOrders
		{
			get
			{
				return this._TrnPurchaseOrders;
			}
			set
			{
				this._TrnPurchaseOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnSalesInvoice", Storage="_TrnSalesInvoices", ThisKey="Id", OtherKey="BranchId")]
		public EntitySet<TrnSalesInvoice> TrnSalesInvoices
		{
			get
			{
				return this._TrnSalesInvoices;
			}
			set
			{
				this._TrnSalesInvoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnSalesOrder", Storage="_TrnSalesOrders", ThisKey="Id", OtherKey="BranchId")]
		public EntitySet<TrnSalesOrder> TrnSalesOrders
		{
			get
			{
				return this._TrnSalesOrders;
			}
			set
			{
				this._TrnSalesOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnStockIn", Storage="_TrnStockIns", ThisKey="Id", OtherKey="BranchId")]
		public EntitySet<TrnStockIn> TrnStockIns
		{
			get
			{
				return this._TrnStockIns;
			}
			set
			{
				this._TrnStockIns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnStockOut", Storage="_TrnStockOuts", ThisKey="Id", OtherKey="BranchId")]
		public EntitySet<TrnStockOut> TrnStockOuts
		{
			get
			{
				return this._TrnStockOuts;
			}
			set
			{
				this._TrnStockOuts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnStockTransfer", Storage="_TrnStockTransfers", ThisKey="Id", OtherKey="BranchId")]
		public EntitySet<TrnStockTransfer> TrnStockTransfers
		{
			get
			{
				return this._TrnStockTransfers;
			}
			set
			{
				this._TrnStockTransfers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnStockTransfer1", Storage="_TrnStockTransfers1", ThisKey="Id", OtherKey="ToBranchId")]
		public EntitySet<TrnStockTransfer> TrnStockTransfers1
		{
			get
			{
				return this._TrnStockTransfers1;
			}
			set
			{
				this._TrnStockTransfers1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstCompany_MstBranch", Storage="_MstCompany", ThisKey="CompanyId", OtherKey="Id", IsForeignKey=true)]
		public MstCompany MstCompany
		{
			get
			{
				return this._MstCompany.Entity;
			}
			set
			{
				MstCompany previousValue = this._MstCompany.Entity;
				if (((previousValue != value) 
							|| (this._MstCompany.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstCompany.Entity = null;
						previousValue.MstBranches.Remove(this);
					}
					this._MstCompany.Entity = value;
					if ((value != null))
					{
						value.MstBranches.Add(this);
						this._CompanyId = value.Id;
					}
					else
					{
						this._CompanyId = default(long);
					}
					this.SendPropertyChanged("MstCompany");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstBranch", Storage="_MstUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstBranches.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstBranches.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(long);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstBranch1", Storage="_MstUser1", ThisKey="CreatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.MstBranches1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.MstBranches1.Add(this);
						this._CreatedById = value.Id;
					}
					else
					{
						this._CreatedById = default(long);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstBranch2", Storage="_MstUser2", ThisKey="UpdatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.MstBranches2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.MstBranches2.Add(this);
						this._UpdatedById = value.Id;
					}
					else
					{
						this._UpdatedById = default(long);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstArticleItemInventories(MstArticleItemInventory entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = this;
		}
		
		private void detach_MstArticleItemInventories(MstArticleItemInventory entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = null;
		}
		
		private void attach_MstUsers(MstUser entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = this;
		}
		
		private void detach_MstUsers(MstUser entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = null;
		}
		
		private void attach_TrnCollections(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = this;
		}
		
		private void detach_TrnCollections(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = null;
		}
		
		private void attach_TrnDisbursements(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = this;
		}
		
		private void detach_TrnDisbursements(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = null;
		}
		
		private void attach_TrnDisbursementLines(TrnDisbursementLine entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = this;
		}
		
		private void detach_TrnDisbursementLines(TrnDisbursementLine entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = null;
		}
		
		private void attach_TrnInventories(TrnInventory entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = this;
		}
		
		private void detach_TrnInventories(TrnInventory entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = null;
		}
		
		private void attach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = this;
		}
		
		private void detach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = null;
		}
		
		private void attach_TrnJournalVouchers(TrnJournalVoucher entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = this;
		}
		
		private void detach_TrnJournalVouchers(TrnJournalVoucher entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = null;
		}
		
		private void attach_TrnJournalVoucherLines(TrnJournalVoucherLine entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = this;
		}
		
		private void detach_TrnJournalVoucherLines(TrnJournalVoucherLine entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = null;
		}
		
		private void attach_TrnPurchaseInvoices(TrnPurchaseInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = this;
		}
		
		private void detach_TrnPurchaseInvoices(TrnPurchaseInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = null;
		}
		
		private void attach_TrnPurchaseOrders(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = this;
		}
		
		private void detach_TrnPurchaseOrders(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = null;
		}
		
		private void attach_TrnSalesInvoices(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = this;
		}
		
		private void detach_TrnSalesInvoices(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = null;
		}
		
		private void attach_TrnSalesOrders(TrnSalesOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = this;
		}
		
		private void detach_TrnSalesOrders(TrnSalesOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = null;
		}
		
		private void attach_TrnStockIns(TrnStockIn entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = this;
		}
		
		private void detach_TrnStockIns(TrnStockIn entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = null;
		}
		
		private void attach_TrnStockOuts(TrnStockOut entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = this;
		}
		
		private void detach_TrnStockOuts(TrnStockOut entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = null;
		}
		
		private void attach_TrnStockTransfers(TrnStockTransfer entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = this;
		}
		
		private void detach_TrnStockTransfers(TrnStockTransfer entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = null;
		}
		
		private void attach_TrnStockTransfers1(TrnStockTransfer entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch1 = this;
		}
		
		private void detach_TrnStockTransfers1(TrnStockTransfer entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstCompany")]
	public partial class MstCompany : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _UserId;
		
		private string _CompanyCode;
		
		private string _Company;
		
		private string _Address;
		
		private string _ContactNumber;
		
		private bool _IsLocked;
		
		private long _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private long _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<MstAccountBudget> _MstAccountBudgets;
		
		private EntitySet<MstBranch> _MstBranches;
		
		private EntitySet<MstUserStaffRole> _MstUserStaffRoles;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnCompanyCodeChanging(string value);
    partial void OnCompanyCodeChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnContactNumberChanging(string value);
    partial void OnContactNumberChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(long value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(long value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public MstCompany()
		{
			this._MstAccountBudgets = new EntitySet<MstAccountBudget>(new Action<MstAccountBudget>(this.attach_MstAccountBudgets), new Action<MstAccountBudget>(this.detach_MstAccountBudgets));
			this._MstBranches = new EntitySet<MstBranch>(new Action<MstBranch>(this.attach_MstBranches), new Action<MstBranch>(this.detach_MstBranches));
			this._MstUserStaffRoles = new EntitySet<MstUserStaffRole>(new Action<MstUserStaffRole>(this.attach_MstUserStaffRoles), new Action<MstUserStaffRole>(this.detach_MstUserStaffRoles));
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CompanyCode
		{
			get
			{
				return this._CompanyCode;
			}
			set
			{
				if ((this._CompanyCode != value))
				{
					this.OnCompanyCodeChanging(value);
					this.SendPropertyChanging();
					this._CompanyCode = value;
					this.SendPropertyChanged("CompanyCode");
					this.OnCompanyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ContactNumber
		{
			get
			{
				return this._ContactNumber;
			}
			set
			{
				if ((this._ContactNumber != value))
				{
					this.OnContactNumberChanging(value);
					this.SendPropertyChanging();
					this._ContactNumber = value;
					this.SendPropertyChanged("ContactNumber");
					this.OnContactNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="BigInt NOT NULL")]
		public long CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="BigInt NOT NULL")]
		public long UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstCompany_MstAccountBudget", Storage="_MstAccountBudgets", ThisKey="Id", OtherKey="CompanyId")]
		public EntitySet<MstAccountBudget> MstAccountBudgets
		{
			get
			{
				return this._MstAccountBudgets;
			}
			set
			{
				this._MstAccountBudgets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstCompany_MstBranch", Storage="_MstBranches", ThisKey="Id", OtherKey="CompanyId")]
		public EntitySet<MstBranch> MstBranches
		{
			get
			{
				return this._MstBranches;
			}
			set
			{
				this._MstBranches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstCompany_MstUserStaffRole", Storage="_MstUserStaffRoles", ThisKey="Id", OtherKey="CompanyId")]
		public EntitySet<MstUserStaffRole> MstUserStaffRoles
		{
			get
			{
				return this._MstUserStaffRoles;
			}
			set
			{
				this._MstUserStaffRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstCompany", Storage="_MstUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstCompanies.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstCompanies.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(long);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstCompany1", Storage="_MstUser1", ThisKey="CreatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.MstCompanies1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.MstCompanies1.Add(this);
						this._CreatedById = value.Id;
					}
					else
					{
						this._CreatedById = default(long);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstCompany2", Storage="_MstUser2", ThisKey="UpdatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.MstCompanies2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.MstCompanies2.Add(this);
						this._UpdatedById = value.Id;
					}
					else
					{
						this._UpdatedById = default(long);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstAccountBudgets(MstAccountBudget entity)
		{
			this.SendPropertyChanging();
			entity.MstCompany = this;
		}
		
		private void detach_MstAccountBudgets(MstAccountBudget entity)
		{
			this.SendPropertyChanging();
			entity.MstCompany = null;
		}
		
		private void attach_MstBranches(MstBranch entity)
		{
			this.SendPropertyChanging();
			entity.MstCompany = this;
		}
		
		private void detach_MstBranches(MstBranch entity)
		{
			this.SendPropertyChanging();
			entity.MstCompany = null;
		}
		
		private void attach_MstUserStaffRoles(MstUserStaffRole entity)
		{
			this.SendPropertyChanging();
			entity.MstCompany = this;
		}
		
		private void detach_MstUserStaffRoles(MstUserStaffRole entity)
		{
			this.SendPropertyChanging();
			entity.MstCompany = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstDiscount")]
	public partial class MstDiscount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _UserId;
		
		private string _Discount;
		
		private decimal _DiscountRate;
		
		private bool _IsTaxLess;
		
		private bool _IsLocked;
		
		private long _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private long _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<TrnSalesInvoiceLine> _TrnSalesInvoiceLines;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnDiscountChanging(string value);
    partial void OnDiscountChanged();
    partial void OnDiscountRateChanging(decimal value);
    partial void OnDiscountRateChanged();
    partial void OnIsTaxLessChanging(bool value);
    partial void OnIsTaxLessChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(long value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(long value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public MstDiscount()
		{
			this._TrnSalesInvoiceLines = new EntitySet<TrnSalesInvoiceLine>(new Action<TrnSalesInvoiceLine>(this.attach_TrnSalesInvoiceLines), new Action<TrnSalesInvoiceLine>(this.detach_TrnSalesInvoiceLines));
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountRate", DbType="Decimal(18,5) NOT NULL")]
		public decimal DiscountRate
		{
			get
			{
				return this._DiscountRate;
			}
			set
			{
				if ((this._DiscountRate != value))
				{
					this.OnDiscountRateChanging(value);
					this.SendPropertyChanging();
					this._DiscountRate = value;
					this.SendPropertyChanged("DiscountRate");
					this.OnDiscountRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTaxLess", DbType="Bit NOT NULL")]
		public bool IsTaxLess
		{
			get
			{
				return this._IsTaxLess;
			}
			set
			{
				if ((this._IsTaxLess != value))
				{
					this.OnIsTaxLessChanging(value);
					this.SendPropertyChanging();
					this._IsTaxLess = value;
					this.SendPropertyChanged("IsTaxLess");
					this.OnIsTaxLessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="BigInt NOT NULL")]
		public long CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="BigInt NOT NULL")]
		public long UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstDiscount_TrnSalesInvoiceLine", Storage="_TrnSalesInvoiceLines", ThisKey="Id", OtherKey="DiscountId")]
		public EntitySet<TrnSalesInvoiceLine> TrnSalesInvoiceLines
		{
			get
			{
				return this._TrnSalesInvoiceLines;
			}
			set
			{
				this._TrnSalesInvoiceLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstDiscount", Storage="_MstUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstDiscounts.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstDiscounts.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(long);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstDiscount1", Storage="_MstUser1", ThisKey="CreatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.MstDiscounts1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.MstDiscounts1.Add(this);
						this._CreatedById = value.Id;
					}
					else
					{
						this._CreatedById = default(long);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstDiscount2", Storage="_MstUser2", ThisKey="UpdatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.MstDiscounts2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.MstDiscounts2.Add(this);
						this._UpdatedById = value.Id;
					}
					else
					{
						this._UpdatedById = default(long);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnSalesInvoiceLines(TrnSalesInvoiceLine entity)
		{
			this.SendPropertyChanging();
			entity.MstDiscount = this;
		}
		
		private void detach_TrnSalesInvoiceLines(TrnSalesInvoiceLine entity)
		{
			this.SendPropertyChanging();
			entity.MstDiscount = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstPayType")]
	public partial class MstPayType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _UserId;
		
		private string _PayType;
		
		private long _AccountId;
		
		private bool _IsLocked;
		
		private long _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private long _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntityRef<MstPayType> _MstPayType2;
		
		private EntitySet<TrnCollectionLine> _TrnCollectionLines;
		
		private EntitySet<TrnDisbursement> _TrnDisbursements;
		
		private EntityRef<MstAccount> _MstAccount;
		
		private EntityRef<MstPayType> _MstPayType1;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnPayTypeChanging(string value);
    partial void OnPayTypeChanged();
    partial void OnAccountIdChanging(long value);
    partial void OnAccountIdChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(long value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(long value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public MstPayType()
		{
			this._MstPayType2 = default(EntityRef<MstPayType>);
			this._TrnCollectionLines = new EntitySet<TrnCollectionLine>(new Action<TrnCollectionLine>(this.attach_TrnCollectionLines), new Action<TrnCollectionLine>(this.detach_TrnCollectionLines));
			this._TrnDisbursements = new EntitySet<TrnDisbursement>(new Action<TrnDisbursement>(this.attach_TrnDisbursements), new Action<TrnDisbursement>(this.detach_TrnDisbursements));
			this._MstAccount = default(EntityRef<MstAccount>);
			this._MstPayType1 = default(EntityRef<MstPayType>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._MstPayType1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PayType
		{
			get
			{
				return this._PayType;
			}
			set
			{
				if ((this._PayType != value))
				{
					this.OnPayTypeChanging(value);
					this.SendPropertyChanging();
					this._PayType = value;
					this.SendPropertyChanged("PayType");
					this.OnPayTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="BigInt NOT NULL")]
		public long AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._MstAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="BigInt NOT NULL")]
		public long CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="BigInt NOT NULL")]
		public long UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPayType_MstPayType", Storage="_MstPayType2", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public MstPayType MstPayType2
		{
			get
			{
				return this._MstPayType2.Entity;
			}
			set
			{
				MstPayType previousValue = this._MstPayType2.Entity;
				if (((previousValue != value) 
							|| (this._MstPayType2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPayType2.Entity = null;
						previousValue.MstPayType1 = null;
					}
					this._MstPayType2.Entity = value;
					if ((value != null))
					{
						value.MstPayType1 = this;
					}
					this.SendPropertyChanged("MstPayType2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPayType_TrnCollectionLine", Storage="_TrnCollectionLines", ThisKey="Id", OtherKey="PayTypeId")]
		public EntitySet<TrnCollectionLine> TrnCollectionLines
		{
			get
			{
				return this._TrnCollectionLines;
			}
			set
			{
				this._TrnCollectionLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPayType_TrnDisbursement", Storage="_TrnDisbursements", ThisKey="Id", OtherKey="PayTypeId")]
		public EntitySet<TrnDisbursement> TrnDisbursements
		{
			get
			{
				return this._TrnDisbursements;
			}
			set
			{
				this._TrnDisbursements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstPayType", Storage="_MstAccount", ThisKey="AccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount
		{
			get
			{
				return this._MstAccount.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount.Entity = null;
						previousValue.MstPayTypes.Remove(this);
					}
					this._MstAccount.Entity = value;
					if ((value != null))
					{
						value.MstPayTypes.Add(this);
						this._AccountId = value.Id;
					}
					else
					{
						this._AccountId = default(long);
					}
					this.SendPropertyChanged("MstAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPayType_MstPayType", Storage="_MstPayType1", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public MstPayType MstPayType1
		{
			get
			{
				return this._MstPayType1.Entity;
			}
			set
			{
				MstPayType previousValue = this._MstPayType1.Entity;
				if (((previousValue != value) 
							|| (this._MstPayType1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPayType1.Entity = null;
						previousValue.MstPayType2 = null;
					}
					this._MstPayType1.Entity = value;
					if ((value != null))
					{
						value.MstPayType2 = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(long);
					}
					this.SendPropertyChanged("MstPayType1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstPayType", Storage="_MstUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstPayTypes.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstPayTypes.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(long);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstPayType1", Storage="_MstUser1", ThisKey="CreatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.MstPayTypes1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.MstPayTypes1.Add(this);
						this._CreatedById = value.Id;
					}
					else
					{
						this._CreatedById = default(long);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstPayType2", Storage="_MstUser2", ThisKey="UpdatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.MstPayTypes2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.MstPayTypes2.Add(this);
						this._UpdatedById = value.Id;
					}
					else
					{
						this._UpdatedById = default(long);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnCollectionLines(TrnCollectionLine entity)
		{
			this.SendPropertyChanging();
			entity.MstPayType = this;
		}
		
		private void detach_TrnCollectionLines(TrnCollectionLine entity)
		{
			this.SendPropertyChanging();
			entity.MstPayType = null;
		}
		
		private void attach_TrnDisbursements(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstPayType = this;
		}
		
		private void detach_TrnDisbursements(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstPayType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstPeriod")]
	public partial class MstPeriod : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _UserId;
		
		private string _PeriodCode;
		
		private string _Period;
		
		private bool _IsLocked;
		
		private long _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private long _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<MstAccountBudget> _MstAccountBudgets;
		
		private EntitySet<MstUser> _MstUsers;
		
		private EntitySet<TrnCollection> _TrnCollections;
		
		private EntitySet<TrnDisbursement> _TrnDisbursements;
		
		private EntitySet<TrnInventory> _TrnInventories;
		
		private EntitySet<TrnJournal> _TrnJournals;
		
		private EntitySet<TrnJournalVoucher> _TrnJournalVouchers;
		
		private EntitySet<TrnPurchaseInvoice> _TrnPurchaseInvoices;
		
		private EntitySet<TrnPurchaseOrder> _TrnPurchaseOrders;
		
		private EntitySet<TrnSalesInvoice> _TrnSalesInvoices;
		
		private EntitySet<TrnSalesOrder> _TrnSalesOrders;
		
		private EntitySet<TrnStockIn> _TrnStockIns;
		
		private EntitySet<TrnStockOut> _TrnStockOuts;
		
		private EntitySet<TrnStockTransfer> _TrnStockTransfers;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnPeriodCodeChanging(string value);
    partial void OnPeriodCodeChanged();
    partial void OnPeriodChanging(string value);
    partial void OnPeriodChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(long value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(long value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public MstPeriod()
		{
			this._MstAccountBudgets = new EntitySet<MstAccountBudget>(new Action<MstAccountBudget>(this.attach_MstAccountBudgets), new Action<MstAccountBudget>(this.detach_MstAccountBudgets));
			this._MstUsers = new EntitySet<MstUser>(new Action<MstUser>(this.attach_MstUsers), new Action<MstUser>(this.detach_MstUsers));
			this._TrnCollections = new EntitySet<TrnCollection>(new Action<TrnCollection>(this.attach_TrnCollections), new Action<TrnCollection>(this.detach_TrnCollections));
			this._TrnDisbursements = new EntitySet<TrnDisbursement>(new Action<TrnDisbursement>(this.attach_TrnDisbursements), new Action<TrnDisbursement>(this.detach_TrnDisbursements));
			this._TrnInventories = new EntitySet<TrnInventory>(new Action<TrnInventory>(this.attach_TrnInventories), new Action<TrnInventory>(this.detach_TrnInventories));
			this._TrnJournals = new EntitySet<TrnJournal>(new Action<TrnJournal>(this.attach_TrnJournals), new Action<TrnJournal>(this.detach_TrnJournals));
			this._TrnJournalVouchers = new EntitySet<TrnJournalVoucher>(new Action<TrnJournalVoucher>(this.attach_TrnJournalVouchers), new Action<TrnJournalVoucher>(this.detach_TrnJournalVouchers));
			this._TrnPurchaseInvoices = new EntitySet<TrnPurchaseInvoice>(new Action<TrnPurchaseInvoice>(this.attach_TrnPurchaseInvoices), new Action<TrnPurchaseInvoice>(this.detach_TrnPurchaseInvoices));
			this._TrnPurchaseOrders = new EntitySet<TrnPurchaseOrder>(new Action<TrnPurchaseOrder>(this.attach_TrnPurchaseOrders), new Action<TrnPurchaseOrder>(this.detach_TrnPurchaseOrders));
			this._TrnSalesInvoices = new EntitySet<TrnSalesInvoice>(new Action<TrnSalesInvoice>(this.attach_TrnSalesInvoices), new Action<TrnSalesInvoice>(this.detach_TrnSalesInvoices));
			this._TrnSalesOrders = new EntitySet<TrnSalesOrder>(new Action<TrnSalesOrder>(this.attach_TrnSalesOrders), new Action<TrnSalesOrder>(this.detach_TrnSalesOrders));
			this._TrnStockIns = new EntitySet<TrnStockIn>(new Action<TrnStockIn>(this.attach_TrnStockIns), new Action<TrnStockIn>(this.detach_TrnStockIns));
			this._TrnStockOuts = new EntitySet<TrnStockOut>(new Action<TrnStockOut>(this.attach_TrnStockOuts), new Action<TrnStockOut>(this.detach_TrnStockOuts));
			this._TrnStockTransfers = new EntitySet<TrnStockTransfer>(new Action<TrnStockTransfer>(this.attach_TrnStockTransfers), new Action<TrnStockTransfer>(this.detach_TrnStockTransfers));
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodCode", DbType="NVarChar(2) NOT NULL", CanBeNull=false)]
		public string PeriodCode
		{
			get
			{
				return this._PeriodCode;
			}
			set
			{
				if ((this._PeriodCode != value))
				{
					this.OnPeriodCodeChanging(value);
					this.SendPropertyChanging();
					this._PeriodCode = value;
					this.SendPropertyChanged("PeriodCode");
					this.OnPeriodCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Period", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Period
		{
			get
			{
				return this._Period;
			}
			set
			{
				if ((this._Period != value))
				{
					this.OnPeriodChanging(value);
					this.SendPropertyChanging();
					this._Period = value;
					this.SendPropertyChanged("Period");
					this.OnPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="BigInt NOT NULL")]
		public long CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="BigInt NOT NULL")]
		public long UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_MstAccountBudget", Storage="_MstAccountBudgets", ThisKey="Id", OtherKey="PeriodId")]
		public EntitySet<MstAccountBudget> MstAccountBudgets
		{
			get
			{
				return this._MstAccountBudgets;
			}
			set
			{
				this._MstAccountBudgets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_MstUser", Storage="_MstUsers", ThisKey="Id", OtherKey="DefaultPeriodId")]
		public EntitySet<MstUser> MstUsers
		{
			get
			{
				return this._MstUsers;
			}
			set
			{
				this._MstUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_TrnCollection", Storage="_TrnCollections", ThisKey="Id", OtherKey="PeriodId")]
		public EntitySet<TrnCollection> TrnCollections
		{
			get
			{
				return this._TrnCollections;
			}
			set
			{
				this._TrnCollections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_TrnDisbursement", Storage="_TrnDisbursements", ThisKey="Id", OtherKey="PeriodId")]
		public EntitySet<TrnDisbursement> TrnDisbursements
		{
			get
			{
				return this._TrnDisbursements;
			}
			set
			{
				this._TrnDisbursements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_TrnInventory", Storage="_TrnInventories", ThisKey="Id", OtherKey="PeriodId")]
		public EntitySet<TrnInventory> TrnInventories
		{
			get
			{
				return this._TrnInventories;
			}
			set
			{
				this._TrnInventories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_TrnJournal", Storage="_TrnJournals", ThisKey="Id", OtherKey="PeriodId")]
		public EntitySet<TrnJournal> TrnJournals
		{
			get
			{
				return this._TrnJournals;
			}
			set
			{
				this._TrnJournals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_TrnJournalVoucher", Storage="_TrnJournalVouchers", ThisKey="Id", OtherKey="PeriodId")]
		public EntitySet<TrnJournalVoucher> TrnJournalVouchers
		{
			get
			{
				return this._TrnJournalVouchers;
			}
			set
			{
				this._TrnJournalVouchers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_TrnPurchaseInvoice", Storage="_TrnPurchaseInvoices", ThisKey="Id", OtherKey="PeriodId")]
		public EntitySet<TrnPurchaseInvoice> TrnPurchaseInvoices
		{
			get
			{
				return this._TrnPurchaseInvoices;
			}
			set
			{
				this._TrnPurchaseInvoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_TrnPurchaseOrder", Storage="_TrnPurchaseOrders", ThisKey="Id", OtherKey="PeriodId")]
		public EntitySet<TrnPurchaseOrder> TrnPurchaseOrders
		{
			get
			{
				return this._TrnPurchaseOrders;
			}
			set
			{
				this._TrnPurchaseOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_TrnSalesInvoice", Storage="_TrnSalesInvoices", ThisKey="Id", OtherKey="PeriodId")]
		public EntitySet<TrnSalesInvoice> TrnSalesInvoices
		{
			get
			{
				return this._TrnSalesInvoices;
			}
			set
			{
				this._TrnSalesInvoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_TrnSalesOrder", Storage="_TrnSalesOrders", ThisKey="Id", OtherKey="PeriodId")]
		public EntitySet<TrnSalesOrder> TrnSalesOrders
		{
			get
			{
				return this._TrnSalesOrders;
			}
			set
			{
				this._TrnSalesOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_TrnStockIn", Storage="_TrnStockIns", ThisKey="Id", OtherKey="PeriodId")]
		public EntitySet<TrnStockIn> TrnStockIns
		{
			get
			{
				return this._TrnStockIns;
			}
			set
			{
				this._TrnStockIns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_TrnStockOut", Storage="_TrnStockOuts", ThisKey="Id", OtherKey="PeriodId")]
		public EntitySet<TrnStockOut> TrnStockOuts
		{
			get
			{
				return this._TrnStockOuts;
			}
			set
			{
				this._TrnStockOuts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_TrnStockTransfer", Storage="_TrnStockTransfers", ThisKey="Id", OtherKey="PeriodId")]
		public EntitySet<TrnStockTransfer> TrnStockTransfers
		{
			get
			{
				return this._TrnStockTransfers;
			}
			set
			{
				this._TrnStockTransfers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstPeriod", Storage="_MstUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstPeriods.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstPeriods.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(long);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstPeriod1", Storage="_MstUser1", ThisKey="CreatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.MstPeriods1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.MstPeriods1.Add(this);
						this._CreatedById = value.Id;
					}
					else
					{
						this._CreatedById = default(long);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstPeriod2", Storage="_MstUser2", ThisKey="UpdatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.MstPeriods2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.MstPeriods2.Add(this);
						this._UpdatedById = value.Id;
					}
					else
					{
						this._UpdatedById = default(long);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstAccountBudgets(MstAccountBudget entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = this;
		}
		
		private void detach_MstAccountBudgets(MstAccountBudget entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = null;
		}
		
		private void attach_MstUsers(MstUser entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = this;
		}
		
		private void detach_MstUsers(MstUser entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = null;
		}
		
		private void attach_TrnCollections(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = this;
		}
		
		private void detach_TrnCollections(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = null;
		}
		
		private void attach_TrnDisbursements(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = this;
		}
		
		private void detach_TrnDisbursements(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = null;
		}
		
		private void attach_TrnInventories(TrnInventory entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = this;
		}
		
		private void detach_TrnInventories(TrnInventory entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = null;
		}
		
		private void attach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = this;
		}
		
		private void detach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = null;
		}
		
		private void attach_TrnJournalVouchers(TrnJournalVoucher entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = this;
		}
		
		private void detach_TrnJournalVouchers(TrnJournalVoucher entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = null;
		}
		
		private void attach_TrnPurchaseInvoices(TrnPurchaseInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = this;
		}
		
		private void detach_TrnPurchaseInvoices(TrnPurchaseInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = null;
		}
		
		private void attach_TrnPurchaseOrders(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = this;
		}
		
		private void detach_TrnPurchaseOrders(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = null;
		}
		
		private void attach_TrnSalesInvoices(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = this;
		}
		
		private void detach_TrnSalesInvoices(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = null;
		}
		
		private void attach_TrnSalesOrders(TrnSalesOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = this;
		}
		
		private void detach_TrnSalesOrders(TrnSalesOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = null;
		}
		
		private void attach_TrnStockIns(TrnStockIn entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = this;
		}
		
		private void detach_TrnStockIns(TrnStockIn entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = null;
		}
		
		private void attach_TrnStockOuts(TrnStockOut entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = this;
		}
		
		private void detach_TrnStockOuts(TrnStockOut entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = null;
		}
		
		private void attach_TrnStockTransfers(TrnStockTransfer entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = this;
		}
		
		private void detach_TrnStockTransfers(TrnStockTransfer entity)
		{
			this.SendPropertyChanging();
			entity.MstPeriod = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstTax")]
	public partial class MstTax : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _UserId;
		
		private string _TaxCode;
		
		private long _TaxTypeId;
		
		private decimal _TaxRate;
		
		private long _AccountId;
		
		private bool _IsLocked;
		
		private long _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private long _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<MstArticleItem> _MstArticleItems;
		
		private EntitySet<MstArticleItem> _MstArticleItems1;
		
		private EntitySet<TrnPurchaseInvoiceLine> _TrnPurchaseInvoiceLines;
		
		private EntitySet<TrnSalesInvoiceLine> _TrnSalesInvoiceLines;
		
		private EntityRef<MstAccount> _MstAccount;
		
		private EntityRef<MstTaxType> _MstTaxType;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnTaxCodeChanging(string value);
    partial void OnTaxCodeChanged();
    partial void OnTaxTypeIdChanging(long value);
    partial void OnTaxTypeIdChanged();
    partial void OnTaxRateChanging(decimal value);
    partial void OnTaxRateChanged();
    partial void OnAccountIdChanging(long value);
    partial void OnAccountIdChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(long value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(long value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public MstTax()
		{
			this._MstArticleItems = new EntitySet<MstArticleItem>(new Action<MstArticleItem>(this.attach_MstArticleItems), new Action<MstArticleItem>(this.detach_MstArticleItems));
			this._MstArticleItems1 = new EntitySet<MstArticleItem>(new Action<MstArticleItem>(this.attach_MstArticleItems1), new Action<MstArticleItem>(this.detach_MstArticleItems1));
			this._TrnPurchaseInvoiceLines = new EntitySet<TrnPurchaseInvoiceLine>(new Action<TrnPurchaseInvoiceLine>(this.attach_TrnPurchaseInvoiceLines), new Action<TrnPurchaseInvoiceLine>(this.detach_TrnPurchaseInvoiceLines));
			this._TrnSalesInvoiceLines = new EntitySet<TrnSalesInvoiceLine>(new Action<TrnSalesInvoiceLine>(this.attach_TrnSalesInvoiceLines), new Action<TrnSalesInvoiceLine>(this.detach_TrnSalesInvoiceLines));
			this._MstAccount = default(EntityRef<MstAccount>);
			this._MstTaxType = default(EntityRef<MstTaxType>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TaxCode
		{
			get
			{
				return this._TaxCode;
			}
			set
			{
				if ((this._TaxCode != value))
				{
					this.OnTaxCodeChanging(value);
					this.SendPropertyChanging();
					this._TaxCode = value;
					this.SendPropertyChanged("TaxCode");
					this.OnTaxCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxTypeId", DbType="BigInt NOT NULL")]
		public long TaxTypeId
		{
			get
			{
				return this._TaxTypeId;
			}
			set
			{
				if ((this._TaxTypeId != value))
				{
					if (this._MstTaxType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaxTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TaxTypeId = value;
					this.SendPropertyChanged("TaxTypeId");
					this.OnTaxTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxRate", DbType="Decimal(18,5) NOT NULL")]
		public decimal TaxRate
		{
			get
			{
				return this._TaxRate;
			}
			set
			{
				if ((this._TaxRate != value))
				{
					this.OnTaxRateChanging(value);
					this.SendPropertyChanging();
					this._TaxRate = value;
					this.SendPropertyChanged("TaxRate");
					this.OnTaxRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="BigInt NOT NULL")]
		public long AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._MstAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="BigInt NOT NULL")]
		public long CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="BigInt NOT NULL")]
		public long UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTax_MstArticleItem", Storage="_MstArticleItems", ThisKey="Id", OtherKey="PurchaseTaxId")]
		public EntitySet<MstArticleItem> MstArticleItems
		{
			get
			{
				return this._MstArticleItems;
			}
			set
			{
				this._MstArticleItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTax_MstArticleItem1", Storage="_MstArticleItems1", ThisKey="Id", OtherKey="SalesTaxId")]
		public EntitySet<MstArticleItem> MstArticleItems1
		{
			get
			{
				return this._MstArticleItems1;
			}
			set
			{
				this._MstArticleItems1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTax_TrnPurchaseInvoiceLine", Storage="_TrnPurchaseInvoiceLines", ThisKey="Id", OtherKey="TaxId")]
		public EntitySet<TrnPurchaseInvoiceLine> TrnPurchaseInvoiceLines
		{
			get
			{
				return this._TrnPurchaseInvoiceLines;
			}
			set
			{
				this._TrnPurchaseInvoiceLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTax_TrnSalesInvoiceLine", Storage="_TrnSalesInvoiceLines", ThisKey="Id", OtherKey="TaxId")]
		public EntitySet<TrnSalesInvoiceLine> TrnSalesInvoiceLines
		{
			get
			{
				return this._TrnSalesInvoiceLines;
			}
			set
			{
				this._TrnSalesInvoiceLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstTax", Storage="_MstAccount", ThisKey="AccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount
		{
			get
			{
				return this._MstAccount.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount.Entity = null;
						previousValue.MstTaxes.Remove(this);
					}
					this._MstAccount.Entity = value;
					if ((value != null))
					{
						value.MstTaxes.Add(this);
						this._AccountId = value.Id;
					}
					else
					{
						this._AccountId = default(long);
					}
					this.SendPropertyChanged("MstAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTaxType_MstTax", Storage="_MstTaxType", ThisKey="TaxTypeId", OtherKey="Id", IsForeignKey=true)]
		public MstTaxType MstTaxType
		{
			get
			{
				return this._MstTaxType.Entity;
			}
			set
			{
				MstTaxType previousValue = this._MstTaxType.Entity;
				if (((previousValue != value) 
							|| (this._MstTaxType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstTaxType.Entity = null;
						previousValue.MstTaxes.Remove(this);
					}
					this._MstTaxType.Entity = value;
					if ((value != null))
					{
						value.MstTaxes.Add(this);
						this._TaxTypeId = value.Id;
					}
					else
					{
						this._TaxTypeId = default(long);
					}
					this.SendPropertyChanged("MstTaxType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstTax", Storage="_MstUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstTaxes.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstTaxes.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(long);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstTax1", Storage="_MstUser1", ThisKey="CreatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.MstTaxes1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.MstTaxes1.Add(this);
						this._CreatedById = value.Id;
					}
					else
					{
						this._CreatedById = default(long);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstTax2", Storage="_MstUser2", ThisKey="UpdatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.MstTaxes2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.MstTaxes2.Add(this);
						this._UpdatedById = value.Id;
					}
					else
					{
						this._UpdatedById = default(long);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstArticleItems(MstArticleItem entity)
		{
			this.SendPropertyChanging();
			entity.MstTax = this;
		}
		
		private void detach_MstArticleItems(MstArticleItem entity)
		{
			this.SendPropertyChanging();
			entity.MstTax = null;
		}
		
		private void attach_MstArticleItems1(MstArticleItem entity)
		{
			this.SendPropertyChanging();
			entity.MstTax1 = this;
		}
		
		private void detach_MstArticleItems1(MstArticleItem entity)
		{
			this.SendPropertyChanging();
			entity.MstTax1 = null;
		}
		
		private void attach_TrnPurchaseInvoiceLines(TrnPurchaseInvoiceLine entity)
		{
			this.SendPropertyChanging();
			entity.MstTax = this;
		}
		
		private void detach_TrnPurchaseInvoiceLines(TrnPurchaseInvoiceLine entity)
		{
			this.SendPropertyChanging();
			entity.MstTax = null;
		}
		
		private void attach_TrnSalesInvoiceLines(TrnSalesInvoiceLine entity)
		{
			this.SendPropertyChanging();
			entity.MstTax = this;
		}
		
		private void detach_TrnSalesInvoiceLines(TrnSalesInvoiceLine entity)
		{
			this.SendPropertyChanging();
			entity.MstTax = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstTaxType")]
	public partial class MstTaxType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _UserId;
		
		private string _TaxType;
		
		private bool _IsLocked;
		
		private long _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private long _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<MstTax> _MstTaxes;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnTaxTypeChanging(string value);
    partial void OnTaxTypeChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(long value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(long value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public MstTaxType()
		{
			this._MstTaxes = new EntitySet<MstTax>(new Action<MstTax>(this.attach_MstTaxes), new Action<MstTax>(this.detach_MstTaxes));
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TaxType
		{
			get
			{
				return this._TaxType;
			}
			set
			{
				if ((this._TaxType != value))
				{
					this.OnTaxTypeChanging(value);
					this.SendPropertyChanging();
					this._TaxType = value;
					this.SendPropertyChanged("TaxType");
					this.OnTaxTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="BigInt NOT NULL")]
		public long CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="BigInt NOT NULL")]
		public long UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTaxType_MstTax", Storage="_MstTaxes", ThisKey="Id", OtherKey="TaxTypeId")]
		public EntitySet<MstTax> MstTaxes
		{
			get
			{
				return this._MstTaxes;
			}
			set
			{
				this._MstTaxes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstTaxType", Storage="_MstUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstTaxTypes.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstTaxTypes.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(long);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstTaxType1", Storage="_MstUser1", ThisKey="CreatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.MstTaxTypes1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.MstTaxTypes1.Add(this);
						this._CreatedById = value.Id;
					}
					else
					{
						this._CreatedById = default(long);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstTaxType2", Storage="_MstUser2", ThisKey="UpdatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.MstTaxTypes2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.MstTaxTypes2.Add(this);
						this._UpdatedById = value.Id;
					}
					else
					{
						this._UpdatedById = default(long);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstTaxes(MstTax entity)
		{
			this.SendPropertyChanging();
			entity.MstTaxType = this;
		}
		
		private void detach_MstTaxes(MstTax entity)
		{
			this.SendPropertyChanging();
			entity.MstTaxType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstTerm")]
	public partial class MstTerm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _UserId;
		
		private string _Term;
		
		private decimal _NumberOfDays;
		
		private bool _IsLocked;
		
		private long _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private long _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<MstArticleCustomer> _MstArticleCustomers;
		
		private EntitySet<MstArticleSupplier> _MstArticleSuppliers;
		
		private EntitySet<TrnPurchaseInvoice> _TrnPurchaseInvoices;
		
		private EntitySet<TrnPurchaseOrder> _TrnPurchaseOrders;
		
		private EntitySet<TrnSalesInvoice> _TrnSalesInvoices;
		
		private EntitySet<TrnSalesOrder> _TrnSalesOrders;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnTermChanging(string value);
    partial void OnTermChanged();
    partial void OnNumberOfDaysChanging(decimal value);
    partial void OnNumberOfDaysChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(long value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(long value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public MstTerm()
		{
			this._MstArticleCustomers = new EntitySet<MstArticleCustomer>(new Action<MstArticleCustomer>(this.attach_MstArticleCustomers), new Action<MstArticleCustomer>(this.detach_MstArticleCustomers));
			this._MstArticleSuppliers = new EntitySet<MstArticleSupplier>(new Action<MstArticleSupplier>(this.attach_MstArticleSuppliers), new Action<MstArticleSupplier>(this.detach_MstArticleSuppliers));
			this._TrnPurchaseInvoices = new EntitySet<TrnPurchaseInvoice>(new Action<TrnPurchaseInvoice>(this.attach_TrnPurchaseInvoices), new Action<TrnPurchaseInvoice>(this.detach_TrnPurchaseInvoices));
			this._TrnPurchaseOrders = new EntitySet<TrnPurchaseOrder>(new Action<TrnPurchaseOrder>(this.attach_TrnPurchaseOrders), new Action<TrnPurchaseOrder>(this.detach_TrnPurchaseOrders));
			this._TrnSalesInvoices = new EntitySet<TrnSalesInvoice>(new Action<TrnSalesInvoice>(this.attach_TrnSalesInvoices), new Action<TrnSalesInvoice>(this.detach_TrnSalesInvoices));
			this._TrnSalesOrders = new EntitySet<TrnSalesOrder>(new Action<TrnSalesOrder>(this.attach_TrnSalesOrders), new Action<TrnSalesOrder>(this.detach_TrnSalesOrders));
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Term", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Term
		{
			get
			{
				return this._Term;
			}
			set
			{
				if ((this._Term != value))
				{
					this.OnTermChanging(value);
					this.SendPropertyChanging();
					this._Term = value;
					this.SendPropertyChanged("Term");
					this.OnTermChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfDays", DbType="Decimal(18,5) NOT NULL")]
		public decimal NumberOfDays
		{
			get
			{
				return this._NumberOfDays;
			}
			set
			{
				if ((this._NumberOfDays != value))
				{
					this.OnNumberOfDaysChanging(value);
					this.SendPropertyChanging();
					this._NumberOfDays = value;
					this.SendPropertyChanged("NumberOfDays");
					this.OnNumberOfDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="BigInt NOT NULL")]
		public long CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="BigInt NOT NULL")]
		public long UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTerm_MstArticleCustomer", Storage="_MstArticleCustomers", ThisKey="Id", OtherKey="TermId")]
		public EntitySet<MstArticleCustomer> MstArticleCustomers
		{
			get
			{
				return this._MstArticleCustomers;
			}
			set
			{
				this._MstArticleCustomers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTerm_MstArticleSupplier", Storage="_MstArticleSuppliers", ThisKey="Id", OtherKey="TermId")]
		public EntitySet<MstArticleSupplier> MstArticleSuppliers
		{
			get
			{
				return this._MstArticleSuppliers;
			}
			set
			{
				this._MstArticleSuppliers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTerm_TrnPurchaseInvoice", Storage="_TrnPurchaseInvoices", ThisKey="Id", OtherKey="TermId")]
		public EntitySet<TrnPurchaseInvoice> TrnPurchaseInvoices
		{
			get
			{
				return this._TrnPurchaseInvoices;
			}
			set
			{
				this._TrnPurchaseInvoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTerm_TrnPurchaseOrder", Storage="_TrnPurchaseOrders", ThisKey="Id", OtherKey="TermId")]
		public EntitySet<TrnPurchaseOrder> TrnPurchaseOrders
		{
			get
			{
				return this._TrnPurchaseOrders;
			}
			set
			{
				this._TrnPurchaseOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTerm_TrnSalesInvoice", Storage="_TrnSalesInvoices", ThisKey="Id", OtherKey="TermId")]
		public EntitySet<TrnSalesInvoice> TrnSalesInvoices
		{
			get
			{
				return this._TrnSalesInvoices;
			}
			set
			{
				this._TrnSalesInvoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTerm_TrnSalesOrder", Storage="_TrnSalesOrders", ThisKey="Id", OtherKey="TermId")]
		public EntitySet<TrnSalesOrder> TrnSalesOrders
		{
			get
			{
				return this._TrnSalesOrders;
			}
			set
			{
				this._TrnSalesOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstTerm", Storage="_MstUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstTerms.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstTerms.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(long);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstTerm1", Storage="_MstUser1", ThisKey="UpdatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.MstTerms1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.MstTerms1.Add(this);
						this._UpdatedById = value.Id;
					}
					else
					{
						this._UpdatedById = default(long);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstTerm2", Storage="_MstUser2", ThisKey="CreatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.MstTerms2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.MstTerms2.Add(this);
						this._CreatedById = value.Id;
					}
					else
					{
						this._CreatedById = default(long);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstArticleCustomers(MstArticleCustomer entity)
		{
			this.SendPropertyChanging();
			entity.MstTerm = this;
		}
		
		private void detach_MstArticleCustomers(MstArticleCustomer entity)
		{
			this.SendPropertyChanging();
			entity.MstTerm = null;
		}
		
		private void attach_MstArticleSuppliers(MstArticleSupplier entity)
		{
			this.SendPropertyChanging();
			entity.MstTerm = this;
		}
		
		private void detach_MstArticleSuppliers(MstArticleSupplier entity)
		{
			this.SendPropertyChanging();
			entity.MstTerm = null;
		}
		
		private void attach_TrnPurchaseInvoices(TrnPurchaseInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstTerm = this;
		}
		
		private void detach_TrnPurchaseInvoices(TrnPurchaseInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstTerm = null;
		}
		
		private void attach_TrnPurchaseOrders(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstTerm = this;
		}
		
		private void detach_TrnPurchaseOrders(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstTerm = null;
		}
		
		private void attach_TrnSalesInvoices(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstTerm = this;
		}
		
		private void detach_TrnSalesInvoices(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstTerm = null;
		}
		
		private void attach_TrnSalesOrders(TrnSalesOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstTerm = this;
		}
		
		private void detach_TrnSalesOrders(TrnSalesOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstTerm = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstUnit")]
	public partial class MstUnit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _UserId;
		
		private string _Unit;
		
		private bool _IsLocked;
		
		private long _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private long _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<MstArticleItem> _MstArticleItems;
		
		private EntitySet<MstArticleItemComponent> _MstArticleItemComponents;
		
		private EntitySet<MstArticleItemInventory> _MstArticleItemInventories;
		
		private EntitySet<MstArticleItemUnit> _MstArticleItemUnits;
		
		private EntitySet<TrnInventory> _TrnInventories;
		
		private EntitySet<TrnPurchaseInvoiceLine> _TrnPurchaseInvoiceLines;
		
		private EntitySet<TrnPurchaseOrderLine> _TrnPurchaseOrderLines;
		
		private EntitySet<TrnSalesInvoiceLine> _TrnSalesInvoiceLines;
		
		private EntitySet<TrnSalesOrderLine> _TrnSalesOrderLines;
		
		private EntitySet<TrnStockInLine> _TrnStockInLines;
		
		private EntitySet<TrnStockInLine> _TrnStockInLines1;
		
		private EntitySet<TrnStockOutLine> _TrnStockOutLines;
		
		private EntitySet<TrnStockOutLine> _TrnStockOutLines1;
		
		private EntitySet<TrnStockTransferLine> _TrnStockTransferLines;
		
		private EntitySet<TrnStockTransferLine> _TrnStockTransferLines1;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnUnitChanging(string value);
    partial void OnUnitChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(long value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(long value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public MstUnit()
		{
			this._MstArticleItems = new EntitySet<MstArticleItem>(new Action<MstArticleItem>(this.attach_MstArticleItems), new Action<MstArticleItem>(this.detach_MstArticleItems));
			this._MstArticleItemComponents = new EntitySet<MstArticleItemComponent>(new Action<MstArticleItemComponent>(this.attach_MstArticleItemComponents), new Action<MstArticleItemComponent>(this.detach_MstArticleItemComponents));
			this._MstArticleItemInventories = new EntitySet<MstArticleItemInventory>(new Action<MstArticleItemInventory>(this.attach_MstArticleItemInventories), new Action<MstArticleItemInventory>(this.detach_MstArticleItemInventories));
			this._MstArticleItemUnits = new EntitySet<MstArticleItemUnit>(new Action<MstArticleItemUnit>(this.attach_MstArticleItemUnits), new Action<MstArticleItemUnit>(this.detach_MstArticleItemUnits));
			this._TrnInventories = new EntitySet<TrnInventory>(new Action<TrnInventory>(this.attach_TrnInventories), new Action<TrnInventory>(this.detach_TrnInventories));
			this._TrnPurchaseInvoiceLines = new EntitySet<TrnPurchaseInvoiceLine>(new Action<TrnPurchaseInvoiceLine>(this.attach_TrnPurchaseInvoiceLines), new Action<TrnPurchaseInvoiceLine>(this.detach_TrnPurchaseInvoiceLines));
			this._TrnPurchaseOrderLines = new EntitySet<TrnPurchaseOrderLine>(new Action<TrnPurchaseOrderLine>(this.attach_TrnPurchaseOrderLines), new Action<TrnPurchaseOrderLine>(this.detach_TrnPurchaseOrderLines));
			this._TrnSalesInvoiceLines = new EntitySet<TrnSalesInvoiceLine>(new Action<TrnSalesInvoiceLine>(this.attach_TrnSalesInvoiceLines), new Action<TrnSalesInvoiceLine>(this.detach_TrnSalesInvoiceLines));
			this._TrnSalesOrderLines = new EntitySet<TrnSalesOrderLine>(new Action<TrnSalesOrderLine>(this.attach_TrnSalesOrderLines), new Action<TrnSalesOrderLine>(this.detach_TrnSalesOrderLines));
			this._TrnStockInLines = new EntitySet<TrnStockInLine>(new Action<TrnStockInLine>(this.attach_TrnStockInLines), new Action<TrnStockInLine>(this.detach_TrnStockInLines));
			this._TrnStockInLines1 = new EntitySet<TrnStockInLine>(new Action<TrnStockInLine>(this.attach_TrnStockInLines1), new Action<TrnStockInLine>(this.detach_TrnStockInLines1));
			this._TrnStockOutLines = new EntitySet<TrnStockOutLine>(new Action<TrnStockOutLine>(this.attach_TrnStockOutLines), new Action<TrnStockOutLine>(this.detach_TrnStockOutLines));
			this._TrnStockOutLines1 = new EntitySet<TrnStockOutLine>(new Action<TrnStockOutLine>(this.attach_TrnStockOutLines1), new Action<TrnStockOutLine>(this.detach_TrnStockOutLines1));
			this._TrnStockTransferLines = new EntitySet<TrnStockTransferLine>(new Action<TrnStockTransferLine>(this.attach_TrnStockTransferLines), new Action<TrnStockTransferLine>(this.detach_TrnStockTransferLines));
			this._TrnStockTransferLines1 = new EntitySet<TrnStockTransferLine>(new Action<TrnStockTransferLine>(this.attach_TrnStockTransferLines1), new Action<TrnStockTransferLine>(this.detach_TrnStockTransferLines1));
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="BigInt NOT NULL")]
		public long CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="BigInt NOT NULL")]
		public long UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_MstArticleItem", Storage="_MstArticleItems", ThisKey="Id", OtherKey="UnitId")]
		public EntitySet<MstArticleItem> MstArticleItems
		{
			get
			{
				return this._MstArticleItems;
			}
			set
			{
				this._MstArticleItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_MstArticleItemComponent", Storage="_MstArticleItemComponents", ThisKey="Id", OtherKey="UnitId")]
		public EntitySet<MstArticleItemComponent> MstArticleItemComponents
		{
			get
			{
				return this._MstArticleItemComponents;
			}
			set
			{
				this._MstArticleItemComponents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_MstArticleItemInventory", Storage="_MstArticleItemInventories", ThisKey="Id", OtherKey="UnitId")]
		public EntitySet<MstArticleItemInventory> MstArticleItemInventories
		{
			get
			{
				return this._MstArticleItemInventories;
			}
			set
			{
				this._MstArticleItemInventories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_MstArticleItemUnit", Storage="_MstArticleItemUnits", ThisKey="Id", OtherKey="UnitId")]
		public EntitySet<MstArticleItemUnit> MstArticleItemUnits
		{
			get
			{
				return this._MstArticleItemUnits;
			}
			set
			{
				this._MstArticleItemUnits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnInventory", Storage="_TrnInventories", ThisKey="Id", OtherKey="UnitId")]
		public EntitySet<TrnInventory> TrnInventories
		{
			get
			{
				return this._TrnInventories;
			}
			set
			{
				this._TrnInventories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnPurchaseInvoiceLine", Storage="_TrnPurchaseInvoiceLines", ThisKey="Id", OtherKey="UnitId")]
		public EntitySet<TrnPurchaseInvoiceLine> TrnPurchaseInvoiceLines
		{
			get
			{
				return this._TrnPurchaseInvoiceLines;
			}
			set
			{
				this._TrnPurchaseInvoiceLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnPurchaseOrderLine", Storage="_TrnPurchaseOrderLines", ThisKey="Id", OtherKey="UnitId")]
		public EntitySet<TrnPurchaseOrderLine> TrnPurchaseOrderLines
		{
			get
			{
				return this._TrnPurchaseOrderLines;
			}
			set
			{
				this._TrnPurchaseOrderLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnSalesInvoiceLine", Storage="_TrnSalesInvoiceLines", ThisKey="Id", OtherKey="UnitId")]
		public EntitySet<TrnSalesInvoiceLine> TrnSalesInvoiceLines
		{
			get
			{
				return this._TrnSalesInvoiceLines;
			}
			set
			{
				this._TrnSalesInvoiceLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnSalesOrderLine", Storage="_TrnSalesOrderLines", ThisKey="Id", OtherKey="UnitId")]
		public EntitySet<TrnSalesOrderLine> TrnSalesOrderLines
		{
			get
			{
				return this._TrnSalesOrderLines;
			}
			set
			{
				this._TrnSalesOrderLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnStockInLine", Storage="_TrnStockInLines", ThisKey="Id", OtherKey="UnitId")]
		public EntitySet<TrnStockInLine> TrnStockInLines
		{
			get
			{
				return this._TrnStockInLines;
			}
			set
			{
				this._TrnStockInLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnStockInLine1", Storage="_TrnStockInLines1", ThisKey="Id", OtherKey="BaseUnitId")]
		public EntitySet<TrnStockInLine> TrnStockInLines1
		{
			get
			{
				return this._TrnStockInLines1;
			}
			set
			{
				this._TrnStockInLines1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnStockOutLine", Storage="_TrnStockOutLines", ThisKey="Id", OtherKey="UnitId")]
		public EntitySet<TrnStockOutLine> TrnStockOutLines
		{
			get
			{
				return this._TrnStockOutLines;
			}
			set
			{
				this._TrnStockOutLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnStockOutLine1", Storage="_TrnStockOutLines1", ThisKey="Id", OtherKey="BaseUnitId")]
		public EntitySet<TrnStockOutLine> TrnStockOutLines1
		{
			get
			{
				return this._TrnStockOutLines1;
			}
			set
			{
				this._TrnStockOutLines1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnStockTransferLine", Storage="_TrnStockTransferLines", ThisKey="Id", OtherKey="UnitId")]
		public EntitySet<TrnStockTransferLine> TrnStockTransferLines
		{
			get
			{
				return this._TrnStockTransferLines;
			}
			set
			{
				this._TrnStockTransferLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnStockTransferLine1", Storage="_TrnStockTransferLines1", ThisKey="Id", OtherKey="BaseUnitId")]
		public EntitySet<TrnStockTransferLine> TrnStockTransferLines1
		{
			get
			{
				return this._TrnStockTransferLines1;
			}
			set
			{
				this._TrnStockTransferLines1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstUnit", Storage="_MstUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstUnits.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstUnits.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(long);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstUnit1", Storage="_MstUser1", ThisKey="CreatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.MstUnits1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.MstUnits1.Add(this);
						this._CreatedById = value.Id;
					}
					else
					{
						this._CreatedById = default(long);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstUnit2", Storage="_MstUser2", ThisKey="UpdatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.MstUnits2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.MstUnits2.Add(this);
						this._UpdatedById = value.Id;
					}
					else
					{
						this._UpdatedById = default(long);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstArticleItems(MstArticleItem entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = this;
		}
		
		private void detach_MstArticleItems(MstArticleItem entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = null;
		}
		
		private void attach_MstArticleItemComponents(MstArticleItemComponent entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = this;
		}
		
		private void detach_MstArticleItemComponents(MstArticleItemComponent entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = null;
		}
		
		private void attach_MstArticleItemInventories(MstArticleItemInventory entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = this;
		}
		
		private void detach_MstArticleItemInventories(MstArticleItemInventory entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = null;
		}
		
		private void attach_MstArticleItemUnits(MstArticleItemUnit entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = this;
		}
		
		private void detach_MstArticleItemUnits(MstArticleItemUnit entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = null;
		}
		
		private void attach_TrnInventories(TrnInventory entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = this;
		}
		
		private void detach_TrnInventories(TrnInventory entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = null;
		}
		
		private void attach_TrnPurchaseInvoiceLines(TrnPurchaseInvoiceLine entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = this;
		}
		
		private void detach_TrnPurchaseInvoiceLines(TrnPurchaseInvoiceLine entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = null;
		}
		
		private void attach_TrnPurchaseOrderLines(TrnPurchaseOrderLine entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = this;
		}
		
		private void detach_TrnPurchaseOrderLines(TrnPurchaseOrderLine entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = null;
		}
		
		private void attach_TrnSalesInvoiceLines(TrnSalesInvoiceLine entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = this;
		}
		
		private void detach_TrnSalesInvoiceLines(TrnSalesInvoiceLine entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = null;
		}
		
		private void attach_TrnSalesOrderLines(TrnSalesOrderLine entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = this;
		}
		
		private void detach_TrnSalesOrderLines(TrnSalesOrderLine entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = null;
		}
		
		private void attach_TrnStockInLines(TrnStockInLine entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = this;
		}
		
		private void detach_TrnStockInLines(TrnStockInLine entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = null;
		}
		
		private void attach_TrnStockInLines1(TrnStockInLine entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit1 = this;
		}
		
		private void detach_TrnStockInLines1(TrnStockInLine entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit1 = null;
		}
		
		private void attach_TrnStockOutLines(TrnStockOutLine entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = this;
		}
		
		private void detach_TrnStockOutLines(TrnStockOutLine entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = null;
		}
		
		private void attach_TrnStockOutLines1(TrnStockOutLine entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit1 = this;
		}
		
		private void detach_TrnStockOutLines1(TrnStockOutLine entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit1 = null;
		}
		
		private void attach_TrnStockTransferLines(TrnStockTransferLine entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = this;
		}
		
		private void detach_TrnStockTransferLines(TrnStockTransferLine entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = null;
		}
		
		private void attach_TrnStockTransferLines1(TrnStockTransferLine entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit1 = this;
		}
		
		private void detach_TrnStockTransferLines1(TrnStockTransferLine entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstUser")]
	public partial class MstUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Guid _MembershipUserId;
		
		private string _UserAccountNumber;
		
		private string _FullName;
		
		private string _Address;
		
		private string _ContactNumber;
		
		private string _EmailAddress;
		
		private System.Nullable<long> _DefaultBranchId;
		
		private System.Nullable<long> _DefaultPeriodId;
		
		private bool _IsTemplate;
		
		private string _Particulars;
		
		private System.Nullable<long> _FSIncomeStatementAccountId;
		
		private System.Nullable<long> _SupplierAccountId;
		
		private System.Nullable<long> _CustomerAccountId;
		
		private System.Nullable<long> _ItemPurchaseAccountId;
		
		private System.Nullable<long> _ItemSalesAccountId;
		
		private System.Nullable<long> _ItemAssetAccountId;
		
		private bool _IsAutoInventory;
		
		private System.Nullable<long> _TemplateUserId;
		
		private bool _IsLocked;
		
		private System.Nullable<long> _ItemCostAccountId;
		
		private string _InventoryValuationMethod;
		
		private EntitySet<MstAccount> _MstAccounts;
		
		private EntitySet<MstAccount> _MstAccounts1;
		
		private EntitySet<MstAccount> _MstAccounts2;
		
		private EntitySet<MstAccountCashFlow> _MstAccountCashFlows;
		
		private EntitySet<MstAccountCashFlow> _MstAccountCashFlows1;
		
		private EntitySet<MstAccountCashFlow> _MstAccountCashFlows2;
		
		private EntitySet<MstAccountCategory> _MstAccountCategories;
		
		private EntitySet<MstAccountCategory> _MstAccountCategories1;
		
		private EntitySet<MstAccountCategory> _MstAccountCategories2;
		
		private EntitySet<MstAccountType> _MstAccountTypes;
		
		private EntitySet<MstAccountType> _MstAccountTypes1;
		
		private EntitySet<MstAccountType> _MstAccountTypes2;
		
		private EntitySet<MstArticle> _MstArticles;
		
		private EntitySet<MstArticle> _MstArticles1;
		
		private EntitySet<MstArticle> _MstArticles2;
		
		private EntitySet<MstArticleType> _MstArticleTypes;
		
		private EntitySet<MstArticleType> _MstArticleTypes1;
		
		private EntitySet<MstArticleType> _MstArticleTypes2;
		
		private EntitySet<MstBranch> _MstBranches;
		
		private EntitySet<MstBranch> _MstBranches1;
		
		private EntitySet<MstBranch> _MstBranches2;
		
		private EntitySet<MstCompany> _MstCompanies;
		
		private EntitySet<MstCompany> _MstCompanies1;
		
		private EntitySet<MstCompany> _MstCompanies2;
		
		private EntitySet<MstDiscount> _MstDiscounts;
		
		private EntitySet<MstDiscount> _MstDiscounts1;
		
		private EntitySet<MstDiscount> _MstDiscounts2;
		
		private EntitySet<MstPayType> _MstPayTypes;
		
		private EntitySet<MstPayType> _MstPayTypes1;
		
		private EntitySet<MstPayType> _MstPayTypes2;
		
		private EntitySet<MstPeriod> _MstPeriods;
		
		private EntitySet<MstPeriod> _MstPeriods1;
		
		private EntitySet<MstPeriod> _MstPeriods2;
		
		private EntitySet<MstTax> _MstTaxes;
		
		private EntitySet<MstTax> _MstTaxes1;
		
		private EntitySet<MstTax> _MstTaxes2;
		
		private EntitySet<MstTaxType> _MstTaxTypes;
		
		private EntitySet<MstTaxType> _MstTaxTypes1;
		
		private EntitySet<MstTaxType> _MstTaxTypes2;
		
		private EntitySet<MstTerm> _MstTerms;
		
		private EntitySet<MstTerm> _MstTerms1;
		
		private EntitySet<MstTerm> _MstTerms2;
		
		private EntitySet<MstUnit> _MstUnits;
		
		private EntitySet<MstUnit> _MstUnits1;
		
		private EntitySet<MstUnit> _MstUnits2;
		
		private EntitySet<MstUser> _MstUsers;
		
		private EntitySet<MstUserSerialNumber> _MstUserSerialNumbers;
		
		private EntitySet<MstUserStaff> _MstUserStaffs;
		
		private EntitySet<MstUserStaff> _MstUserStaffs1;
		
		private EntitySet<TrnBank> _TrnBanks;
		
		private EntitySet<TrnBank> _TrnBanks1;
		
		private EntitySet<TrnCollection> _TrnCollections;
		
		private EntitySet<TrnCollection> _TrnCollections1;
		
		private EntitySet<TrnCollection> _TrnCollections2;
		
		private EntitySet<TrnCollection> _TrnCollections3;
		
		private EntitySet<TrnCollection> _TrnCollections4;
		
		private EntitySet<TrnDisbursement> _TrnDisbursements;
		
		private EntitySet<TrnDisbursement> _TrnDisbursements1;
		
		private EntitySet<TrnDisbursement> _TrnDisbursements2;
		
		private EntitySet<TrnDisbursement> _TrnDisbursements3;
		
		private EntitySet<TrnDisbursement> _TrnDisbursements4;
		
		private EntitySet<TrnJournalVoucher> _TrnJournalVouchers;
		
		private EntitySet<TrnJournalVoucher> _TrnJournalVouchers1;
		
		private EntitySet<TrnJournalVoucher> _TrnJournalVouchers2;
		
		private EntitySet<TrnJournalVoucher> _TrnJournalVouchers3;
		
		private EntitySet<TrnJournalVoucher> _TrnJournalVouchers4;
		
		private EntitySet<TrnPurchaseInvoice> _TrnPurchaseInvoices;
		
		private EntitySet<TrnPurchaseInvoice> _TrnPurchaseInvoices1;
		
		private EntitySet<TrnPurchaseInvoice> _TrnPurchaseInvoices2;
		
		private EntitySet<TrnPurchaseInvoice> _TrnPurchaseInvoices3;
		
		private EntitySet<TrnPurchaseInvoice> _TrnPurchaseInvoices4;
		
		private EntitySet<TrnPurchaseOrder> _TrnPurchaseOrders;
		
		private EntitySet<TrnPurchaseOrder> _TrnPurchaseOrders1;
		
		private EntitySet<TrnPurchaseOrder> _TrnPurchaseOrders2;
		
		private EntitySet<TrnPurchaseOrder> _TrnPurchaseOrders3;
		
		private EntitySet<TrnPurchaseOrder> _TrnPurchaseOrders4;
		
		private EntitySet<TrnPurchaseOrder> _TrnPurchaseOrders5;
		
		private EntitySet<TrnSalesInvoice> _TrnSalesInvoices;
		
		private EntitySet<TrnSalesInvoice> _TrnSalesInvoices1;
		
		private EntitySet<TrnSalesInvoice> _TrnSalesInvoices2;
		
		private EntitySet<TrnSalesInvoice> _TrnSalesInvoices3;
		
		private EntitySet<TrnSalesInvoice> _TrnSalesInvoices4;
		
		private EntitySet<TrnSalesInvoice> _TrnSalesInvoices5;
		
		private EntitySet<TrnSalesOrder> _TrnSalesOrders;
		
		private EntitySet<TrnSalesOrder> _TrnSalesOrders1;
		
		private EntitySet<TrnSalesOrder> _TrnSalesOrders2;
		
		private EntitySet<TrnSalesOrder> _TrnSalesOrders3;
		
		private EntitySet<TrnSalesOrder> _TrnSalesOrders4;
		
		private EntitySet<TrnSalesOrder> _TrnSalesOrders5;
		
		private EntitySet<TrnStockIn> _TrnStockIns;
		
		private EntitySet<TrnStockIn> _TrnStockIns1;
		
		private EntitySet<TrnStockIn> _TrnStockIns2;
		
		private EntitySet<TrnStockIn> _TrnStockIns3;
		
		private EntitySet<TrnStockIn> _TrnStockIns4;
		
		private EntitySet<TrnStockOut> _TrnStockOuts;
		
		private EntitySet<TrnStockOut> _TrnStockOuts1;
		
		private EntitySet<TrnStockOut> _TrnStockOuts2;
		
		private EntitySet<TrnStockOut> _TrnStockOuts3;
		
		private EntitySet<TrnStockOut> _TrnStockOuts4;
		
		private EntitySet<TrnStockTransfer> _TrnStockTransfers;
		
		private EntitySet<TrnStockTransfer> _TrnStockTransfers1;
		
		private EntitySet<TrnStockTransfer> _TrnStockTransfers2;
		
		private EntitySet<TrnStockTransfer> _TrnStockTransfers3;
		
		private EntitySet<TrnStockTransfer> _TrnStockTransfers4;
		
		private EntityRef<Membership> _Membership;
		
		private EntityRef<MstAccount> _MstAccount;
		
		private EntityRef<MstAccount> _MstAccount1;
		
		private EntityRef<MstAccount> _MstAccount2;
		
		private EntityRef<MstAccount> _MstAccount3;
		
		private EntityRef<MstAccount> _MstAccount4;
		
		private EntityRef<MstAccount> _MstAccount5;
		
		private EntityRef<MstAccount> _MstAccount6;
		
		private EntityRef<MstBranch> _MstBranch;
		
		private EntityRef<MstPeriod> _MstPeriod;
		
		private EntityRef<MstUser> _MstUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnMembershipUserIdChanging(System.Guid value);
    partial void OnMembershipUserIdChanged();
    partial void OnUserAccountNumberChanging(string value);
    partial void OnUserAccountNumberChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnContactNumberChanging(string value);
    partial void OnContactNumberChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnDefaultBranchIdChanging(System.Nullable<long> value);
    partial void OnDefaultBranchIdChanged();
    partial void OnDefaultPeriodIdChanging(System.Nullable<long> value);
    partial void OnDefaultPeriodIdChanged();
    partial void OnIsTemplateChanging(bool value);
    partial void OnIsTemplateChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnFSIncomeStatementAccountIdChanging(System.Nullable<long> value);
    partial void OnFSIncomeStatementAccountIdChanged();
    partial void OnSupplierAccountIdChanging(System.Nullable<long> value);
    partial void OnSupplierAccountIdChanged();
    partial void OnCustomerAccountIdChanging(System.Nullable<long> value);
    partial void OnCustomerAccountIdChanged();
    partial void OnItemPurchaseAccountIdChanging(System.Nullable<long> value);
    partial void OnItemPurchaseAccountIdChanged();
    partial void OnItemSalesAccountIdChanging(System.Nullable<long> value);
    partial void OnItemSalesAccountIdChanged();
    partial void OnItemAssetAccountIdChanging(System.Nullable<long> value);
    partial void OnItemAssetAccountIdChanged();
    partial void OnIsAutoInventoryChanging(bool value);
    partial void OnIsAutoInventoryChanged();
    partial void OnTemplateUserIdChanging(System.Nullable<long> value);
    partial void OnTemplateUserIdChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnItemCostAccountIdChanging(System.Nullable<long> value);
    partial void OnItemCostAccountIdChanged();
    partial void OnInventoryValuationMethodChanging(string value);
    partial void OnInventoryValuationMethodChanged();
    #endregion
		
		public MstUser()
		{
			this._MstAccounts = new EntitySet<MstAccount>(new Action<MstAccount>(this.attach_MstAccounts), new Action<MstAccount>(this.detach_MstAccounts));
			this._MstAccounts1 = new EntitySet<MstAccount>(new Action<MstAccount>(this.attach_MstAccounts1), new Action<MstAccount>(this.detach_MstAccounts1));
			this._MstAccounts2 = new EntitySet<MstAccount>(new Action<MstAccount>(this.attach_MstAccounts2), new Action<MstAccount>(this.detach_MstAccounts2));
			this._MstAccountCashFlows = new EntitySet<MstAccountCashFlow>(new Action<MstAccountCashFlow>(this.attach_MstAccountCashFlows), new Action<MstAccountCashFlow>(this.detach_MstAccountCashFlows));
			this._MstAccountCashFlows1 = new EntitySet<MstAccountCashFlow>(new Action<MstAccountCashFlow>(this.attach_MstAccountCashFlows1), new Action<MstAccountCashFlow>(this.detach_MstAccountCashFlows1));
			this._MstAccountCashFlows2 = new EntitySet<MstAccountCashFlow>(new Action<MstAccountCashFlow>(this.attach_MstAccountCashFlows2), new Action<MstAccountCashFlow>(this.detach_MstAccountCashFlows2));
			this._MstAccountCategories = new EntitySet<MstAccountCategory>(new Action<MstAccountCategory>(this.attach_MstAccountCategories), new Action<MstAccountCategory>(this.detach_MstAccountCategories));
			this._MstAccountCategories1 = new EntitySet<MstAccountCategory>(new Action<MstAccountCategory>(this.attach_MstAccountCategories1), new Action<MstAccountCategory>(this.detach_MstAccountCategories1));
			this._MstAccountCategories2 = new EntitySet<MstAccountCategory>(new Action<MstAccountCategory>(this.attach_MstAccountCategories2), new Action<MstAccountCategory>(this.detach_MstAccountCategories2));
			this._MstAccountTypes = new EntitySet<MstAccountType>(new Action<MstAccountType>(this.attach_MstAccountTypes), new Action<MstAccountType>(this.detach_MstAccountTypes));
			this._MstAccountTypes1 = new EntitySet<MstAccountType>(new Action<MstAccountType>(this.attach_MstAccountTypes1), new Action<MstAccountType>(this.detach_MstAccountTypes1));
			this._MstAccountTypes2 = new EntitySet<MstAccountType>(new Action<MstAccountType>(this.attach_MstAccountTypes2), new Action<MstAccountType>(this.detach_MstAccountTypes2));
			this._MstArticles = new EntitySet<MstArticle>(new Action<MstArticle>(this.attach_MstArticles), new Action<MstArticle>(this.detach_MstArticles));
			this._MstArticles1 = new EntitySet<MstArticle>(new Action<MstArticle>(this.attach_MstArticles1), new Action<MstArticle>(this.detach_MstArticles1));
			this._MstArticles2 = new EntitySet<MstArticle>(new Action<MstArticle>(this.attach_MstArticles2), new Action<MstArticle>(this.detach_MstArticles2));
			this._MstArticleTypes = new EntitySet<MstArticleType>(new Action<MstArticleType>(this.attach_MstArticleTypes), new Action<MstArticleType>(this.detach_MstArticleTypes));
			this._MstArticleTypes1 = new EntitySet<MstArticleType>(new Action<MstArticleType>(this.attach_MstArticleTypes1), new Action<MstArticleType>(this.detach_MstArticleTypes1));
			this._MstArticleTypes2 = new EntitySet<MstArticleType>(new Action<MstArticleType>(this.attach_MstArticleTypes2), new Action<MstArticleType>(this.detach_MstArticleTypes2));
			this._MstBranches = new EntitySet<MstBranch>(new Action<MstBranch>(this.attach_MstBranches), new Action<MstBranch>(this.detach_MstBranches));
			this._MstBranches1 = new EntitySet<MstBranch>(new Action<MstBranch>(this.attach_MstBranches1), new Action<MstBranch>(this.detach_MstBranches1));
			this._MstBranches2 = new EntitySet<MstBranch>(new Action<MstBranch>(this.attach_MstBranches2), new Action<MstBranch>(this.detach_MstBranches2));
			this._MstCompanies = new EntitySet<MstCompany>(new Action<MstCompany>(this.attach_MstCompanies), new Action<MstCompany>(this.detach_MstCompanies));
			this._MstCompanies1 = new EntitySet<MstCompany>(new Action<MstCompany>(this.attach_MstCompanies1), new Action<MstCompany>(this.detach_MstCompanies1));
			this._MstCompanies2 = new EntitySet<MstCompany>(new Action<MstCompany>(this.attach_MstCompanies2), new Action<MstCompany>(this.detach_MstCompanies2));
			this._MstDiscounts = new EntitySet<MstDiscount>(new Action<MstDiscount>(this.attach_MstDiscounts), new Action<MstDiscount>(this.detach_MstDiscounts));
			this._MstDiscounts1 = new EntitySet<MstDiscount>(new Action<MstDiscount>(this.attach_MstDiscounts1), new Action<MstDiscount>(this.detach_MstDiscounts1));
			this._MstDiscounts2 = new EntitySet<MstDiscount>(new Action<MstDiscount>(this.attach_MstDiscounts2), new Action<MstDiscount>(this.detach_MstDiscounts2));
			this._MstPayTypes = new EntitySet<MstPayType>(new Action<MstPayType>(this.attach_MstPayTypes), new Action<MstPayType>(this.detach_MstPayTypes));
			this._MstPayTypes1 = new EntitySet<MstPayType>(new Action<MstPayType>(this.attach_MstPayTypes1), new Action<MstPayType>(this.detach_MstPayTypes1));
			this._MstPayTypes2 = new EntitySet<MstPayType>(new Action<MstPayType>(this.attach_MstPayTypes2), new Action<MstPayType>(this.detach_MstPayTypes2));
			this._MstPeriods = new EntitySet<MstPeriod>(new Action<MstPeriod>(this.attach_MstPeriods), new Action<MstPeriod>(this.detach_MstPeriods));
			this._MstPeriods1 = new EntitySet<MstPeriod>(new Action<MstPeriod>(this.attach_MstPeriods1), new Action<MstPeriod>(this.detach_MstPeriods1));
			this._MstPeriods2 = new EntitySet<MstPeriod>(new Action<MstPeriod>(this.attach_MstPeriods2), new Action<MstPeriod>(this.detach_MstPeriods2));
			this._MstTaxes = new EntitySet<MstTax>(new Action<MstTax>(this.attach_MstTaxes), new Action<MstTax>(this.detach_MstTaxes));
			this._MstTaxes1 = new EntitySet<MstTax>(new Action<MstTax>(this.attach_MstTaxes1), new Action<MstTax>(this.detach_MstTaxes1));
			this._MstTaxes2 = new EntitySet<MstTax>(new Action<MstTax>(this.attach_MstTaxes2), new Action<MstTax>(this.detach_MstTaxes2));
			this._MstTaxTypes = new EntitySet<MstTaxType>(new Action<MstTaxType>(this.attach_MstTaxTypes), new Action<MstTaxType>(this.detach_MstTaxTypes));
			this._MstTaxTypes1 = new EntitySet<MstTaxType>(new Action<MstTaxType>(this.attach_MstTaxTypes1), new Action<MstTaxType>(this.detach_MstTaxTypes1));
			this._MstTaxTypes2 = new EntitySet<MstTaxType>(new Action<MstTaxType>(this.attach_MstTaxTypes2), new Action<MstTaxType>(this.detach_MstTaxTypes2));
			this._MstTerms = new EntitySet<MstTerm>(new Action<MstTerm>(this.attach_MstTerms), new Action<MstTerm>(this.detach_MstTerms));
			this._MstTerms1 = new EntitySet<MstTerm>(new Action<MstTerm>(this.attach_MstTerms1), new Action<MstTerm>(this.detach_MstTerms1));
			this._MstTerms2 = new EntitySet<MstTerm>(new Action<MstTerm>(this.attach_MstTerms2), new Action<MstTerm>(this.detach_MstTerms2));
			this._MstUnits = new EntitySet<MstUnit>(new Action<MstUnit>(this.attach_MstUnits), new Action<MstUnit>(this.detach_MstUnits));
			this._MstUnits1 = new EntitySet<MstUnit>(new Action<MstUnit>(this.attach_MstUnits1), new Action<MstUnit>(this.detach_MstUnits1));
			this._MstUnits2 = new EntitySet<MstUnit>(new Action<MstUnit>(this.attach_MstUnits2), new Action<MstUnit>(this.detach_MstUnits2));
			this._MstUsers = new EntitySet<MstUser>(new Action<MstUser>(this.attach_MstUsers), new Action<MstUser>(this.detach_MstUsers));
			this._MstUserSerialNumbers = new EntitySet<MstUserSerialNumber>(new Action<MstUserSerialNumber>(this.attach_MstUserSerialNumbers), new Action<MstUserSerialNumber>(this.detach_MstUserSerialNumbers));
			this._MstUserStaffs = new EntitySet<MstUserStaff>(new Action<MstUserStaff>(this.attach_MstUserStaffs), new Action<MstUserStaff>(this.detach_MstUserStaffs));
			this._MstUserStaffs1 = new EntitySet<MstUserStaff>(new Action<MstUserStaff>(this.attach_MstUserStaffs1), new Action<MstUserStaff>(this.detach_MstUserStaffs1));
			this._TrnBanks = new EntitySet<TrnBank>(new Action<TrnBank>(this.attach_TrnBanks), new Action<TrnBank>(this.detach_TrnBanks));
			this._TrnBanks1 = new EntitySet<TrnBank>(new Action<TrnBank>(this.attach_TrnBanks1), new Action<TrnBank>(this.detach_TrnBanks1));
			this._TrnCollections = new EntitySet<TrnCollection>(new Action<TrnCollection>(this.attach_TrnCollections), new Action<TrnCollection>(this.detach_TrnCollections));
			this._TrnCollections1 = new EntitySet<TrnCollection>(new Action<TrnCollection>(this.attach_TrnCollections1), new Action<TrnCollection>(this.detach_TrnCollections1));
			this._TrnCollections2 = new EntitySet<TrnCollection>(new Action<TrnCollection>(this.attach_TrnCollections2), new Action<TrnCollection>(this.detach_TrnCollections2));
			this._TrnCollections3 = new EntitySet<TrnCollection>(new Action<TrnCollection>(this.attach_TrnCollections3), new Action<TrnCollection>(this.detach_TrnCollections3));
			this._TrnCollections4 = new EntitySet<TrnCollection>(new Action<TrnCollection>(this.attach_TrnCollections4), new Action<TrnCollection>(this.detach_TrnCollections4));
			this._TrnDisbursements = new EntitySet<TrnDisbursement>(new Action<TrnDisbursement>(this.attach_TrnDisbursements), new Action<TrnDisbursement>(this.detach_TrnDisbursements));
			this._TrnDisbursements1 = new EntitySet<TrnDisbursement>(new Action<TrnDisbursement>(this.attach_TrnDisbursements1), new Action<TrnDisbursement>(this.detach_TrnDisbursements1));
			this._TrnDisbursements2 = new EntitySet<TrnDisbursement>(new Action<TrnDisbursement>(this.attach_TrnDisbursements2), new Action<TrnDisbursement>(this.detach_TrnDisbursements2));
			this._TrnDisbursements3 = new EntitySet<TrnDisbursement>(new Action<TrnDisbursement>(this.attach_TrnDisbursements3), new Action<TrnDisbursement>(this.detach_TrnDisbursements3));
			this._TrnDisbursements4 = new EntitySet<TrnDisbursement>(new Action<TrnDisbursement>(this.attach_TrnDisbursements4), new Action<TrnDisbursement>(this.detach_TrnDisbursements4));
			this._TrnJournalVouchers = new EntitySet<TrnJournalVoucher>(new Action<TrnJournalVoucher>(this.attach_TrnJournalVouchers), new Action<TrnJournalVoucher>(this.detach_TrnJournalVouchers));
			this._TrnJournalVouchers1 = new EntitySet<TrnJournalVoucher>(new Action<TrnJournalVoucher>(this.attach_TrnJournalVouchers1), new Action<TrnJournalVoucher>(this.detach_TrnJournalVouchers1));
			this._TrnJournalVouchers2 = new EntitySet<TrnJournalVoucher>(new Action<TrnJournalVoucher>(this.attach_TrnJournalVouchers2), new Action<TrnJournalVoucher>(this.detach_TrnJournalVouchers2));
			this._TrnJournalVouchers3 = new EntitySet<TrnJournalVoucher>(new Action<TrnJournalVoucher>(this.attach_TrnJournalVouchers3), new Action<TrnJournalVoucher>(this.detach_TrnJournalVouchers3));
			this._TrnJournalVouchers4 = new EntitySet<TrnJournalVoucher>(new Action<TrnJournalVoucher>(this.attach_TrnJournalVouchers4), new Action<TrnJournalVoucher>(this.detach_TrnJournalVouchers4));
			this._TrnPurchaseInvoices = new EntitySet<TrnPurchaseInvoice>(new Action<TrnPurchaseInvoice>(this.attach_TrnPurchaseInvoices), new Action<TrnPurchaseInvoice>(this.detach_TrnPurchaseInvoices));
			this._TrnPurchaseInvoices1 = new EntitySet<TrnPurchaseInvoice>(new Action<TrnPurchaseInvoice>(this.attach_TrnPurchaseInvoices1), new Action<TrnPurchaseInvoice>(this.detach_TrnPurchaseInvoices1));
			this._TrnPurchaseInvoices2 = new EntitySet<TrnPurchaseInvoice>(new Action<TrnPurchaseInvoice>(this.attach_TrnPurchaseInvoices2), new Action<TrnPurchaseInvoice>(this.detach_TrnPurchaseInvoices2));
			this._TrnPurchaseInvoices3 = new EntitySet<TrnPurchaseInvoice>(new Action<TrnPurchaseInvoice>(this.attach_TrnPurchaseInvoices3), new Action<TrnPurchaseInvoice>(this.detach_TrnPurchaseInvoices3));
			this._TrnPurchaseInvoices4 = new EntitySet<TrnPurchaseInvoice>(new Action<TrnPurchaseInvoice>(this.attach_TrnPurchaseInvoices4), new Action<TrnPurchaseInvoice>(this.detach_TrnPurchaseInvoices4));
			this._TrnPurchaseOrders = new EntitySet<TrnPurchaseOrder>(new Action<TrnPurchaseOrder>(this.attach_TrnPurchaseOrders), new Action<TrnPurchaseOrder>(this.detach_TrnPurchaseOrders));
			this._TrnPurchaseOrders1 = new EntitySet<TrnPurchaseOrder>(new Action<TrnPurchaseOrder>(this.attach_TrnPurchaseOrders1), new Action<TrnPurchaseOrder>(this.detach_TrnPurchaseOrders1));
			this._TrnPurchaseOrders2 = new EntitySet<TrnPurchaseOrder>(new Action<TrnPurchaseOrder>(this.attach_TrnPurchaseOrders2), new Action<TrnPurchaseOrder>(this.detach_TrnPurchaseOrders2));
			this._TrnPurchaseOrders3 = new EntitySet<TrnPurchaseOrder>(new Action<TrnPurchaseOrder>(this.attach_TrnPurchaseOrders3), new Action<TrnPurchaseOrder>(this.detach_TrnPurchaseOrders3));
			this._TrnPurchaseOrders4 = new EntitySet<TrnPurchaseOrder>(new Action<TrnPurchaseOrder>(this.attach_TrnPurchaseOrders4), new Action<TrnPurchaseOrder>(this.detach_TrnPurchaseOrders4));
			this._TrnPurchaseOrders5 = new EntitySet<TrnPurchaseOrder>(new Action<TrnPurchaseOrder>(this.attach_TrnPurchaseOrders5), new Action<TrnPurchaseOrder>(this.detach_TrnPurchaseOrders5));
			this._TrnSalesInvoices = new EntitySet<TrnSalesInvoice>(new Action<TrnSalesInvoice>(this.attach_TrnSalesInvoices), new Action<TrnSalesInvoice>(this.detach_TrnSalesInvoices));
			this._TrnSalesInvoices1 = new EntitySet<TrnSalesInvoice>(new Action<TrnSalesInvoice>(this.attach_TrnSalesInvoices1), new Action<TrnSalesInvoice>(this.detach_TrnSalesInvoices1));
			this._TrnSalesInvoices2 = new EntitySet<TrnSalesInvoice>(new Action<TrnSalesInvoice>(this.attach_TrnSalesInvoices2), new Action<TrnSalesInvoice>(this.detach_TrnSalesInvoices2));
			this._TrnSalesInvoices3 = new EntitySet<TrnSalesInvoice>(new Action<TrnSalesInvoice>(this.attach_TrnSalesInvoices3), new Action<TrnSalesInvoice>(this.detach_TrnSalesInvoices3));
			this._TrnSalesInvoices4 = new EntitySet<TrnSalesInvoice>(new Action<TrnSalesInvoice>(this.attach_TrnSalesInvoices4), new Action<TrnSalesInvoice>(this.detach_TrnSalesInvoices4));
			this._TrnSalesInvoices5 = new EntitySet<TrnSalesInvoice>(new Action<TrnSalesInvoice>(this.attach_TrnSalesInvoices5), new Action<TrnSalesInvoice>(this.detach_TrnSalesInvoices5));
			this._TrnSalesOrders = new EntitySet<TrnSalesOrder>(new Action<TrnSalesOrder>(this.attach_TrnSalesOrders), new Action<TrnSalesOrder>(this.detach_TrnSalesOrders));
			this._TrnSalesOrders1 = new EntitySet<TrnSalesOrder>(new Action<TrnSalesOrder>(this.attach_TrnSalesOrders1), new Action<TrnSalesOrder>(this.detach_TrnSalesOrders1));
			this._TrnSalesOrders2 = new EntitySet<TrnSalesOrder>(new Action<TrnSalesOrder>(this.attach_TrnSalesOrders2), new Action<TrnSalesOrder>(this.detach_TrnSalesOrders2));
			this._TrnSalesOrders3 = new EntitySet<TrnSalesOrder>(new Action<TrnSalesOrder>(this.attach_TrnSalesOrders3), new Action<TrnSalesOrder>(this.detach_TrnSalesOrders3));
			this._TrnSalesOrders4 = new EntitySet<TrnSalesOrder>(new Action<TrnSalesOrder>(this.attach_TrnSalesOrders4), new Action<TrnSalesOrder>(this.detach_TrnSalesOrders4));
			this._TrnSalesOrders5 = new EntitySet<TrnSalesOrder>(new Action<TrnSalesOrder>(this.attach_TrnSalesOrders5), new Action<TrnSalesOrder>(this.detach_TrnSalesOrders5));
			this._TrnStockIns = new EntitySet<TrnStockIn>(new Action<TrnStockIn>(this.attach_TrnStockIns), new Action<TrnStockIn>(this.detach_TrnStockIns));
			this._TrnStockIns1 = new EntitySet<TrnStockIn>(new Action<TrnStockIn>(this.attach_TrnStockIns1), new Action<TrnStockIn>(this.detach_TrnStockIns1));
			this._TrnStockIns2 = new EntitySet<TrnStockIn>(new Action<TrnStockIn>(this.attach_TrnStockIns2), new Action<TrnStockIn>(this.detach_TrnStockIns2));
			this._TrnStockIns3 = new EntitySet<TrnStockIn>(new Action<TrnStockIn>(this.attach_TrnStockIns3), new Action<TrnStockIn>(this.detach_TrnStockIns3));
			this._TrnStockIns4 = new EntitySet<TrnStockIn>(new Action<TrnStockIn>(this.attach_TrnStockIns4), new Action<TrnStockIn>(this.detach_TrnStockIns4));
			this._TrnStockOuts = new EntitySet<TrnStockOut>(new Action<TrnStockOut>(this.attach_TrnStockOuts), new Action<TrnStockOut>(this.detach_TrnStockOuts));
			this._TrnStockOuts1 = new EntitySet<TrnStockOut>(new Action<TrnStockOut>(this.attach_TrnStockOuts1), new Action<TrnStockOut>(this.detach_TrnStockOuts1));
			this._TrnStockOuts2 = new EntitySet<TrnStockOut>(new Action<TrnStockOut>(this.attach_TrnStockOuts2), new Action<TrnStockOut>(this.detach_TrnStockOuts2));
			this._TrnStockOuts3 = new EntitySet<TrnStockOut>(new Action<TrnStockOut>(this.attach_TrnStockOuts3), new Action<TrnStockOut>(this.detach_TrnStockOuts3));
			this._TrnStockOuts4 = new EntitySet<TrnStockOut>(new Action<TrnStockOut>(this.attach_TrnStockOuts4), new Action<TrnStockOut>(this.detach_TrnStockOuts4));
			this._TrnStockTransfers = new EntitySet<TrnStockTransfer>(new Action<TrnStockTransfer>(this.attach_TrnStockTransfers), new Action<TrnStockTransfer>(this.detach_TrnStockTransfers));
			this._TrnStockTransfers1 = new EntitySet<TrnStockTransfer>(new Action<TrnStockTransfer>(this.attach_TrnStockTransfers1), new Action<TrnStockTransfer>(this.detach_TrnStockTransfers1));
			this._TrnStockTransfers2 = new EntitySet<TrnStockTransfer>(new Action<TrnStockTransfer>(this.attach_TrnStockTransfers2), new Action<TrnStockTransfer>(this.detach_TrnStockTransfers2));
			this._TrnStockTransfers3 = new EntitySet<TrnStockTransfer>(new Action<TrnStockTransfer>(this.attach_TrnStockTransfers3), new Action<TrnStockTransfer>(this.detach_TrnStockTransfers3));
			this._TrnStockTransfers4 = new EntitySet<TrnStockTransfer>(new Action<TrnStockTransfer>(this.attach_TrnStockTransfers4), new Action<TrnStockTransfer>(this.detach_TrnStockTransfers4));
			this._Membership = default(EntityRef<Membership>);
			this._MstAccount = default(EntityRef<MstAccount>);
			this._MstAccount1 = default(EntityRef<MstAccount>);
			this._MstAccount2 = default(EntityRef<MstAccount>);
			this._MstAccount3 = default(EntityRef<MstAccount>);
			this._MstAccount4 = default(EntityRef<MstAccount>);
			this._MstAccount5 = default(EntityRef<MstAccount>);
			this._MstAccount6 = default(EntityRef<MstAccount>);
			this._MstBranch = default(EntityRef<MstBranch>);
			this._MstPeriod = default(EntityRef<MstPeriod>);
			this._MstUser1 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MembershipUserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid MembershipUserId
		{
			get
			{
				return this._MembershipUserId;
			}
			set
			{
				if ((this._MembershipUserId != value))
				{
					if (this._Membership.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMembershipUserIdChanging(value);
					this.SendPropertyChanging();
					this._MembershipUserId = value;
					this.SendPropertyChanged("MembershipUserId");
					this.OnMembershipUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAccountNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserAccountNumber
		{
			get
			{
				return this._UserAccountNumber;
			}
			set
			{
				if ((this._UserAccountNumber != value))
				{
					this.OnUserAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._UserAccountNumber = value;
					this.SendPropertyChanged("UserAccountNumber");
					this.OnUserAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNumber", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ContactNumber
		{
			get
			{
				return this._ContactNumber;
			}
			set
			{
				if ((this._ContactNumber != value))
				{
					this.OnContactNumberChanging(value);
					this.SendPropertyChanging();
					this._ContactNumber = value;
					this.SendPropertyChanged("ContactNumber");
					this.OnContactNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultBranchId", DbType="BigInt")]
		public System.Nullable<long> DefaultBranchId
		{
			get
			{
				return this._DefaultBranchId;
			}
			set
			{
				if ((this._DefaultBranchId != value))
				{
					if (this._MstBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDefaultBranchIdChanging(value);
					this.SendPropertyChanging();
					this._DefaultBranchId = value;
					this.SendPropertyChanged("DefaultBranchId");
					this.OnDefaultBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultPeriodId", DbType="BigInt")]
		public System.Nullable<long> DefaultPeriodId
		{
			get
			{
				return this._DefaultPeriodId;
			}
			set
			{
				if ((this._DefaultPeriodId != value))
				{
					if (this._MstPeriod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDefaultPeriodIdChanging(value);
					this.SendPropertyChanging();
					this._DefaultPeriodId = value;
					this.SendPropertyChanged("DefaultPeriodId");
					this.OnDefaultPeriodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTemplate", DbType="Bit NOT NULL")]
		public bool IsTemplate
		{
			get
			{
				return this._IsTemplate;
			}
			set
			{
				if ((this._IsTemplate != value))
				{
					this.OnIsTemplateChanging(value);
					this.SendPropertyChanging();
					this._IsTemplate = value;
					this.SendPropertyChanged("IsTemplate");
					this.OnIsTemplateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FSIncomeStatementAccountId", DbType="BigInt")]
		public System.Nullable<long> FSIncomeStatementAccountId
		{
			get
			{
				return this._FSIncomeStatementAccountId;
			}
			set
			{
				if ((this._FSIncomeStatementAccountId != value))
				{
					if (this._MstAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFSIncomeStatementAccountIdChanging(value);
					this.SendPropertyChanging();
					this._FSIncomeStatementAccountId = value;
					this.SendPropertyChanged("FSIncomeStatementAccountId");
					this.OnFSIncomeStatementAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierAccountId", DbType="BigInt")]
		public System.Nullable<long> SupplierAccountId
		{
			get
			{
				return this._SupplierAccountId;
			}
			set
			{
				if ((this._SupplierAccountId != value))
				{
					if (this._MstAccount1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierAccountIdChanging(value);
					this.SendPropertyChanging();
					this._SupplierAccountId = value;
					this.SendPropertyChanged("SupplierAccountId");
					this.OnSupplierAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerAccountId", DbType="BigInt")]
		public System.Nullable<long> CustomerAccountId
		{
			get
			{
				return this._CustomerAccountId;
			}
			set
			{
				if ((this._CustomerAccountId != value))
				{
					if (this._MstAccount2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerAccountIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerAccountId = value;
					this.SendPropertyChanged("CustomerAccountId");
					this.OnCustomerAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemPurchaseAccountId", DbType="BigInt")]
		public System.Nullable<long> ItemPurchaseAccountId
		{
			get
			{
				return this._ItemPurchaseAccountId;
			}
			set
			{
				if ((this._ItemPurchaseAccountId != value))
				{
					if (this._MstAccount3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemPurchaseAccountIdChanging(value);
					this.SendPropertyChanging();
					this._ItemPurchaseAccountId = value;
					this.SendPropertyChanged("ItemPurchaseAccountId");
					this.OnItemPurchaseAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemSalesAccountId", DbType="BigInt")]
		public System.Nullable<long> ItemSalesAccountId
		{
			get
			{
				return this._ItemSalesAccountId;
			}
			set
			{
				if ((this._ItemSalesAccountId != value))
				{
					if (this._MstAccount4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemSalesAccountIdChanging(value);
					this.SendPropertyChanging();
					this._ItemSalesAccountId = value;
					this.SendPropertyChanged("ItemSalesAccountId");
					this.OnItemSalesAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemAssetAccountId", DbType="BigInt")]
		public System.Nullable<long> ItemAssetAccountId
		{
			get
			{
				return this._ItemAssetAccountId;
			}
			set
			{
				if ((this._ItemAssetAccountId != value))
				{
					if (this._MstAccount5.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemAssetAccountIdChanging(value);
					this.SendPropertyChanging();
					this._ItemAssetAccountId = value;
					this.SendPropertyChanged("ItemAssetAccountId");
					this.OnItemAssetAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAutoInventory", DbType="Bit NOT NULL")]
		public bool IsAutoInventory
		{
			get
			{
				return this._IsAutoInventory;
			}
			set
			{
				if ((this._IsAutoInventory != value))
				{
					this.OnIsAutoInventoryChanging(value);
					this.SendPropertyChanging();
					this._IsAutoInventory = value;
					this.SendPropertyChanged("IsAutoInventory");
					this.OnIsAutoInventoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateUserId", DbType="BigInt")]
		public System.Nullable<long> TemplateUserId
		{
			get
			{
				return this._TemplateUserId;
			}
			set
			{
				if ((this._TemplateUserId != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTemplateUserIdChanging(value);
					this.SendPropertyChanging();
					this._TemplateUserId = value;
					this.SendPropertyChanged("TemplateUserId");
					this.OnTemplateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemCostAccountId", DbType="BigInt")]
		public System.Nullable<long> ItemCostAccountId
		{
			get
			{
				return this._ItemCostAccountId;
			}
			set
			{
				if ((this._ItemCostAccountId != value))
				{
					if (this._MstAccount6.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemCostAccountIdChanging(value);
					this.SendPropertyChanging();
					this._ItemCostAccountId = value;
					this.SendPropertyChanged("ItemCostAccountId");
					this.OnItemCostAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryValuationMethod", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string InventoryValuationMethod
		{
			get
			{
				return this._InventoryValuationMethod;
			}
			set
			{
				if ((this._InventoryValuationMethod != value))
				{
					this.OnInventoryValuationMethodChanging(value);
					this.SendPropertyChanging();
					this._InventoryValuationMethod = value;
					this.SendPropertyChanged("InventoryValuationMethod");
					this.OnInventoryValuationMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstAccount", Storage="_MstAccounts", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<MstAccount> MstAccounts
		{
			get
			{
				return this._MstAccounts;
			}
			set
			{
				this._MstAccounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstAccount1", Storage="_MstAccounts1", ThisKey="Id", OtherKey="CreatedById")]
		public EntitySet<MstAccount> MstAccounts1
		{
			get
			{
				return this._MstAccounts1;
			}
			set
			{
				this._MstAccounts1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstAccount2", Storage="_MstAccounts2", ThisKey="Id", OtherKey="UpdatedById")]
		public EntitySet<MstAccount> MstAccounts2
		{
			get
			{
				return this._MstAccounts2;
			}
			set
			{
				this._MstAccounts2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstAccountCashFlow", Storage="_MstAccountCashFlows", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<MstAccountCashFlow> MstAccountCashFlows
		{
			get
			{
				return this._MstAccountCashFlows;
			}
			set
			{
				this._MstAccountCashFlows.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstAccountCashFlow1", Storage="_MstAccountCashFlows1", ThisKey="Id", OtherKey="CreatedById")]
		public EntitySet<MstAccountCashFlow> MstAccountCashFlows1
		{
			get
			{
				return this._MstAccountCashFlows1;
			}
			set
			{
				this._MstAccountCashFlows1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstAccountCashFlow2", Storage="_MstAccountCashFlows2", ThisKey="Id", OtherKey="UpdatedById")]
		public EntitySet<MstAccountCashFlow> MstAccountCashFlows2
		{
			get
			{
				return this._MstAccountCashFlows2;
			}
			set
			{
				this._MstAccountCashFlows2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstAccountCategory", Storage="_MstAccountCategories", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<MstAccountCategory> MstAccountCategories
		{
			get
			{
				return this._MstAccountCategories;
			}
			set
			{
				this._MstAccountCategories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstAccountCategory1", Storage="_MstAccountCategories1", ThisKey="Id", OtherKey="CreatedById")]
		public EntitySet<MstAccountCategory> MstAccountCategories1
		{
			get
			{
				return this._MstAccountCategories1;
			}
			set
			{
				this._MstAccountCategories1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstAccountCategory2", Storage="_MstAccountCategories2", ThisKey="Id", OtherKey="UpdatedById")]
		public EntitySet<MstAccountCategory> MstAccountCategories2
		{
			get
			{
				return this._MstAccountCategories2;
			}
			set
			{
				this._MstAccountCategories2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstAccountType", Storage="_MstAccountTypes", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<MstAccountType> MstAccountTypes
		{
			get
			{
				return this._MstAccountTypes;
			}
			set
			{
				this._MstAccountTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstAccountType1", Storage="_MstAccountTypes1", ThisKey="Id", OtherKey="CreatedById")]
		public EntitySet<MstAccountType> MstAccountTypes1
		{
			get
			{
				return this._MstAccountTypes1;
			}
			set
			{
				this._MstAccountTypes1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstAccountType2", Storage="_MstAccountTypes2", ThisKey="Id", OtherKey="UpdatedById")]
		public EntitySet<MstAccountType> MstAccountTypes2
		{
			get
			{
				return this._MstAccountTypes2;
			}
			set
			{
				this._MstAccountTypes2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstArticle", Storage="_MstArticles", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<MstArticle> MstArticles
		{
			get
			{
				return this._MstArticles;
			}
			set
			{
				this._MstArticles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstArticle1", Storage="_MstArticles1", ThisKey="Id", OtherKey="CreatedById")]
		public EntitySet<MstArticle> MstArticles1
		{
			get
			{
				return this._MstArticles1;
			}
			set
			{
				this._MstArticles1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstArticle2", Storage="_MstArticles2", ThisKey="Id", OtherKey="UpdatedById")]
		public EntitySet<MstArticle> MstArticles2
		{
			get
			{
				return this._MstArticles2;
			}
			set
			{
				this._MstArticles2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstArticleType", Storage="_MstArticleTypes", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<MstArticleType> MstArticleTypes
		{
			get
			{
				return this._MstArticleTypes;
			}
			set
			{
				this._MstArticleTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstArticleType1", Storage="_MstArticleTypes1", ThisKey="Id", OtherKey="CreatedById")]
		public EntitySet<MstArticleType> MstArticleTypes1
		{
			get
			{
				return this._MstArticleTypes1;
			}
			set
			{
				this._MstArticleTypes1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstArticleType2", Storage="_MstArticleTypes2", ThisKey="Id", OtherKey="UpdatedById")]
		public EntitySet<MstArticleType> MstArticleTypes2
		{
			get
			{
				return this._MstArticleTypes2;
			}
			set
			{
				this._MstArticleTypes2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstBranch", Storage="_MstBranches", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<MstBranch> MstBranches
		{
			get
			{
				return this._MstBranches;
			}
			set
			{
				this._MstBranches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstBranch1", Storage="_MstBranches1", ThisKey="Id", OtherKey="CreatedById")]
		public EntitySet<MstBranch> MstBranches1
		{
			get
			{
				return this._MstBranches1;
			}
			set
			{
				this._MstBranches1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstBranch2", Storage="_MstBranches2", ThisKey="Id", OtherKey="UpdatedById")]
		public EntitySet<MstBranch> MstBranches2
		{
			get
			{
				return this._MstBranches2;
			}
			set
			{
				this._MstBranches2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstCompany", Storage="_MstCompanies", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<MstCompany> MstCompanies
		{
			get
			{
				return this._MstCompanies;
			}
			set
			{
				this._MstCompanies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstCompany1", Storage="_MstCompanies1", ThisKey="Id", OtherKey="CreatedById")]
		public EntitySet<MstCompany> MstCompanies1
		{
			get
			{
				return this._MstCompanies1;
			}
			set
			{
				this._MstCompanies1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstCompany2", Storage="_MstCompanies2", ThisKey="Id", OtherKey="UpdatedById")]
		public EntitySet<MstCompany> MstCompanies2
		{
			get
			{
				return this._MstCompanies2;
			}
			set
			{
				this._MstCompanies2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstDiscount", Storage="_MstDiscounts", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<MstDiscount> MstDiscounts
		{
			get
			{
				return this._MstDiscounts;
			}
			set
			{
				this._MstDiscounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstDiscount1", Storage="_MstDiscounts1", ThisKey="Id", OtherKey="CreatedById")]
		public EntitySet<MstDiscount> MstDiscounts1
		{
			get
			{
				return this._MstDiscounts1;
			}
			set
			{
				this._MstDiscounts1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstDiscount2", Storage="_MstDiscounts2", ThisKey="Id", OtherKey="UpdatedById")]
		public EntitySet<MstDiscount> MstDiscounts2
		{
			get
			{
				return this._MstDiscounts2;
			}
			set
			{
				this._MstDiscounts2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstPayType", Storage="_MstPayTypes", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<MstPayType> MstPayTypes
		{
			get
			{
				return this._MstPayTypes;
			}
			set
			{
				this._MstPayTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstPayType1", Storage="_MstPayTypes1", ThisKey="Id", OtherKey="CreatedById")]
		public EntitySet<MstPayType> MstPayTypes1
		{
			get
			{
				return this._MstPayTypes1;
			}
			set
			{
				this._MstPayTypes1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstPayType2", Storage="_MstPayTypes2", ThisKey="Id", OtherKey="UpdatedById")]
		public EntitySet<MstPayType> MstPayTypes2
		{
			get
			{
				return this._MstPayTypes2;
			}
			set
			{
				this._MstPayTypes2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstPeriod", Storage="_MstPeriods", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<MstPeriod> MstPeriods
		{
			get
			{
				return this._MstPeriods;
			}
			set
			{
				this._MstPeriods.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstPeriod1", Storage="_MstPeriods1", ThisKey="Id", OtherKey="CreatedById")]
		public EntitySet<MstPeriod> MstPeriods1
		{
			get
			{
				return this._MstPeriods1;
			}
			set
			{
				this._MstPeriods1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstPeriod2", Storage="_MstPeriods2", ThisKey="Id", OtherKey="UpdatedById")]
		public EntitySet<MstPeriod> MstPeriods2
		{
			get
			{
				return this._MstPeriods2;
			}
			set
			{
				this._MstPeriods2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstTax", Storage="_MstTaxes", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<MstTax> MstTaxes
		{
			get
			{
				return this._MstTaxes;
			}
			set
			{
				this._MstTaxes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstTax1", Storage="_MstTaxes1", ThisKey="Id", OtherKey="CreatedById")]
		public EntitySet<MstTax> MstTaxes1
		{
			get
			{
				return this._MstTaxes1;
			}
			set
			{
				this._MstTaxes1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstTax2", Storage="_MstTaxes2", ThisKey="Id", OtherKey="UpdatedById")]
		public EntitySet<MstTax> MstTaxes2
		{
			get
			{
				return this._MstTaxes2;
			}
			set
			{
				this._MstTaxes2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstTaxType", Storage="_MstTaxTypes", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<MstTaxType> MstTaxTypes
		{
			get
			{
				return this._MstTaxTypes;
			}
			set
			{
				this._MstTaxTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstTaxType1", Storage="_MstTaxTypes1", ThisKey="Id", OtherKey="CreatedById")]
		public EntitySet<MstTaxType> MstTaxTypes1
		{
			get
			{
				return this._MstTaxTypes1;
			}
			set
			{
				this._MstTaxTypes1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstTaxType2", Storage="_MstTaxTypes2", ThisKey="Id", OtherKey="UpdatedById")]
		public EntitySet<MstTaxType> MstTaxTypes2
		{
			get
			{
				return this._MstTaxTypes2;
			}
			set
			{
				this._MstTaxTypes2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstTerm", Storage="_MstTerms", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<MstTerm> MstTerms
		{
			get
			{
				return this._MstTerms;
			}
			set
			{
				this._MstTerms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstTerm1", Storage="_MstTerms1", ThisKey="Id", OtherKey="UpdatedById")]
		public EntitySet<MstTerm> MstTerms1
		{
			get
			{
				return this._MstTerms1;
			}
			set
			{
				this._MstTerms1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstTerm2", Storage="_MstTerms2", ThisKey="Id", OtherKey="CreatedById")]
		public EntitySet<MstTerm> MstTerms2
		{
			get
			{
				return this._MstTerms2;
			}
			set
			{
				this._MstTerms2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstUnit", Storage="_MstUnits", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<MstUnit> MstUnits
		{
			get
			{
				return this._MstUnits;
			}
			set
			{
				this._MstUnits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstUnit1", Storage="_MstUnits1", ThisKey="Id", OtherKey="CreatedById")]
		public EntitySet<MstUnit> MstUnits1
		{
			get
			{
				return this._MstUnits1;
			}
			set
			{
				this._MstUnits1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstUnit2", Storage="_MstUnits2", ThisKey="Id", OtherKey="UpdatedById")]
		public EntitySet<MstUnit> MstUnits2
		{
			get
			{
				return this._MstUnits2;
			}
			set
			{
				this._MstUnits2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstUser", Storage="_MstUsers", ThisKey="Id", OtherKey="TemplateUserId")]
		public EntitySet<MstUser> MstUsers
		{
			get
			{
				return this._MstUsers;
			}
			set
			{
				this._MstUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstUserSerialNumber", Storage="_MstUserSerialNumbers", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<MstUserSerialNumber> MstUserSerialNumbers
		{
			get
			{
				return this._MstUserSerialNumbers;
			}
			set
			{
				this._MstUserSerialNumbers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstUserStaff", Storage="_MstUserStaffs", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<MstUserStaff> MstUserStaffs
		{
			get
			{
				return this._MstUserStaffs;
			}
			set
			{
				this._MstUserStaffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstUserStaff1", Storage="_MstUserStaffs1", ThisKey="Id", OtherKey="UserStaffId")]
		public EntitySet<MstUserStaff> MstUserStaffs1
		{
			get
			{
				return this._MstUserStaffs1;
			}
			set
			{
				this._MstUserStaffs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnBank", Storage="_TrnBanks", ThisKey="Id", OtherKey="CreatedById")]
		public EntitySet<TrnBank> TrnBanks
		{
			get
			{
				return this._TrnBanks;
			}
			set
			{
				this._TrnBanks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnBank1", Storage="_TrnBanks1", ThisKey="Id", OtherKey="UpdatedById")]
		public EntitySet<TrnBank> TrnBanks1
		{
			get
			{
				return this._TrnBanks1;
			}
			set
			{
				this._TrnBanks1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnCollection", Storage="_TrnCollections", ThisKey="Id", OtherKey="PreparedById")]
		public EntitySet<TrnCollection> TrnCollections
		{
			get
			{
				return this._TrnCollections;
			}
			set
			{
				this._TrnCollections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnCollection1", Storage="_TrnCollections1", ThisKey="Id", OtherKey="CheckedById")]
		public EntitySet<TrnCollection> TrnCollections1
		{
			get
			{
				return this._TrnCollections1;
			}
			set
			{
				this._TrnCollections1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnCollection2", Storage="_TrnCollections2", ThisKey="Id", OtherKey="ApprovedById")]
		public EntitySet<TrnCollection> TrnCollections2
		{
			get
			{
				return this._TrnCollections2;
			}
			set
			{
				this._TrnCollections2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnCollection3", Storage="_TrnCollections3", ThisKey="Id", OtherKey="CreatedById")]
		public EntitySet<TrnCollection> TrnCollections3
		{
			get
			{
				return this._TrnCollections3;
			}
			set
			{
				this._TrnCollections3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnCollection4", Storage="_TrnCollections4", ThisKey="Id", OtherKey="UpdatedById")]
		public EntitySet<TrnCollection> TrnCollections4
		{
			get
			{
				return this._TrnCollections4;
			}
			set
			{
				this._TrnCollections4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnDisbursement", Storage="_TrnDisbursements", ThisKey="Id", OtherKey="PreparedById")]
		public EntitySet<TrnDisbursement> TrnDisbursements
		{
			get
			{
				return this._TrnDisbursements;
			}
			set
			{
				this._TrnDisbursements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnDisbursement1", Storage="_TrnDisbursements1", ThisKey="Id", OtherKey="CheckedById")]
		public EntitySet<TrnDisbursement> TrnDisbursements1
		{
			get
			{
				return this._TrnDisbursements1;
			}
			set
			{
				this._TrnDisbursements1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnDisbursement2", Storage="_TrnDisbursements2", ThisKey="Id", OtherKey="ApprovedById")]
		public EntitySet<TrnDisbursement> TrnDisbursements2
		{
			get
			{
				return this._TrnDisbursements2;
			}
			set
			{
				this._TrnDisbursements2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnDisbursement3", Storage="_TrnDisbursements3", ThisKey="Id", OtherKey="CreatedById")]
		public EntitySet<TrnDisbursement> TrnDisbursements3
		{
			get
			{
				return this._TrnDisbursements3;
			}
			set
			{
				this._TrnDisbursements3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnDisbursement4", Storage="_TrnDisbursements4", ThisKey="Id", OtherKey="UpdatedById")]
		public EntitySet<TrnDisbursement> TrnDisbursements4
		{
			get
			{
				return this._TrnDisbursements4;
			}
			set
			{
				this._TrnDisbursements4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnJournalVoucher", Storage="_TrnJournalVouchers", ThisKey="Id", OtherKey="PreparedById")]
		public EntitySet<TrnJournalVoucher> TrnJournalVouchers
		{
			get
			{
				return this._TrnJournalVouchers;
			}
			set
			{
				this._TrnJournalVouchers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnJournalVoucher1", Storage="_TrnJournalVouchers1", ThisKey="Id", OtherKey="CheckedById")]
		public EntitySet<TrnJournalVoucher> TrnJournalVouchers1
		{
			get
			{
				return this._TrnJournalVouchers1;
			}
			set
			{
				this._TrnJournalVouchers1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnJournalVoucher2", Storage="_TrnJournalVouchers2", ThisKey="Id", OtherKey="ApprovedById")]
		public EntitySet<TrnJournalVoucher> TrnJournalVouchers2
		{
			get
			{
				return this._TrnJournalVouchers2;
			}
			set
			{
				this._TrnJournalVouchers2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnJournalVoucher3", Storage="_TrnJournalVouchers3", ThisKey="Id", OtherKey="CreatedById")]
		public EntitySet<TrnJournalVoucher> TrnJournalVouchers3
		{
			get
			{
				return this._TrnJournalVouchers3;
			}
			set
			{
				this._TrnJournalVouchers3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnJournalVoucher4", Storage="_TrnJournalVouchers4", ThisKey="Id", OtherKey="UpdatedById")]
		public EntitySet<TrnJournalVoucher> TrnJournalVouchers4
		{
			get
			{
				return this._TrnJournalVouchers4;
			}
			set
			{
				this._TrnJournalVouchers4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPurchaseInvoice", Storage="_TrnPurchaseInvoices", ThisKey="Id", OtherKey="PreparedById")]
		public EntitySet<TrnPurchaseInvoice> TrnPurchaseInvoices
		{
			get
			{
				return this._TrnPurchaseInvoices;
			}
			set
			{
				this._TrnPurchaseInvoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPurchaseInvoice1", Storage="_TrnPurchaseInvoices1", ThisKey="Id", OtherKey="CheckedById")]
		public EntitySet<TrnPurchaseInvoice> TrnPurchaseInvoices1
		{
			get
			{
				return this._TrnPurchaseInvoices1;
			}
			set
			{
				this._TrnPurchaseInvoices1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPurchaseInvoice2", Storage="_TrnPurchaseInvoices2", ThisKey="Id", OtherKey="ApprovedById")]
		public EntitySet<TrnPurchaseInvoice> TrnPurchaseInvoices2
		{
			get
			{
				return this._TrnPurchaseInvoices2;
			}
			set
			{
				this._TrnPurchaseInvoices2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPurchaseInvoice3", Storage="_TrnPurchaseInvoices3", ThisKey="Id", OtherKey="CreatedById")]
		public EntitySet<TrnPurchaseInvoice> TrnPurchaseInvoices3
		{
			get
			{
				return this._TrnPurchaseInvoices3;
			}
			set
			{
				this._TrnPurchaseInvoices3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPurchaseInvoice4", Storage="_TrnPurchaseInvoices4", ThisKey="Id", OtherKey="UpdatedById")]
		public EntitySet<TrnPurchaseInvoice> TrnPurchaseInvoices4
		{
			get
			{
				return this._TrnPurchaseInvoices4;
			}
			set
			{
				this._TrnPurchaseInvoices4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPurchaseOrder", Storage="_TrnPurchaseOrders", ThisKey="Id", OtherKey="RequestedById")]
		public EntitySet<TrnPurchaseOrder> TrnPurchaseOrders
		{
			get
			{
				return this._TrnPurchaseOrders;
			}
			set
			{
				this._TrnPurchaseOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPurchaseOrder1", Storage="_TrnPurchaseOrders1", ThisKey="Id", OtherKey="PreparedById")]
		public EntitySet<TrnPurchaseOrder> TrnPurchaseOrders1
		{
			get
			{
				return this._TrnPurchaseOrders1;
			}
			set
			{
				this._TrnPurchaseOrders1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPurchaseOrder2", Storage="_TrnPurchaseOrders2", ThisKey="Id", OtherKey="CheckedById")]
		public EntitySet<TrnPurchaseOrder> TrnPurchaseOrders2
		{
			get
			{
				return this._TrnPurchaseOrders2;
			}
			set
			{
				this._TrnPurchaseOrders2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPurchaseOrder3", Storage="_TrnPurchaseOrders3", ThisKey="Id", OtherKey="ApprovedById")]
		public EntitySet<TrnPurchaseOrder> TrnPurchaseOrders3
		{
			get
			{
				return this._TrnPurchaseOrders3;
			}
			set
			{
				this._TrnPurchaseOrders3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPurchaseOrder4", Storage="_TrnPurchaseOrders4", ThisKey="Id", OtherKey="CreatedById")]
		public EntitySet<TrnPurchaseOrder> TrnPurchaseOrders4
		{
			get
			{
				return this._TrnPurchaseOrders4;
			}
			set
			{
				this._TrnPurchaseOrders4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPurchaseOrder5", Storage="_TrnPurchaseOrders5", ThisKey="Id", OtherKey="UpdatedById")]
		public EntitySet<TrnPurchaseOrder> TrnPurchaseOrders5
		{
			get
			{
				return this._TrnPurchaseOrders5;
			}
			set
			{
				this._TrnPurchaseOrders5.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesInvoice", Storage="_TrnSalesInvoices", ThisKey="Id", OtherKey="SoldById")]
		public EntitySet<TrnSalesInvoice> TrnSalesInvoices
		{
			get
			{
				return this._TrnSalesInvoices;
			}
			set
			{
				this._TrnSalesInvoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesInvoice1", Storage="_TrnSalesInvoices1", ThisKey="Id", OtherKey="PreparedById")]
		public EntitySet<TrnSalesInvoice> TrnSalesInvoices1
		{
			get
			{
				return this._TrnSalesInvoices1;
			}
			set
			{
				this._TrnSalesInvoices1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesInvoice2", Storage="_TrnSalesInvoices2", ThisKey="Id", OtherKey="CheckedById")]
		public EntitySet<TrnSalesInvoice> TrnSalesInvoices2
		{
			get
			{
				return this._TrnSalesInvoices2;
			}
			set
			{
				this._TrnSalesInvoices2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesInvoice3", Storage="_TrnSalesInvoices3", ThisKey="Id", OtherKey="ApprovedById")]
		public EntitySet<TrnSalesInvoice> TrnSalesInvoices3
		{
			get
			{
				return this._TrnSalesInvoices3;
			}
			set
			{
				this._TrnSalesInvoices3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesInvoice4", Storage="_TrnSalesInvoices4", ThisKey="Id", OtherKey="CreatedById")]
		public EntitySet<TrnSalesInvoice> TrnSalesInvoices4
		{
			get
			{
				return this._TrnSalesInvoices4;
			}
			set
			{
				this._TrnSalesInvoices4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesInvoice5", Storage="_TrnSalesInvoices5", ThisKey="Id", OtherKey="UpdatedById")]
		public EntitySet<TrnSalesInvoice> TrnSalesInvoices5
		{
			get
			{
				return this._TrnSalesInvoices5;
			}
			set
			{
				this._TrnSalesInvoices5.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesOrder", Storage="_TrnSalesOrders", ThisKey="Id", OtherKey="OrderedById")]
		public EntitySet<TrnSalesOrder> TrnSalesOrders
		{
			get
			{
				return this._TrnSalesOrders;
			}
			set
			{
				this._TrnSalesOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesOrder1", Storage="_TrnSalesOrders1", ThisKey="Id", OtherKey="PreparedById")]
		public EntitySet<TrnSalesOrder> TrnSalesOrders1
		{
			get
			{
				return this._TrnSalesOrders1;
			}
			set
			{
				this._TrnSalesOrders1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesOrder2", Storage="_TrnSalesOrders2", ThisKey="Id", OtherKey="CheckedById")]
		public EntitySet<TrnSalesOrder> TrnSalesOrders2
		{
			get
			{
				return this._TrnSalesOrders2;
			}
			set
			{
				this._TrnSalesOrders2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesOrder3", Storage="_TrnSalesOrders3", ThisKey="Id", OtherKey="ApprovedById")]
		public EntitySet<TrnSalesOrder> TrnSalesOrders3
		{
			get
			{
				return this._TrnSalesOrders3;
			}
			set
			{
				this._TrnSalesOrders3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesOrder4", Storage="_TrnSalesOrders4", ThisKey="Id", OtherKey="CreatedById")]
		public EntitySet<TrnSalesOrder> TrnSalesOrders4
		{
			get
			{
				return this._TrnSalesOrders4;
			}
			set
			{
				this._TrnSalesOrders4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesOrder5", Storage="_TrnSalesOrders5", ThisKey="Id", OtherKey="UpdatedById")]
		public EntitySet<TrnSalesOrder> TrnSalesOrders5
		{
			get
			{
				return this._TrnSalesOrders5;
			}
			set
			{
				this._TrnSalesOrders5.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockIn", Storage="_TrnStockIns", ThisKey="Id", OtherKey="PreparedById")]
		public EntitySet<TrnStockIn> TrnStockIns
		{
			get
			{
				return this._TrnStockIns;
			}
			set
			{
				this._TrnStockIns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockIn1", Storage="_TrnStockIns1", ThisKey="Id", OtherKey="CheckedById")]
		public EntitySet<TrnStockIn> TrnStockIns1
		{
			get
			{
				return this._TrnStockIns1;
			}
			set
			{
				this._TrnStockIns1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockIn2", Storage="_TrnStockIns2", ThisKey="Id", OtherKey="ApprovedById")]
		public EntitySet<TrnStockIn> TrnStockIns2
		{
			get
			{
				return this._TrnStockIns2;
			}
			set
			{
				this._TrnStockIns2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockIn3", Storage="_TrnStockIns3", ThisKey="Id", OtherKey="CreatedById")]
		public EntitySet<TrnStockIn> TrnStockIns3
		{
			get
			{
				return this._TrnStockIns3;
			}
			set
			{
				this._TrnStockIns3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockIn4", Storage="_TrnStockIns4", ThisKey="Id", OtherKey="UpdatedById")]
		public EntitySet<TrnStockIn> TrnStockIns4
		{
			get
			{
				return this._TrnStockIns4;
			}
			set
			{
				this._TrnStockIns4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockOut", Storage="_TrnStockOuts", ThisKey="Id", OtherKey="PreparedById")]
		public EntitySet<TrnStockOut> TrnStockOuts
		{
			get
			{
				return this._TrnStockOuts;
			}
			set
			{
				this._TrnStockOuts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockOut1", Storage="_TrnStockOuts1", ThisKey="Id", OtherKey="CheckedById")]
		public EntitySet<TrnStockOut> TrnStockOuts1
		{
			get
			{
				return this._TrnStockOuts1;
			}
			set
			{
				this._TrnStockOuts1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockOut2", Storage="_TrnStockOuts2", ThisKey="Id", OtherKey="ApprovedById")]
		public EntitySet<TrnStockOut> TrnStockOuts2
		{
			get
			{
				return this._TrnStockOuts2;
			}
			set
			{
				this._TrnStockOuts2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockOut3", Storage="_TrnStockOuts3", ThisKey="Id", OtherKey="CreatedById")]
		public EntitySet<TrnStockOut> TrnStockOuts3
		{
			get
			{
				return this._TrnStockOuts3;
			}
			set
			{
				this._TrnStockOuts3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockOut4", Storage="_TrnStockOuts4", ThisKey="Id", OtherKey="UpdatedById")]
		public EntitySet<TrnStockOut> TrnStockOuts4
		{
			get
			{
				return this._TrnStockOuts4;
			}
			set
			{
				this._TrnStockOuts4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockTransfer", Storage="_TrnStockTransfers", ThisKey="Id", OtherKey="PreparedById")]
		public EntitySet<TrnStockTransfer> TrnStockTransfers
		{
			get
			{
				return this._TrnStockTransfers;
			}
			set
			{
				this._TrnStockTransfers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockTransfer1", Storage="_TrnStockTransfers1", ThisKey="Id", OtherKey="CheckedById")]
		public EntitySet<TrnStockTransfer> TrnStockTransfers1
		{
			get
			{
				return this._TrnStockTransfers1;
			}
			set
			{
				this._TrnStockTransfers1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockTransfer2", Storage="_TrnStockTransfers2", ThisKey="Id", OtherKey="ApprovedById")]
		public EntitySet<TrnStockTransfer> TrnStockTransfers2
		{
			get
			{
				return this._TrnStockTransfers2;
			}
			set
			{
				this._TrnStockTransfers2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockTransfer3", Storage="_TrnStockTransfers3", ThisKey="Id", OtherKey="CreatedById")]
		public EntitySet<TrnStockTransfer> TrnStockTransfers3
		{
			get
			{
				return this._TrnStockTransfers3;
			}
			set
			{
				this._TrnStockTransfers3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockTransfer4", Storage="_TrnStockTransfers4", ThisKey="Id", OtherKey="UpdatedById")]
		public EntitySet<TrnStockTransfer> TrnStockTransfers4
		{
			get
			{
				return this._TrnStockTransfers4;
			}
			set
			{
				this._TrnStockTransfers4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Membership_MstUser", Storage="_Membership", ThisKey="MembershipUserId", OtherKey="UserId", IsForeignKey=true)]
		public Membership Membership
		{
			get
			{
				return this._Membership.Entity;
			}
			set
			{
				Membership previousValue = this._Membership.Entity;
				if (((previousValue != value) 
							|| (this._Membership.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Membership.Entity = null;
						previousValue.MstUsers.Remove(this);
					}
					this._Membership.Entity = value;
					if ((value != null))
					{
						value.MstUsers.Add(this);
						this._MembershipUserId = value.UserId;
					}
					else
					{
						this._MembershipUserId = default(System.Guid);
					}
					this.SendPropertyChanged("Membership");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstUser", Storage="_MstAccount", ThisKey="FSIncomeStatementAccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount
		{
			get
			{
				return this._MstAccount.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount.Entity = null;
						previousValue.MstUsers.Remove(this);
					}
					this._MstAccount.Entity = value;
					if ((value != null))
					{
						value.MstUsers.Add(this);
						this._FSIncomeStatementAccountId = value.Id;
					}
					else
					{
						this._FSIncomeStatementAccountId = default(Nullable<long>);
					}
					this.SendPropertyChanged("MstAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstUser1", Storage="_MstAccount1", ThisKey="SupplierAccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount1
		{
			get
			{
				return this._MstAccount1.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount1.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount1.Entity = null;
						previousValue.MstUsers1.Remove(this);
					}
					this._MstAccount1.Entity = value;
					if ((value != null))
					{
						value.MstUsers1.Add(this);
						this._SupplierAccountId = value.Id;
					}
					else
					{
						this._SupplierAccountId = default(Nullable<long>);
					}
					this.SendPropertyChanged("MstAccount1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstUser2", Storage="_MstAccount2", ThisKey="CustomerAccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount2
		{
			get
			{
				return this._MstAccount2.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount2.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount2.Entity = null;
						previousValue.MstUsers2.Remove(this);
					}
					this._MstAccount2.Entity = value;
					if ((value != null))
					{
						value.MstUsers2.Add(this);
						this._CustomerAccountId = value.Id;
					}
					else
					{
						this._CustomerAccountId = default(Nullable<long>);
					}
					this.SendPropertyChanged("MstAccount2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstUser3", Storage="_MstAccount3", ThisKey="ItemPurchaseAccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount3
		{
			get
			{
				return this._MstAccount3.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount3.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount3.Entity = null;
						previousValue.MstUsers3.Remove(this);
					}
					this._MstAccount3.Entity = value;
					if ((value != null))
					{
						value.MstUsers3.Add(this);
						this._ItemPurchaseAccountId = value.Id;
					}
					else
					{
						this._ItemPurchaseAccountId = default(Nullable<long>);
					}
					this.SendPropertyChanged("MstAccount3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstUser4", Storage="_MstAccount4", ThisKey="ItemSalesAccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount4
		{
			get
			{
				return this._MstAccount4.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount4.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount4.Entity = null;
						previousValue.MstUsers4.Remove(this);
					}
					this._MstAccount4.Entity = value;
					if ((value != null))
					{
						value.MstUsers4.Add(this);
						this._ItemSalesAccountId = value.Id;
					}
					else
					{
						this._ItemSalesAccountId = default(Nullable<long>);
					}
					this.SendPropertyChanged("MstAccount4");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstUser5", Storage="_MstAccount5", ThisKey="ItemAssetAccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount5
		{
			get
			{
				return this._MstAccount5.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount5.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount5.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount5.Entity = null;
						previousValue.MstUsers5.Remove(this);
					}
					this._MstAccount5.Entity = value;
					if ((value != null))
					{
						value.MstUsers5.Add(this);
						this._ItemAssetAccountId = value.Id;
					}
					else
					{
						this._ItemAssetAccountId = default(Nullable<long>);
					}
					this.SendPropertyChanged("MstAccount5");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstUser6", Storage="_MstAccount6", ThisKey="ItemCostAccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount6
		{
			get
			{
				return this._MstAccount6.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount6.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount6.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount6.Entity = null;
						previousValue.MstUsers6.Remove(this);
					}
					this._MstAccount6.Entity = value;
					if ((value != null))
					{
						value.MstUsers6.Add(this);
						this._ItemCostAccountId = value.Id;
					}
					else
					{
						this._ItemCostAccountId = default(Nullable<long>);
					}
					this.SendPropertyChanged("MstAccount6");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_MstUser", Storage="_MstBranch", ThisKey="DefaultBranchId", OtherKey="Id", IsForeignKey=true)]
		public MstBranch MstBranch
		{
			get
			{
				return this._MstBranch.Entity;
			}
			set
			{
				MstBranch previousValue = this._MstBranch.Entity;
				if (((previousValue != value) 
							|| (this._MstBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBranch.Entity = null;
						previousValue.MstUsers.Remove(this);
					}
					this._MstBranch.Entity = value;
					if ((value != null))
					{
						value.MstUsers.Add(this);
						this._DefaultBranchId = value.Id;
					}
					else
					{
						this._DefaultBranchId = default(Nullable<long>);
					}
					this.SendPropertyChanged("MstBranch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_MstUser", Storage="_MstPeriod", ThisKey="DefaultPeriodId", OtherKey="Id", IsForeignKey=true)]
		public MstPeriod MstPeriod
		{
			get
			{
				return this._MstPeriod.Entity;
			}
			set
			{
				MstPeriod previousValue = this._MstPeriod.Entity;
				if (((previousValue != value) 
							|| (this._MstPeriod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPeriod.Entity = null;
						previousValue.MstUsers.Remove(this);
					}
					this._MstPeriod.Entity = value;
					if ((value != null))
					{
						value.MstUsers.Add(this);
						this._DefaultPeriodId = value.Id;
					}
					else
					{
						this._DefaultPeriodId = default(Nullable<long>);
					}
					this.SendPropertyChanged("MstPeriod");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstUser", Storage="_MstUser1", ThisKey="TemplateUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.MstUsers.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.MstUsers.Add(this);
						this._TemplateUserId = value.Id;
					}
					else
					{
						this._TemplateUserId = default(Nullable<long>);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstAccounts(MstAccount entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstAccounts(MstAccount entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_MstAccounts1(MstAccount entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_MstAccounts1(MstAccount entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_MstAccounts2(MstAccount entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_MstAccounts2(MstAccount entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_MstAccountCashFlows(MstAccountCashFlow entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstAccountCashFlows(MstAccountCashFlow entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_MstAccountCashFlows1(MstAccountCashFlow entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_MstAccountCashFlows1(MstAccountCashFlow entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_MstAccountCashFlows2(MstAccountCashFlow entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_MstAccountCashFlows2(MstAccountCashFlow entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_MstAccountCategories(MstAccountCategory entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstAccountCategories(MstAccountCategory entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_MstAccountCategories1(MstAccountCategory entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_MstAccountCategories1(MstAccountCategory entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_MstAccountCategories2(MstAccountCategory entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_MstAccountCategories2(MstAccountCategory entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_MstAccountTypes(MstAccountType entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstAccountTypes(MstAccountType entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_MstAccountTypes1(MstAccountType entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_MstAccountTypes1(MstAccountType entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_MstAccountTypes2(MstAccountType entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_MstAccountTypes2(MstAccountType entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_MstArticles(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstArticles(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_MstArticles1(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_MstArticles1(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_MstArticles2(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_MstArticles2(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_MstArticleTypes(MstArticleType entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstArticleTypes(MstArticleType entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_MstArticleTypes1(MstArticleType entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_MstArticleTypes1(MstArticleType entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_MstArticleTypes2(MstArticleType entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_MstArticleTypes2(MstArticleType entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_MstBranches(MstBranch entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstBranches(MstBranch entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_MstBranches1(MstBranch entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_MstBranches1(MstBranch entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_MstBranches2(MstBranch entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_MstBranches2(MstBranch entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_MstCompanies(MstCompany entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstCompanies(MstCompany entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_MstCompanies1(MstCompany entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_MstCompanies1(MstCompany entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_MstCompanies2(MstCompany entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_MstCompanies2(MstCompany entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_MstDiscounts(MstDiscount entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstDiscounts(MstDiscount entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_MstDiscounts1(MstDiscount entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_MstDiscounts1(MstDiscount entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_MstDiscounts2(MstDiscount entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_MstDiscounts2(MstDiscount entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_MstPayTypes(MstPayType entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstPayTypes(MstPayType entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_MstPayTypes1(MstPayType entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_MstPayTypes1(MstPayType entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_MstPayTypes2(MstPayType entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_MstPayTypes2(MstPayType entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_MstPeriods(MstPeriod entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstPeriods(MstPeriod entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_MstPeriods1(MstPeriod entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_MstPeriods1(MstPeriod entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_MstPeriods2(MstPeriod entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_MstPeriods2(MstPeriod entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_MstTaxes(MstTax entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstTaxes(MstTax entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_MstTaxes1(MstTax entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_MstTaxes1(MstTax entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_MstTaxes2(MstTax entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_MstTaxes2(MstTax entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_MstTaxTypes(MstTaxType entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstTaxTypes(MstTaxType entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_MstTaxTypes1(MstTaxType entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_MstTaxTypes1(MstTaxType entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_MstTaxTypes2(MstTaxType entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_MstTaxTypes2(MstTaxType entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_MstTerms(MstTerm entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstTerms(MstTerm entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_MstTerms1(MstTerm entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_MstTerms1(MstTerm entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_MstTerms2(MstTerm entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_MstTerms2(MstTerm entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_MstUnits(MstUnit entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstUnits(MstUnit entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_MstUnits1(MstUnit entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_MstUnits1(MstUnit entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_MstUnits2(MstUnit entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_MstUnits2(MstUnit entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_MstUsers(MstUser entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_MstUsers(MstUser entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_MstUserSerialNumbers(MstUserSerialNumber entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstUserSerialNumbers(MstUserSerialNumber entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_MstUserStaffs(MstUserStaff entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstUserStaffs(MstUserStaff entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_MstUserStaffs1(MstUserStaff entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_MstUserStaffs1(MstUserStaff entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_TrnBanks(TrnBank entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_TrnBanks(TrnBank entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_TrnBanks1(TrnBank entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_TrnBanks1(TrnBank entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_TrnCollections(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_TrnCollections(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_TrnCollections1(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_TrnCollections1(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_TrnCollections2(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_TrnCollections2(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_TrnCollections3(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = this;
		}
		
		private void detach_TrnCollections3(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = null;
		}
		
		private void attach_TrnCollections4(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = this;
		}
		
		private void detach_TrnCollections4(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = null;
		}
		
		private void attach_TrnDisbursements(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_TrnDisbursements(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_TrnDisbursements1(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_TrnDisbursements1(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_TrnDisbursements2(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_TrnDisbursements2(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_TrnDisbursements3(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = this;
		}
		
		private void detach_TrnDisbursements3(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = null;
		}
		
		private void attach_TrnDisbursements4(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = this;
		}
		
		private void detach_TrnDisbursements4(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = null;
		}
		
		private void attach_TrnJournalVouchers(TrnJournalVoucher entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_TrnJournalVouchers(TrnJournalVoucher entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_TrnJournalVouchers1(TrnJournalVoucher entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_TrnJournalVouchers1(TrnJournalVoucher entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_TrnJournalVouchers2(TrnJournalVoucher entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_TrnJournalVouchers2(TrnJournalVoucher entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_TrnJournalVouchers3(TrnJournalVoucher entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = this;
		}
		
		private void detach_TrnJournalVouchers3(TrnJournalVoucher entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = null;
		}
		
		private void attach_TrnJournalVouchers4(TrnJournalVoucher entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = this;
		}
		
		private void detach_TrnJournalVouchers4(TrnJournalVoucher entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = null;
		}
		
		private void attach_TrnPurchaseInvoices(TrnPurchaseInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_TrnPurchaseInvoices(TrnPurchaseInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_TrnPurchaseInvoices1(TrnPurchaseInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_TrnPurchaseInvoices1(TrnPurchaseInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_TrnPurchaseInvoices2(TrnPurchaseInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_TrnPurchaseInvoices2(TrnPurchaseInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_TrnPurchaseInvoices3(TrnPurchaseInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = this;
		}
		
		private void detach_TrnPurchaseInvoices3(TrnPurchaseInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = null;
		}
		
		private void attach_TrnPurchaseInvoices4(TrnPurchaseInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = this;
		}
		
		private void detach_TrnPurchaseInvoices4(TrnPurchaseInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = null;
		}
		
		private void attach_TrnPurchaseOrders(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_TrnPurchaseOrders(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_TrnPurchaseOrders1(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_TrnPurchaseOrders1(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_TrnPurchaseOrders2(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_TrnPurchaseOrders2(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_TrnPurchaseOrders3(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = this;
		}
		
		private void detach_TrnPurchaseOrders3(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = null;
		}
		
		private void attach_TrnPurchaseOrders4(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = this;
		}
		
		private void detach_TrnPurchaseOrders4(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = null;
		}
		
		private void attach_TrnPurchaseOrders5(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser5 = this;
		}
		
		private void detach_TrnPurchaseOrders5(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser5 = null;
		}
		
		private void attach_TrnSalesInvoices(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_TrnSalesInvoices(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_TrnSalesInvoices1(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_TrnSalesInvoices1(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_TrnSalesInvoices2(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_TrnSalesInvoices2(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_TrnSalesInvoices3(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = this;
		}
		
		private void detach_TrnSalesInvoices3(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = null;
		}
		
		private void attach_TrnSalesInvoices4(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = this;
		}
		
		private void detach_TrnSalesInvoices4(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = null;
		}
		
		private void attach_TrnSalesInvoices5(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstUser5 = this;
		}
		
		private void detach_TrnSalesInvoices5(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstUser5 = null;
		}
		
		private void attach_TrnSalesOrders(TrnSalesOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_TrnSalesOrders(TrnSalesOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_TrnSalesOrders1(TrnSalesOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_TrnSalesOrders1(TrnSalesOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_TrnSalesOrders2(TrnSalesOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_TrnSalesOrders2(TrnSalesOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_TrnSalesOrders3(TrnSalesOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = this;
		}
		
		private void detach_TrnSalesOrders3(TrnSalesOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = null;
		}
		
		private void attach_TrnSalesOrders4(TrnSalesOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = this;
		}
		
		private void detach_TrnSalesOrders4(TrnSalesOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = null;
		}
		
		private void attach_TrnSalesOrders5(TrnSalesOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser5 = this;
		}
		
		private void detach_TrnSalesOrders5(TrnSalesOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstUser5 = null;
		}
		
		private void attach_TrnStockIns(TrnStockIn entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_TrnStockIns(TrnStockIn entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_TrnStockIns1(TrnStockIn entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_TrnStockIns1(TrnStockIn entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_TrnStockIns2(TrnStockIn entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_TrnStockIns2(TrnStockIn entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_TrnStockIns3(TrnStockIn entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = this;
		}
		
		private void detach_TrnStockIns3(TrnStockIn entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = null;
		}
		
		private void attach_TrnStockIns4(TrnStockIn entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = this;
		}
		
		private void detach_TrnStockIns4(TrnStockIn entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = null;
		}
		
		private void attach_TrnStockOuts(TrnStockOut entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_TrnStockOuts(TrnStockOut entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_TrnStockOuts1(TrnStockOut entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_TrnStockOuts1(TrnStockOut entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_TrnStockOuts2(TrnStockOut entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_TrnStockOuts2(TrnStockOut entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_TrnStockOuts3(TrnStockOut entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = this;
		}
		
		private void detach_TrnStockOuts3(TrnStockOut entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = null;
		}
		
		private void attach_TrnStockOuts4(TrnStockOut entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = this;
		}
		
		private void detach_TrnStockOuts4(TrnStockOut entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = null;
		}
		
		private void attach_TrnStockTransfers(TrnStockTransfer entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_TrnStockTransfers(TrnStockTransfer entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_TrnStockTransfers1(TrnStockTransfer entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_TrnStockTransfers1(TrnStockTransfer entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_TrnStockTransfers2(TrnStockTransfer entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_TrnStockTransfers2(TrnStockTransfer entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_TrnStockTransfers3(TrnStockTransfer entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = this;
		}
		
		private void detach_TrnStockTransfers3(TrnStockTransfer entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = null;
		}
		
		private void attach_TrnStockTransfers4(TrnStockTransfer entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = this;
		}
		
		private void detach_TrnStockTransfers4(TrnStockTransfer entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstUserSerialNumber")]
	public partial class MstUserSerialNumber : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _UserId;
		
		private string _SerialNumber;
		
		private System.DateTime _InstalledDate;
		
		private int _NumberOfDays;
		
		private string _LicenseCode;
		
		private EntityRef<MstUser> _MstUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnSerialNumberChanging(string value);
    partial void OnSerialNumberChanged();
    partial void OnInstalledDateChanging(System.DateTime value);
    partial void OnInstalledDateChanged();
    partial void OnNumberOfDaysChanging(int value);
    partial void OnNumberOfDaysChanged();
    partial void OnLicenseCodeChanging(string value);
    partial void OnLicenseCodeChanged();
    #endregion
		
		public MstUserSerialNumber()
		{
			this._MstUser = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNumber", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string SerialNumber
		{
			get
			{
				return this._SerialNumber;
			}
			set
			{
				if ((this._SerialNumber != value))
				{
					this.OnSerialNumberChanging(value);
					this.SendPropertyChanging();
					this._SerialNumber = value;
					this.SendPropertyChanged("SerialNumber");
					this.OnSerialNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstalledDate", DbType="DateTime NOT NULL")]
		public System.DateTime InstalledDate
		{
			get
			{
				return this._InstalledDate;
			}
			set
			{
				if ((this._InstalledDate != value))
				{
					this.OnInstalledDateChanging(value);
					this.SendPropertyChanging();
					this._InstalledDate = value;
					this.SendPropertyChanged("InstalledDate");
					this.OnInstalledDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfDays", DbType="Int NOT NULL")]
		public int NumberOfDays
		{
			get
			{
				return this._NumberOfDays;
			}
			set
			{
				if ((this._NumberOfDays != value))
				{
					this.OnNumberOfDaysChanging(value);
					this.SendPropertyChanging();
					this._NumberOfDays = value;
					this.SendPropertyChanged("NumberOfDays");
					this.OnNumberOfDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseCode", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string LicenseCode
		{
			get
			{
				return this._LicenseCode;
			}
			set
			{
				if ((this._LicenseCode != value))
				{
					this.OnLicenseCodeChanging(value);
					this.SendPropertyChanging();
					this._LicenseCode = value;
					this.SendPropertyChanged("LicenseCode");
					this.OnLicenseCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstUserSerialNumber", Storage="_MstUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstUserSerialNumbers.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstUserSerialNumbers.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(long);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstUserStaff")]
	public partial class MstUserStaff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _UserId;
		
		private long _UserStaffId;
		
		private long _RoleId;
		
		private EntitySet<MstUserStaffRole> _MstUserStaffRoles;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<SysRole> _SysRole;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnUserStaffIdChanging(long value);
    partial void OnUserStaffIdChanged();
    partial void OnRoleIdChanging(long value);
    partial void OnRoleIdChanged();
    #endregion
		
		public MstUserStaff()
		{
			this._MstUserStaffRoles = new EntitySet<MstUserStaffRole>(new Action<MstUserStaffRole>(this.attach_MstUserStaffRoles), new Action<MstUserStaffRole>(this.detach_MstUserStaffRoles));
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._SysRole = default(EntityRef<SysRole>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserStaffId", DbType="BigInt NOT NULL")]
		public long UserStaffId
		{
			get
			{
				return this._UserStaffId;
			}
			set
			{
				if ((this._UserStaffId != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserStaffIdChanging(value);
					this.SendPropertyChanging();
					this._UserStaffId = value;
					this.SendPropertyChanged("UserStaffId");
					this.OnUserStaffIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="BigInt NOT NULL")]
		public long RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._SysRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUserStaff_MstUserStaffRole", Storage="_MstUserStaffRoles", ThisKey="Id", OtherKey="UserStaffId")]
		public EntitySet<MstUserStaffRole> MstUserStaffRoles
		{
			get
			{
				return this._MstUserStaffRoles;
			}
			set
			{
				this._MstUserStaffRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstUserStaff", Storage="_MstUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstUserStaffs.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstUserStaffs.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(long);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstUserStaff1", Storage="_MstUser1", ThisKey="UserStaffId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.MstUserStaffs1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.MstUserStaffs1.Add(this);
						this._UserStaffId = value.Id;
					}
					else
					{
						this._UserStaffId = default(long);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SysRole_MstUserStaff", Storage="_SysRole", ThisKey="RoleId", OtherKey="Id", IsForeignKey=true)]
		public SysRole SysRole
		{
			get
			{
				return this._SysRole.Entity;
			}
			set
			{
				SysRole previousValue = this._SysRole.Entity;
				if (((previousValue != value) 
							|| (this._SysRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SysRole.Entity = null;
						previousValue.MstUserStaffs.Remove(this);
					}
					this._SysRole.Entity = value;
					if ((value != null))
					{
						value.MstUserStaffs.Add(this);
						this._RoleId = value.Id;
					}
					else
					{
						this._RoleId = default(long);
					}
					this.SendPropertyChanged("SysRole");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstUserStaffRoles(MstUserStaffRole entity)
		{
			this.SendPropertyChanging();
			entity.MstUserStaff = this;
		}
		
		private void detach_MstUserStaffRoles(MstUserStaffRole entity)
		{
			this.SendPropertyChanging();
			entity.MstUserStaff = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstUserStaffRole")]
	public partial class MstUserStaffRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _UserStaffId;
		
		private long _CompanyId;
		
		private long _PageId;
		
		private bool _CanAdd;
		
		private bool _CanSave;
		
		private bool _CanEdit;
		
		private bool _CanDelete;
		
		private bool _CanPrint;
		
		private bool _CanApprove;
		
		private bool _CanDisapprove;
		
		private EntityRef<MstCompany> _MstCompany;
		
		private EntityRef<MstUserStaff> _MstUserStaff;
		
		private EntityRef<SysPage> _SysPage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnUserStaffIdChanging(long value);
    partial void OnUserStaffIdChanged();
    partial void OnCompanyIdChanging(long value);
    partial void OnCompanyIdChanged();
    partial void OnPageIdChanging(long value);
    partial void OnPageIdChanged();
    partial void OnCanAddChanging(bool value);
    partial void OnCanAddChanged();
    partial void OnCanSaveChanging(bool value);
    partial void OnCanSaveChanged();
    partial void OnCanEditChanging(bool value);
    partial void OnCanEditChanged();
    partial void OnCanDeleteChanging(bool value);
    partial void OnCanDeleteChanged();
    partial void OnCanPrintChanging(bool value);
    partial void OnCanPrintChanged();
    partial void OnCanApproveChanging(bool value);
    partial void OnCanApproveChanged();
    partial void OnCanDisapproveChanging(bool value);
    partial void OnCanDisapproveChanged();
    #endregion
		
		public MstUserStaffRole()
		{
			this._MstCompany = default(EntityRef<MstCompany>);
			this._MstUserStaff = default(EntityRef<MstUserStaff>);
			this._SysPage = default(EntityRef<SysPage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserStaffId", DbType="BigInt NOT NULL")]
		public long UserStaffId
		{
			get
			{
				return this._UserStaffId;
			}
			set
			{
				if ((this._UserStaffId != value))
				{
					if (this._MstUserStaff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserStaffIdChanging(value);
					this.SendPropertyChanging();
					this._UserStaffId = value;
					this.SendPropertyChanged("UserStaffId");
					this.OnUserStaffIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="BigInt NOT NULL")]
		public long CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					if (this._MstCompany.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageId", DbType="BigInt NOT NULL")]
		public long PageId
		{
			get
			{
				return this._PageId;
			}
			set
			{
				if ((this._PageId != value))
				{
					if (this._SysPage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPageIdChanging(value);
					this.SendPropertyChanging();
					this._PageId = value;
					this.SendPropertyChanged("PageId");
					this.OnPageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanAdd", DbType="Bit NOT NULL")]
		public bool CanAdd
		{
			get
			{
				return this._CanAdd;
			}
			set
			{
				if ((this._CanAdd != value))
				{
					this.OnCanAddChanging(value);
					this.SendPropertyChanging();
					this._CanAdd = value;
					this.SendPropertyChanged("CanAdd");
					this.OnCanAddChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanSave", DbType="Bit NOT NULL")]
		public bool CanSave
		{
			get
			{
				return this._CanSave;
			}
			set
			{
				if ((this._CanSave != value))
				{
					this.OnCanSaveChanging(value);
					this.SendPropertyChanging();
					this._CanSave = value;
					this.SendPropertyChanged("CanSave");
					this.OnCanSaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanEdit", DbType="Bit NOT NULL")]
		public bool CanEdit
		{
			get
			{
				return this._CanEdit;
			}
			set
			{
				if ((this._CanEdit != value))
				{
					this.OnCanEditChanging(value);
					this.SendPropertyChanging();
					this._CanEdit = value;
					this.SendPropertyChanged("CanEdit");
					this.OnCanEditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanDelete", DbType="Bit NOT NULL")]
		public bool CanDelete
		{
			get
			{
				return this._CanDelete;
			}
			set
			{
				if ((this._CanDelete != value))
				{
					this.OnCanDeleteChanging(value);
					this.SendPropertyChanging();
					this._CanDelete = value;
					this.SendPropertyChanged("CanDelete");
					this.OnCanDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanPrint", DbType="Bit NOT NULL")]
		public bool CanPrint
		{
			get
			{
				return this._CanPrint;
			}
			set
			{
				if ((this._CanPrint != value))
				{
					this.OnCanPrintChanging(value);
					this.SendPropertyChanging();
					this._CanPrint = value;
					this.SendPropertyChanged("CanPrint");
					this.OnCanPrintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanApprove", DbType="Bit NOT NULL")]
		public bool CanApprove
		{
			get
			{
				return this._CanApprove;
			}
			set
			{
				if ((this._CanApprove != value))
				{
					this.OnCanApproveChanging(value);
					this.SendPropertyChanging();
					this._CanApprove = value;
					this.SendPropertyChanged("CanApprove");
					this.OnCanApproveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanDisapprove", DbType="Bit NOT NULL")]
		public bool CanDisapprove
		{
			get
			{
				return this._CanDisapprove;
			}
			set
			{
				if ((this._CanDisapprove != value))
				{
					this.OnCanDisapproveChanging(value);
					this.SendPropertyChanging();
					this._CanDisapprove = value;
					this.SendPropertyChanged("CanDisapprove");
					this.OnCanDisapproveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstCompany_MstUserStaffRole", Storage="_MstCompany", ThisKey="CompanyId", OtherKey="Id", IsForeignKey=true)]
		public MstCompany MstCompany
		{
			get
			{
				return this._MstCompany.Entity;
			}
			set
			{
				MstCompany previousValue = this._MstCompany.Entity;
				if (((previousValue != value) 
							|| (this._MstCompany.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstCompany.Entity = null;
						previousValue.MstUserStaffRoles.Remove(this);
					}
					this._MstCompany.Entity = value;
					if ((value != null))
					{
						value.MstUserStaffRoles.Add(this);
						this._CompanyId = value.Id;
					}
					else
					{
						this._CompanyId = default(long);
					}
					this.SendPropertyChanged("MstCompany");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUserStaff_MstUserStaffRole", Storage="_MstUserStaff", ThisKey="UserStaffId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MstUserStaff MstUserStaff
		{
			get
			{
				return this._MstUserStaff.Entity;
			}
			set
			{
				MstUserStaff previousValue = this._MstUserStaff.Entity;
				if (((previousValue != value) 
							|| (this._MstUserStaff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUserStaff.Entity = null;
						previousValue.MstUserStaffRoles.Remove(this);
					}
					this._MstUserStaff.Entity = value;
					if ((value != null))
					{
						value.MstUserStaffRoles.Add(this);
						this._UserStaffId = value.Id;
					}
					else
					{
						this._UserStaffId = default(long);
					}
					this.SendPropertyChanged("MstUserStaff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SysPage_MstUserStaffRole", Storage="_SysPage", ThisKey="PageId", OtherKey="Id", IsForeignKey=true)]
		public SysPage SysPage
		{
			get
			{
				return this._SysPage.Entity;
			}
			set
			{
				SysPage previousValue = this._SysPage.Entity;
				if (((previousValue != value) 
							|| (this._SysPage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SysPage.Entity = null;
						previousValue.MstUserStaffRoles.Remove(this);
					}
					this._SysPage.Entity = value;
					if ((value != null))
					{
						value.MstUserStaffRoles.Add(this);
						this._PageId = value.Id;
					}
					else
					{
						this._PageId = default(long);
					}
					this.SendPropertyChanged("SysPage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Profiles")]
	public partial class Profile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private string _PropertyNames;
		
		private string _PropertyValueStrings;
		
		private System.Data.Linq.Binary _PropertyValueBinary;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPropertyNamesChanging(string value);
    partial void OnPropertyNamesChanged();
    partial void OnPropertyValueStringsChanging(string value);
    partial void OnPropertyValueStringsChanged();
    partial void OnPropertyValueBinaryChanging(System.Data.Linq.Binary value);
    partial void OnPropertyValueBinaryChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public Profile()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyNames", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string PropertyNames
		{
			get
			{
				return this._PropertyNames;
			}
			set
			{
				if ((this._PropertyNames != value))
				{
					this.OnPropertyNamesChanging(value);
					this.SendPropertyChanging();
					this._PropertyNames = value;
					this.SendPropertyChanged("PropertyNames");
					this.OnPropertyNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValueStrings", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string PropertyValueStrings
		{
			get
			{
				return this._PropertyValueStrings;
			}
			set
			{
				if ((this._PropertyValueStrings != value))
				{
					this.OnPropertyValueStringsChanging(value);
					this.SendPropertyChanging();
					this._PropertyValueStrings = value;
					this.SendPropertyChanged("PropertyValueStrings");
					this.OnPropertyValueStringsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValueBinary", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PropertyValueBinary
		{
			get
			{
				return this._PropertyValueBinary;
			}
			set
			{
				if ((this._PropertyValueBinary != value))
				{
					this.OnPropertyValueBinaryChanging(value);
					this.SendPropertyChanging();
					this._PropertyValueBinary = value;
					this.SendPropertyChanged("PropertyValueBinary");
					this.OnPropertyValueBinaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Profile", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Profile = null;
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Profile = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Roles")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _RoleId;
		
		private string _RoleName;
		
		private string _Description;
		
		private EntitySet<UsersInRole> _UsersInRoles;
		
		private EntityRef<Application> _Application;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Role()
		{
			this._UsersInRoles = new EntitySet<UsersInRole>(new Action<UsersInRole>(this.attach_UsersInRoles), new Action<UsersInRole>(this.detach_UsersInRoles));
			this._Application = default(EntityRef<Application>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_UsersInRole", Storage="_UsersInRoles", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<UsersInRole> UsersInRoles
		{
			get
			{
				return this._UsersInRoles;
			}
			set
			{
				this._UsersInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_Role", Storage="_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public Application Application
		{
			get
			{
				return this._Application.Entity;
			}
			set
			{
				Application previousValue = this._Application.Entity;
				if (((previousValue != value) 
							|| (this._Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Application.Entity = null;
						previousValue.Roles.Remove(this);
					}
					this._Application.Entity = value;
					if ((value != null))
					{
						value.Roles.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UsersInRoles(UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_UsersInRoles(UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SysPage")]
	public partial class SysPage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Page;
		
		private string _Description;
		
		private EntitySet<MstUserStaffRole> _MstUserStaffRoles;
		
		private EntitySet<SysRolePage> _SysRolePages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnPageChanging(string value);
    partial void OnPageChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public SysPage()
		{
			this._MstUserStaffRoles = new EntitySet<MstUserStaffRole>(new Action<MstUserStaffRole>(this.attach_MstUserStaffRoles), new Action<MstUserStaffRole>(this.detach_MstUserStaffRoles));
			this._SysRolePages = new EntitySet<SysRolePage>(new Action<SysRolePage>(this.attach_SysRolePages), new Action<SysRolePage>(this.detach_SysRolePages));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Page", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Page
		{
			get
			{
				return this._Page;
			}
			set
			{
				if ((this._Page != value))
				{
					this.OnPageChanging(value);
					this.SendPropertyChanging();
					this._Page = value;
					this.SendPropertyChanged("Page");
					this.OnPageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SysPage_MstUserStaffRole", Storage="_MstUserStaffRoles", ThisKey="Id", OtherKey="PageId")]
		public EntitySet<MstUserStaffRole> MstUserStaffRoles
		{
			get
			{
				return this._MstUserStaffRoles;
			}
			set
			{
				this._MstUserStaffRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SysPage_SysRolePage", Storage="_SysRolePages", ThisKey="Id", OtherKey="PageId")]
		public EntitySet<SysRolePage> SysRolePages
		{
			get
			{
				return this._SysRolePages;
			}
			set
			{
				this._SysRolePages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstUserStaffRoles(MstUserStaffRole entity)
		{
			this.SendPropertyChanging();
			entity.SysPage = this;
		}
		
		private void detach_MstUserStaffRoles(MstUserStaffRole entity)
		{
			this.SendPropertyChanging();
			entity.SysPage = null;
		}
		
		private void attach_SysRolePages(SysRolePage entity)
		{
			this.SendPropertyChanging();
			entity.SysPage = this;
		}
		
		private void detach_SysRolePages(SysRolePage entity)
		{
			this.SendPropertyChanging();
			entity.SysPage = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SysRole")]
	public partial class SysRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Role;
		
		private EntitySet<MstUserStaff> _MstUserStaffs;
		
		private EntitySet<SysRolePage> _SysRolePages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnRoleChanging(string value);
    partial void OnRoleChanged();
    #endregion
		
		public SysRole()
		{
			this._MstUserStaffs = new EntitySet<MstUserStaff>(new Action<MstUserStaff>(this.attach_MstUserStaffs), new Action<MstUserStaff>(this.detach_MstUserStaffs));
			this._SysRolePages = new EntitySet<SysRolePage>(new Action<SysRolePage>(this.attach_SysRolePages), new Action<SysRolePage>(this.detach_SysRolePages));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this.OnRoleChanging(value);
					this.SendPropertyChanging();
					this._Role = value;
					this.SendPropertyChanged("Role");
					this.OnRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SysRole_MstUserStaff", Storage="_MstUserStaffs", ThisKey="Id", OtherKey="RoleId")]
		public EntitySet<MstUserStaff> MstUserStaffs
		{
			get
			{
				return this._MstUserStaffs;
			}
			set
			{
				this._MstUserStaffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SysRole_SysRolePage", Storage="_SysRolePages", ThisKey="Id", OtherKey="RoleId")]
		public EntitySet<SysRolePage> SysRolePages
		{
			get
			{
				return this._SysRolePages;
			}
			set
			{
				this._SysRolePages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstUserStaffs(MstUserStaff entity)
		{
			this.SendPropertyChanging();
			entity.SysRole = this;
		}
		
		private void detach_MstUserStaffs(MstUserStaff entity)
		{
			this.SendPropertyChanging();
			entity.SysRole = null;
		}
		
		private void attach_SysRolePages(SysRolePage entity)
		{
			this.SendPropertyChanging();
			entity.SysRole = this;
		}
		
		private void detach_SysRolePages(SysRolePage entity)
		{
			this.SendPropertyChanging();
			entity.SysRole = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SysRolePage")]
	public partial class SysRolePage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _RoleId;
		
		private long _PageId;
		
		private bool _CanAdd;
		
		private bool _CanSave;
		
		private bool _CanEdit;
		
		private bool _CanDelete;
		
		private bool _CanPrint;
		
		private bool _CanApprove;
		
		private bool _CanDisapprove;
		
		private EntityRef<SysPage> _SysPage;
		
		private EntityRef<SysRole> _SysRole;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnRoleIdChanging(long value);
    partial void OnRoleIdChanged();
    partial void OnPageIdChanging(long value);
    partial void OnPageIdChanged();
    partial void OnCanAddChanging(bool value);
    partial void OnCanAddChanged();
    partial void OnCanSaveChanging(bool value);
    partial void OnCanSaveChanged();
    partial void OnCanEditChanging(bool value);
    partial void OnCanEditChanged();
    partial void OnCanDeleteChanging(bool value);
    partial void OnCanDeleteChanged();
    partial void OnCanPrintChanging(bool value);
    partial void OnCanPrintChanged();
    partial void OnCanApproveChanging(bool value);
    partial void OnCanApproveChanged();
    partial void OnCanDisapproveChanging(bool value);
    partial void OnCanDisapproveChanged();
    #endregion
		
		public SysRolePage()
		{
			this._SysPage = default(EntityRef<SysPage>);
			this._SysRole = default(EntityRef<SysRole>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="BigInt NOT NULL")]
		public long RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._SysRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageId", DbType="BigInt NOT NULL")]
		public long PageId
		{
			get
			{
				return this._PageId;
			}
			set
			{
				if ((this._PageId != value))
				{
					if (this._SysPage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPageIdChanging(value);
					this.SendPropertyChanging();
					this._PageId = value;
					this.SendPropertyChanged("PageId");
					this.OnPageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanAdd", DbType="Bit NOT NULL")]
		public bool CanAdd
		{
			get
			{
				return this._CanAdd;
			}
			set
			{
				if ((this._CanAdd != value))
				{
					this.OnCanAddChanging(value);
					this.SendPropertyChanging();
					this._CanAdd = value;
					this.SendPropertyChanged("CanAdd");
					this.OnCanAddChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanSave", DbType="Bit NOT NULL")]
		public bool CanSave
		{
			get
			{
				return this._CanSave;
			}
			set
			{
				if ((this._CanSave != value))
				{
					this.OnCanSaveChanging(value);
					this.SendPropertyChanging();
					this._CanSave = value;
					this.SendPropertyChanged("CanSave");
					this.OnCanSaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanEdit", DbType="Bit NOT NULL")]
		public bool CanEdit
		{
			get
			{
				return this._CanEdit;
			}
			set
			{
				if ((this._CanEdit != value))
				{
					this.OnCanEditChanging(value);
					this.SendPropertyChanging();
					this._CanEdit = value;
					this.SendPropertyChanged("CanEdit");
					this.OnCanEditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanDelete", DbType="Bit NOT NULL")]
		public bool CanDelete
		{
			get
			{
				return this._CanDelete;
			}
			set
			{
				if ((this._CanDelete != value))
				{
					this.OnCanDeleteChanging(value);
					this.SendPropertyChanging();
					this._CanDelete = value;
					this.SendPropertyChanged("CanDelete");
					this.OnCanDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanPrint", DbType="Bit NOT NULL")]
		public bool CanPrint
		{
			get
			{
				return this._CanPrint;
			}
			set
			{
				if ((this._CanPrint != value))
				{
					this.OnCanPrintChanging(value);
					this.SendPropertyChanging();
					this._CanPrint = value;
					this.SendPropertyChanged("CanPrint");
					this.OnCanPrintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanApprove", DbType="Bit NOT NULL")]
		public bool CanApprove
		{
			get
			{
				return this._CanApprove;
			}
			set
			{
				if ((this._CanApprove != value))
				{
					this.OnCanApproveChanging(value);
					this.SendPropertyChanging();
					this._CanApprove = value;
					this.SendPropertyChanged("CanApprove");
					this.OnCanApproveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanDisapprove", DbType="Bit NOT NULL")]
		public bool CanDisapprove
		{
			get
			{
				return this._CanDisapprove;
			}
			set
			{
				if ((this._CanDisapprove != value))
				{
					this.OnCanDisapproveChanging(value);
					this.SendPropertyChanging();
					this._CanDisapprove = value;
					this.SendPropertyChanged("CanDisapprove");
					this.OnCanDisapproveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SysPage_SysRolePage", Storage="_SysPage", ThisKey="PageId", OtherKey="Id", IsForeignKey=true)]
		public SysPage SysPage
		{
			get
			{
				return this._SysPage.Entity;
			}
			set
			{
				SysPage previousValue = this._SysPage.Entity;
				if (((previousValue != value) 
							|| (this._SysPage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SysPage.Entity = null;
						previousValue.SysRolePages.Remove(this);
					}
					this._SysPage.Entity = value;
					if ((value != null))
					{
						value.SysRolePages.Add(this);
						this._PageId = value.Id;
					}
					else
					{
						this._PageId = default(long);
					}
					this.SendPropertyChanged("SysPage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SysRole_SysRolePage", Storage="_SysRole", ThisKey="RoleId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SysRole SysRole
		{
			get
			{
				return this._SysRole.Entity;
			}
			set
			{
				SysRole previousValue = this._SysRole.Entity;
				if (((previousValue != value) 
							|| (this._SysRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SysRole.Entity = null;
						previousValue.SysRolePages.Remove(this);
					}
					this._SysRole.Entity = value;
					if ((value != null))
					{
						value.SysRolePages.Add(this);
						this._RoleId = value.Id;
					}
					else
					{
						this._RoleId = default(long);
					}
					this.SendPropertyChanged("SysRole");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnBank")]
	public partial class TrnBank : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _CVId;
		
		private System.Nullable<long> _ORId;
		
		private System.Nullable<long> _JVId;
		
		private System.DateTime _BankDate;
		
		private long _BankId;
		
		private decimal _DebitAmount;
		
		private decimal _CreditAmount;
		
		private string _CheckNumber;
		
		private System.DateTime _CheckDate;
		
		private string _CheckBank;
		
		private bool _IsCleared;
		
		private System.DateTime _DateCleared;
		
		private string _Particulars;
		
		private long _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private long _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<TrnCollection> _TrnCollection;
		
		private EntityRef<TrnDisbursement> _TrnDisbursement;
		
		private EntityRef<TrnJournalVoucher> _TrnJournalVoucher;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCVIdChanging(System.Nullable<long> value);
    partial void OnCVIdChanged();
    partial void OnORIdChanging(System.Nullable<long> value);
    partial void OnORIdChanged();
    partial void OnJVIdChanging(System.Nullable<long> value);
    partial void OnJVIdChanged();
    partial void OnBankDateChanging(System.DateTime value);
    partial void OnBankDateChanged();
    partial void OnBankIdChanging(long value);
    partial void OnBankIdChanged();
    partial void OnDebitAmountChanging(decimal value);
    partial void OnDebitAmountChanged();
    partial void OnCreditAmountChanging(decimal value);
    partial void OnCreditAmountChanged();
    partial void OnCheckNumberChanging(string value);
    partial void OnCheckNumberChanged();
    partial void OnCheckDateChanging(System.DateTime value);
    partial void OnCheckDateChanged();
    partial void OnCheckBankChanging(string value);
    partial void OnCheckBankChanged();
    partial void OnIsClearedChanging(bool value);
    partial void OnIsClearedChanged();
    partial void OnDateClearedChanging(System.DateTime value);
    partial void OnDateClearedChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnCreatedByIdChanging(long value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(long value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public TrnBank()
		{
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._TrnCollection = default(EntityRef<TrnCollection>);
			this._TrnDisbursement = default(EntityRef<TrnDisbursement>);
			this._TrnJournalVoucher = default(EntityRef<TrnJournalVoucher>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CVId", DbType="BigInt")]
		public System.Nullable<long> CVId
		{
			get
			{
				return this._CVId;
			}
			set
			{
				if ((this._CVId != value))
				{
					if (this._TrnDisbursement.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCVIdChanging(value);
					this.SendPropertyChanging();
					this._CVId = value;
					this.SendPropertyChanged("CVId");
					this.OnCVIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORId", DbType="BigInt")]
		public System.Nullable<long> ORId
		{
			get
			{
				return this._ORId;
			}
			set
			{
				if ((this._ORId != value))
				{
					if (this._TrnCollection.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnORIdChanging(value);
					this.SendPropertyChanging();
					this._ORId = value;
					this.SendPropertyChanged("ORId");
					this.OnORIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JVId", DbType="BigInt")]
		public System.Nullable<long> JVId
		{
			get
			{
				return this._JVId;
			}
			set
			{
				if ((this._JVId != value))
				{
					if (this._TrnJournalVoucher.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJVIdChanging(value);
					this.SendPropertyChanging();
					this._JVId = value;
					this.SendPropertyChanged("JVId");
					this.OnJVIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankDate", DbType="DateTime NOT NULL")]
		public System.DateTime BankDate
		{
			get
			{
				return this._BankDate;
			}
			set
			{
				if ((this._BankDate != value))
				{
					this.OnBankDateChanging(value);
					this.SendPropertyChanging();
					this._BankDate = value;
					this.SendPropertyChanged("BankDate");
					this.OnBankDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankId", DbType="BigInt NOT NULL")]
		public long BankId
		{
			get
			{
				return this._BankId;
			}
			set
			{
				if ((this._BankId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankIdChanging(value);
					this.SendPropertyChanging();
					this._BankId = value;
					this.SendPropertyChanged("BankId");
					this.OnBankIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DebitAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal DebitAmount
		{
			get
			{
				return this._DebitAmount;
			}
			set
			{
				if ((this._DebitAmount != value))
				{
					this.OnDebitAmountChanging(value);
					this.SendPropertyChanging();
					this._DebitAmount = value;
					this.SendPropertyChanged("DebitAmount");
					this.OnDebitAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal CreditAmount
		{
			get
			{
				return this._CreditAmount;
			}
			set
			{
				if ((this._CreditAmount != value))
				{
					this.OnCreditAmountChanging(value);
					this.SendPropertyChanging();
					this._CreditAmount = value;
					this.SendPropertyChanged("CreditAmount");
					this.OnCreditAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckNumber", DbType="NVarChar(50)")]
		public string CheckNumber
		{
			get
			{
				return this._CheckNumber;
			}
			set
			{
				if ((this._CheckNumber != value))
				{
					this.OnCheckNumberChanging(value);
					this.SendPropertyChanging();
					this._CheckNumber = value;
					this.SendPropertyChanged("CheckNumber");
					this.OnCheckNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckDate", DbType="DateTime NOT NULL")]
		public System.DateTime CheckDate
		{
			get
			{
				return this._CheckDate;
			}
			set
			{
				if ((this._CheckDate != value))
				{
					this.OnCheckDateChanging(value);
					this.SendPropertyChanging();
					this._CheckDate = value;
					this.SendPropertyChanged("CheckDate");
					this.OnCheckDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckBank", DbType="NVarChar(255)")]
		public string CheckBank
		{
			get
			{
				return this._CheckBank;
			}
			set
			{
				if ((this._CheckBank != value))
				{
					this.OnCheckBankChanging(value);
					this.SendPropertyChanging();
					this._CheckBank = value;
					this.SendPropertyChanged("CheckBank");
					this.OnCheckBankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCleared", DbType="Bit NOT NULL")]
		public bool IsCleared
		{
			get
			{
				return this._IsCleared;
			}
			set
			{
				if ((this._IsCleared != value))
				{
					this.OnIsClearedChanging(value);
					this.SendPropertyChanging();
					this._IsCleared = value;
					this.SendPropertyChanged("IsCleared");
					this.OnIsClearedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCleared", DbType="DateTime NOT NULL")]
		public System.DateTime DateCleared
		{
			get
			{
				return this._DateCleared;
			}
			set
			{
				if ((this._DateCleared != value))
				{
					this.OnDateClearedChanging(value);
					this.SendPropertyChanging();
					this._DateCleared = value;
					this.SendPropertyChanged("DateCleared");
					this.OnDateClearedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="BigInt NOT NULL")]
		public long CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="BigInt NOT NULL")]
		public long UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnBank", Storage="_MstArticle", ThisKey="BankId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.TrnBanks.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.TrnBanks.Add(this);
						this._BankId = value.Id;
					}
					else
					{
						this._BankId = default(long);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnBank", Storage="_MstUser", ThisKey="CreatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.TrnBanks.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.TrnBanks.Add(this);
						this._CreatedById = value.Id;
					}
					else
					{
						this._CreatedById = default(long);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnBank1", Storage="_MstUser1", ThisKey="UpdatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.TrnBanks1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.TrnBanks1.Add(this);
						this._UpdatedById = value.Id;
					}
					else
					{
						this._UpdatedById = default(long);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnCollection_TrnBank", Storage="_TrnCollection", ThisKey="ORId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public TrnCollection TrnCollection
		{
			get
			{
				return this._TrnCollection.Entity;
			}
			set
			{
				TrnCollection previousValue = this._TrnCollection.Entity;
				if (((previousValue != value) 
							|| (this._TrnCollection.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnCollection.Entity = null;
						previousValue.TrnBanks.Remove(this);
					}
					this._TrnCollection.Entity = value;
					if ((value != null))
					{
						value.TrnBanks.Add(this);
						this._ORId = value.Id;
					}
					else
					{
						this._ORId = default(Nullable<long>);
					}
					this.SendPropertyChanged("TrnCollection");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnDisbursement_TrnBank", Storage="_TrnDisbursement", ThisKey="CVId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public TrnDisbursement TrnDisbursement
		{
			get
			{
				return this._TrnDisbursement.Entity;
			}
			set
			{
				TrnDisbursement previousValue = this._TrnDisbursement.Entity;
				if (((previousValue != value) 
							|| (this._TrnDisbursement.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnDisbursement.Entity = null;
						previousValue.TrnBanks.Remove(this);
					}
					this._TrnDisbursement.Entity = value;
					if ((value != null))
					{
						value.TrnBanks.Add(this);
						this._CVId = value.Id;
					}
					else
					{
						this._CVId = default(Nullable<long>);
					}
					this.SendPropertyChanged("TrnDisbursement");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnJournalVoucher_TrnBank", Storage="_TrnJournalVoucher", ThisKey="JVId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public TrnJournalVoucher TrnJournalVoucher
		{
			get
			{
				return this._TrnJournalVoucher.Entity;
			}
			set
			{
				TrnJournalVoucher previousValue = this._TrnJournalVoucher.Entity;
				if (((previousValue != value) 
							|| (this._TrnJournalVoucher.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnJournalVoucher.Entity = null;
						previousValue.TrnBanks.Remove(this);
					}
					this._TrnJournalVoucher.Entity = value;
					if ((value != null))
					{
						value.TrnBanks.Add(this);
						this._JVId = value.Id;
					}
					else
					{
						this._JVId = default(Nullable<long>);
					}
					this.SendPropertyChanged("TrnJournalVoucher");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnCollection")]
	public partial class TrnCollection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _PeriodId;
		
		private long _BranchId;
		
		private string _ORNumber;
		
		private string _ORManualNumber;
		
		private System.DateTime _ORDate;
		
		private string _Particulars;
		
		private long _CustomerId;
		
		private decimal _TotalAmount;
		
		private bool _IsPrinted;
		
		private long _PreparedById;
		
		private long _CheckedById;
		
		private long _ApprovedById;
		
		private bool _IsLocked;
		
		private long _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private long _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<TrnBank> _TrnBanks;
		
		private EntitySet<TrnCollectionLine> _TrnCollectionLines;
		
		private EntitySet<TrnJournal> _TrnJournals;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstBranch> _MstBranch;
		
		private EntityRef<MstPeriod> _MstPeriod;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
		private EntityRef<MstUser> _MstUser3;
		
		private EntityRef<MstUser> _MstUser4;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnPeriodIdChanging(long value);
    partial void OnPeriodIdChanged();
    partial void OnBranchIdChanging(long value);
    partial void OnBranchIdChanged();
    partial void OnORNumberChanging(string value);
    partial void OnORNumberChanged();
    partial void OnORManualNumberChanging(string value);
    partial void OnORManualNumberChanged();
    partial void OnORDateChanging(System.DateTime value);
    partial void OnORDateChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnCustomerIdChanging(long value);
    partial void OnCustomerIdChanged();
    partial void OnTotalAmountChanging(decimal value);
    partial void OnTotalAmountChanged();
    partial void OnIsPrintedChanging(bool value);
    partial void OnIsPrintedChanged();
    partial void OnPreparedByIdChanging(long value);
    partial void OnPreparedByIdChanged();
    partial void OnCheckedByIdChanging(long value);
    partial void OnCheckedByIdChanged();
    partial void OnApprovedByIdChanging(long value);
    partial void OnApprovedByIdChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(long value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(long value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public TrnCollection()
		{
			this._TrnBanks = new EntitySet<TrnBank>(new Action<TrnBank>(this.attach_TrnBanks), new Action<TrnBank>(this.detach_TrnBanks));
			this._TrnCollectionLines = new EntitySet<TrnCollectionLine>(new Action<TrnCollectionLine>(this.attach_TrnCollectionLines), new Action<TrnCollectionLine>(this.detach_TrnCollectionLines));
			this._TrnJournals = new EntitySet<TrnJournal>(new Action<TrnJournal>(this.attach_TrnJournals), new Action<TrnJournal>(this.detach_TrnJournals));
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstBranch = default(EntityRef<MstBranch>);
			this._MstPeriod = default(EntityRef<MstPeriod>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			this._MstUser3 = default(EntityRef<MstUser>);
			this._MstUser4 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodId", DbType="BigInt NOT NULL")]
		public long PeriodId
		{
			get
			{
				return this._PeriodId;
			}
			set
			{
				if ((this._PeriodId != value))
				{
					if (this._MstPeriod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPeriodIdChanging(value);
					this.SendPropertyChanging();
					this._PeriodId = value;
					this.SendPropertyChanged("PeriodId");
					this.OnPeriodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="BigInt NOT NULL")]
		public long BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._MstBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ORNumber
		{
			get
			{
				return this._ORNumber;
			}
			set
			{
				if ((this._ORNumber != value))
				{
					this.OnORNumberChanging(value);
					this.SendPropertyChanging();
					this._ORNumber = value;
					this.SendPropertyChanged("ORNumber");
					this.OnORNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORManualNumber", DbType="NVarChar(50)")]
		public string ORManualNumber
		{
			get
			{
				return this._ORManualNumber;
			}
			set
			{
				if ((this._ORManualNumber != value))
				{
					this.OnORManualNumberChanging(value);
					this.SendPropertyChanging();
					this._ORManualNumber = value;
					this.SendPropertyChanged("ORManualNumber");
					this.OnORManualNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORDate", DbType="DateTime NOT NULL")]
		public System.DateTime ORDate
		{
			get
			{
				return this._ORDate;
			}
			set
			{
				if ((this._ORDate != value))
				{
					this.OnORDateChanging(value);
					this.SendPropertyChanging();
					this._ORDate = value;
					this.SendPropertyChanged("ORDate");
					this.OnORDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="BigInt NOT NULL")]
		public long CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this.OnTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalAmount = value;
					this.SendPropertyChanged("TotalAmount");
					this.OnTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPrinted", DbType="Bit NOT NULL")]
		public bool IsPrinted
		{
			get
			{
				return this._IsPrinted;
			}
			set
			{
				if ((this._IsPrinted != value))
				{
					this.OnIsPrintedChanging(value);
					this.SendPropertyChanging();
					this._IsPrinted = value;
					this.SendPropertyChanged("IsPrinted");
					this.OnIsPrintedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedById", DbType="BigInt NOT NULL")]
		public long PreparedById
		{
			get
			{
				return this._PreparedById;
			}
			set
			{
				if ((this._PreparedById != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreparedByIdChanging(value);
					this.SendPropertyChanging();
					this._PreparedById = value;
					this.SendPropertyChanged("PreparedById");
					this.OnPreparedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedById", DbType="BigInt NOT NULL")]
		public long CheckedById
		{
			get
			{
				return this._CheckedById;
			}
			set
			{
				if ((this._CheckedById != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckedByIdChanging(value);
					this.SendPropertyChanging();
					this._CheckedById = value;
					this.SendPropertyChanged("CheckedById");
					this.OnCheckedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedById", DbType="BigInt NOT NULL")]
		public long ApprovedById
		{
			get
			{
				return this._ApprovedById;
			}
			set
			{
				if ((this._ApprovedById != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApprovedByIdChanging(value);
					this.SendPropertyChanging();
					this._ApprovedById = value;
					this.SendPropertyChanged("ApprovedById");
					this.OnApprovedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="BigInt NOT NULL")]
		public long CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					if (this._MstUser3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="BigInt NOT NULL")]
		public long UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					if (this._MstUser4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnCollection_TrnBank", Storage="_TrnBanks", ThisKey="Id", OtherKey="ORId")]
		public EntitySet<TrnBank> TrnBanks
		{
			get
			{
				return this._TrnBanks;
			}
			set
			{
				this._TrnBanks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnCollection_TrnCollectionLine", Storage="_TrnCollectionLines", ThisKey="Id", OtherKey="ORId")]
		public EntitySet<TrnCollectionLine> TrnCollectionLines
		{
			get
			{
				return this._TrnCollectionLines;
			}
			set
			{
				this._TrnCollectionLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnCollection_TrnJournal", Storage="_TrnJournals", ThisKey="Id", OtherKey="ORId")]
		public EntitySet<TrnJournal> TrnJournals
		{
			get
			{
				return this._TrnJournals;
			}
			set
			{
				this._TrnJournals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnCollection", Storage="_MstArticle", ThisKey="CustomerId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.TrnCollections.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.TrnCollections.Add(this);
						this._CustomerId = value.Id;
					}
					else
					{
						this._CustomerId = default(long);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnCollection", Storage="_MstBranch", ThisKey="BranchId", OtherKey="Id", IsForeignKey=true)]
		public MstBranch MstBranch
		{
			get
			{
				return this._MstBranch.Entity;
			}
			set
			{
				MstBranch previousValue = this._MstBranch.Entity;
				if (((previousValue != value) 
							|| (this._MstBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBranch.Entity = null;
						previousValue.TrnCollections.Remove(this);
					}
					this._MstBranch.Entity = value;
					if ((value != null))
					{
						value.TrnCollections.Add(this);
						this._BranchId = value.Id;
					}
					else
					{
						this._BranchId = default(long);
					}
					this.SendPropertyChanged("MstBranch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_TrnCollection", Storage="_MstPeriod", ThisKey="PeriodId", OtherKey="Id", IsForeignKey=true)]
		public MstPeriod MstPeriod
		{
			get
			{
				return this._MstPeriod.Entity;
			}
			set
			{
				MstPeriod previousValue = this._MstPeriod.Entity;
				if (((previousValue != value) 
							|| (this._MstPeriod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPeriod.Entity = null;
						previousValue.TrnCollections.Remove(this);
					}
					this._MstPeriod.Entity = value;
					if ((value != null))
					{
						value.TrnCollections.Add(this);
						this._PeriodId = value.Id;
					}
					else
					{
						this._PeriodId = default(long);
					}
					this.SendPropertyChanged("MstPeriod");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnCollection", Storage="_MstUser", ThisKey="PreparedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.TrnCollections.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.TrnCollections.Add(this);
						this._PreparedById = value.Id;
					}
					else
					{
						this._PreparedById = default(long);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnCollection1", Storage="_MstUser1", ThisKey="CheckedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.TrnCollections1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.TrnCollections1.Add(this);
						this._CheckedById = value.Id;
					}
					else
					{
						this._CheckedById = default(long);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnCollection2", Storage="_MstUser2", ThisKey="ApprovedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.TrnCollections2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.TrnCollections2.Add(this);
						this._ApprovedById = value.Id;
					}
					else
					{
						this._ApprovedById = default(long);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnCollection3", Storage="_MstUser3", ThisKey="CreatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser3
		{
			get
			{
				return this._MstUser3.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser3.Entity;
				if (((previousValue != value) 
							|| (this._MstUser3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser3.Entity = null;
						previousValue.TrnCollections3.Remove(this);
					}
					this._MstUser3.Entity = value;
					if ((value != null))
					{
						value.TrnCollections3.Add(this);
						this._CreatedById = value.Id;
					}
					else
					{
						this._CreatedById = default(long);
					}
					this.SendPropertyChanged("MstUser3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnCollection4", Storage="_MstUser4", ThisKey="UpdatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser4
		{
			get
			{
				return this._MstUser4.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser4.Entity;
				if (((previousValue != value) 
							|| (this._MstUser4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser4.Entity = null;
						previousValue.TrnCollections4.Remove(this);
					}
					this._MstUser4.Entity = value;
					if ((value != null))
					{
						value.TrnCollections4.Add(this);
						this._UpdatedById = value.Id;
					}
					else
					{
						this._UpdatedById = default(long);
					}
					this.SendPropertyChanged("MstUser4");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnBanks(TrnBank entity)
		{
			this.SendPropertyChanging();
			entity.TrnCollection = this;
		}
		
		private void detach_TrnBanks(TrnBank entity)
		{
			this.SendPropertyChanging();
			entity.TrnCollection = null;
		}
		
		private void attach_TrnCollectionLines(TrnCollectionLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnCollection = this;
		}
		
		private void detach_TrnCollectionLines(TrnCollectionLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnCollection = null;
		}
		
		private void attach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.TrnCollection = this;
		}
		
		private void detach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.TrnCollection = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnCollectionLine")]
	public partial class TrnCollectionLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _ORId;
		
		private long _AccountId;
		
		private System.Nullable<long> _SIId;
		
		private string _Particulars;
		
		private decimal _Amount;
		
		private long _PayTypeId;
		
		private string _CheckNumber;
		
		private System.DateTime _CheckDate;
		
		private string _CheckBank;
		
		private System.Nullable<long> _BankId;
		
		private EntityRef<MstAccount> _MstAccount;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstPayType> _MstPayType;
		
		private EntityRef<TrnCollection> _TrnCollection;
		
		private EntityRef<TrnSalesInvoice> _TrnSalesInvoice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnORIdChanging(long value);
    partial void OnORIdChanged();
    partial void OnAccountIdChanging(long value);
    partial void OnAccountIdChanged();
    partial void OnSIIdChanging(System.Nullable<long> value);
    partial void OnSIIdChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnPayTypeIdChanging(long value);
    partial void OnPayTypeIdChanged();
    partial void OnCheckNumberChanging(string value);
    partial void OnCheckNumberChanged();
    partial void OnCheckDateChanging(System.DateTime value);
    partial void OnCheckDateChanged();
    partial void OnCheckBankChanging(string value);
    partial void OnCheckBankChanged();
    partial void OnBankIdChanging(System.Nullable<long> value);
    partial void OnBankIdChanged();
    #endregion
		
		public TrnCollectionLine()
		{
			this._MstAccount = default(EntityRef<MstAccount>);
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstPayType = default(EntityRef<MstPayType>);
			this._TrnCollection = default(EntityRef<TrnCollection>);
			this._TrnSalesInvoice = default(EntityRef<TrnSalesInvoice>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORId", DbType="BigInt NOT NULL")]
		public long ORId
		{
			get
			{
				return this._ORId;
			}
			set
			{
				if ((this._ORId != value))
				{
					if (this._TrnCollection.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnORIdChanging(value);
					this.SendPropertyChanging();
					this._ORId = value;
					this.SendPropertyChanged("ORId");
					this.OnORIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="BigInt NOT NULL")]
		public long AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._MstAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIId", DbType="BigInt")]
		public System.Nullable<long> SIId
		{
			get
			{
				return this._SIId;
			}
			set
			{
				if ((this._SIId != value))
				{
					if (this._TrnSalesInvoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSIIdChanging(value);
					this.SendPropertyChanging();
					this._SIId = value;
					this.SendPropertyChanged("SIId");
					this.OnSIIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayTypeId", DbType="BigInt NOT NULL")]
		public long PayTypeId
		{
			get
			{
				return this._PayTypeId;
			}
			set
			{
				if ((this._PayTypeId != value))
				{
					if (this._MstPayType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PayTypeId = value;
					this.SendPropertyChanged("PayTypeId");
					this.OnPayTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CheckNumber
		{
			get
			{
				return this._CheckNumber;
			}
			set
			{
				if ((this._CheckNumber != value))
				{
					this.OnCheckNumberChanging(value);
					this.SendPropertyChanging();
					this._CheckNumber = value;
					this.SendPropertyChanged("CheckNumber");
					this.OnCheckNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckDate", DbType="DateTime NOT NULL")]
		public System.DateTime CheckDate
		{
			get
			{
				return this._CheckDate;
			}
			set
			{
				if ((this._CheckDate != value))
				{
					this.OnCheckDateChanging(value);
					this.SendPropertyChanging();
					this._CheckDate = value;
					this.SendPropertyChanged("CheckDate");
					this.OnCheckDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckBank", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string CheckBank
		{
			get
			{
				return this._CheckBank;
			}
			set
			{
				if ((this._CheckBank != value))
				{
					this.OnCheckBankChanging(value);
					this.SendPropertyChanging();
					this._CheckBank = value;
					this.SendPropertyChanged("CheckBank");
					this.OnCheckBankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankId", DbType="BigInt")]
		public System.Nullable<long> BankId
		{
			get
			{
				return this._BankId;
			}
			set
			{
				if ((this._BankId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankIdChanging(value);
					this.SendPropertyChanging();
					this._BankId = value;
					this.SendPropertyChanged("BankId");
					this.OnBankIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_TrnCollectionLine", Storage="_MstAccount", ThisKey="AccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount
		{
			get
			{
				return this._MstAccount.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount.Entity = null;
						previousValue.TrnCollectionLines.Remove(this);
					}
					this._MstAccount.Entity = value;
					if ((value != null))
					{
						value.TrnCollectionLines.Add(this);
						this._AccountId = value.Id;
					}
					else
					{
						this._AccountId = default(long);
					}
					this.SendPropertyChanged("MstAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnCollectionLine", Storage="_MstArticle", ThisKey="BankId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.TrnCollectionLines.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.TrnCollectionLines.Add(this);
						this._BankId = value.Id;
					}
					else
					{
						this._BankId = default(Nullable<long>);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPayType_TrnCollectionLine", Storage="_MstPayType", ThisKey="PayTypeId", OtherKey="Id", IsForeignKey=true)]
		public MstPayType MstPayType
		{
			get
			{
				return this._MstPayType.Entity;
			}
			set
			{
				MstPayType previousValue = this._MstPayType.Entity;
				if (((previousValue != value) 
							|| (this._MstPayType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPayType.Entity = null;
						previousValue.TrnCollectionLines.Remove(this);
					}
					this._MstPayType.Entity = value;
					if ((value != null))
					{
						value.TrnCollectionLines.Add(this);
						this._PayTypeId = value.Id;
					}
					else
					{
						this._PayTypeId = default(long);
					}
					this.SendPropertyChanged("MstPayType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnCollection_TrnCollectionLine", Storage="_TrnCollection", ThisKey="ORId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TrnCollection TrnCollection
		{
			get
			{
				return this._TrnCollection.Entity;
			}
			set
			{
				TrnCollection previousValue = this._TrnCollection.Entity;
				if (((previousValue != value) 
							|| (this._TrnCollection.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnCollection.Entity = null;
						previousValue.TrnCollectionLines.Remove(this);
					}
					this._TrnCollection.Entity = value;
					if ((value != null))
					{
						value.TrnCollectionLines.Add(this);
						this._ORId = value.Id;
					}
					else
					{
						this._ORId = default(long);
					}
					this.SendPropertyChanged("TrnCollection");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSalesInvoice_TrnCollectionLine", Storage="_TrnSalesInvoice", ThisKey="SIId", OtherKey="Id", IsForeignKey=true)]
		public TrnSalesInvoice TrnSalesInvoice
		{
			get
			{
				return this._TrnSalesInvoice.Entity;
			}
			set
			{
				TrnSalesInvoice previousValue = this._TrnSalesInvoice.Entity;
				if (((previousValue != value) 
							|| (this._TrnSalesInvoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnSalesInvoice.Entity = null;
						previousValue.TrnCollectionLines.Remove(this);
					}
					this._TrnSalesInvoice.Entity = value;
					if ((value != null))
					{
						value.TrnCollectionLines.Add(this);
						this._SIId = value.Id;
					}
					else
					{
						this._SIId = default(Nullable<long>);
					}
					this.SendPropertyChanged("TrnSalesInvoice");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnDisbursement")]
	public partial class TrnDisbursement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _PeriodId;
		
		private long _BranchId;
		
		private string _CVNumber;
		
		private string _CVManualNumber;
		
		private System.DateTime _CVDate;
		
		private string _Particulars;
		
		private long _SupplierId;
		
		private long _BankId;
		
		private long _PayTypeId;
		
		private string _CheckNumber;
		
		private System.DateTime _CheckDate;
		
		private string _CheckPayee;
		
		private decimal _TotalAmount;
		
		private bool _IsCleared;
		
		private System.DateTime _DateCleared;
		
		private bool _IsPrinted;
		
		private long _PreparedById;
		
		private long _CheckedById;
		
		private long _ApprovedById;
		
		private bool _IsLocked;
		
		private long _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private long _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<TrnBank> _TrnBanks;
		
		private EntitySet<TrnDisbursementLine> _TrnDisbursementLines;
		
		private EntitySet<TrnJournal> _TrnJournals;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstArticle> _MstArticle1;
		
		private EntityRef<MstBranch> _MstBranch;
		
		private EntityRef<MstPayType> _MstPayType;
		
		private EntityRef<MstPeriod> _MstPeriod;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
		private EntityRef<MstUser> _MstUser3;
		
		private EntityRef<MstUser> _MstUser4;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnPeriodIdChanging(long value);
    partial void OnPeriodIdChanged();
    partial void OnBranchIdChanging(long value);
    partial void OnBranchIdChanged();
    partial void OnCVNumberChanging(string value);
    partial void OnCVNumberChanged();
    partial void OnCVManualNumberChanging(string value);
    partial void OnCVManualNumberChanged();
    partial void OnCVDateChanging(System.DateTime value);
    partial void OnCVDateChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnSupplierIdChanging(long value);
    partial void OnSupplierIdChanged();
    partial void OnBankIdChanging(long value);
    partial void OnBankIdChanged();
    partial void OnPayTypeIdChanging(long value);
    partial void OnPayTypeIdChanged();
    partial void OnCheckNumberChanging(string value);
    partial void OnCheckNumberChanged();
    partial void OnCheckDateChanging(System.DateTime value);
    partial void OnCheckDateChanged();
    partial void OnCheckPayeeChanging(string value);
    partial void OnCheckPayeeChanged();
    partial void OnTotalAmountChanging(decimal value);
    partial void OnTotalAmountChanged();
    partial void OnIsClearedChanging(bool value);
    partial void OnIsClearedChanged();
    partial void OnDateClearedChanging(System.DateTime value);
    partial void OnDateClearedChanged();
    partial void OnIsPrintedChanging(bool value);
    partial void OnIsPrintedChanged();
    partial void OnPreparedByIdChanging(long value);
    partial void OnPreparedByIdChanged();
    partial void OnCheckedByIdChanging(long value);
    partial void OnCheckedByIdChanged();
    partial void OnApprovedByIdChanging(long value);
    partial void OnApprovedByIdChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(long value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(long value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public TrnDisbursement()
		{
			this._TrnBanks = new EntitySet<TrnBank>(new Action<TrnBank>(this.attach_TrnBanks), new Action<TrnBank>(this.detach_TrnBanks));
			this._TrnDisbursementLines = new EntitySet<TrnDisbursementLine>(new Action<TrnDisbursementLine>(this.attach_TrnDisbursementLines), new Action<TrnDisbursementLine>(this.detach_TrnDisbursementLines));
			this._TrnJournals = new EntitySet<TrnJournal>(new Action<TrnJournal>(this.attach_TrnJournals), new Action<TrnJournal>(this.detach_TrnJournals));
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstArticle1 = default(EntityRef<MstArticle>);
			this._MstBranch = default(EntityRef<MstBranch>);
			this._MstPayType = default(EntityRef<MstPayType>);
			this._MstPeriod = default(EntityRef<MstPeriod>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			this._MstUser3 = default(EntityRef<MstUser>);
			this._MstUser4 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodId", DbType="BigInt NOT NULL")]
		public long PeriodId
		{
			get
			{
				return this._PeriodId;
			}
			set
			{
				if ((this._PeriodId != value))
				{
					if (this._MstPeriod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPeriodIdChanging(value);
					this.SendPropertyChanging();
					this._PeriodId = value;
					this.SendPropertyChanged("PeriodId");
					this.OnPeriodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="BigInt NOT NULL")]
		public long BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._MstBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CVNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CVNumber
		{
			get
			{
				return this._CVNumber;
			}
			set
			{
				if ((this._CVNumber != value))
				{
					this.OnCVNumberChanging(value);
					this.SendPropertyChanging();
					this._CVNumber = value;
					this.SendPropertyChanged("CVNumber");
					this.OnCVNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CVManualNumber", DbType="NVarChar(50)")]
		public string CVManualNumber
		{
			get
			{
				return this._CVManualNumber;
			}
			set
			{
				if ((this._CVManualNumber != value))
				{
					this.OnCVManualNumberChanging(value);
					this.SendPropertyChanging();
					this._CVManualNumber = value;
					this.SendPropertyChanged("CVManualNumber");
					this.OnCVManualNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CVDate", DbType="DateTime NOT NULL")]
		public System.DateTime CVDate
		{
			get
			{
				return this._CVDate;
			}
			set
			{
				if ((this._CVDate != value))
				{
					this.OnCVDateChanging(value);
					this.SendPropertyChanging();
					this._CVDate = value;
					this.SendPropertyChanged("CVDate");
					this.OnCVDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierId", DbType="BigInt NOT NULL")]
		public long SupplierId
		{
			get
			{
				return this._SupplierId;
			}
			set
			{
				if ((this._SupplierId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIdChanging(value);
					this.SendPropertyChanging();
					this._SupplierId = value;
					this.SendPropertyChanged("SupplierId");
					this.OnSupplierIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankId", DbType="BigInt NOT NULL")]
		public long BankId
		{
			get
			{
				return this._BankId;
			}
			set
			{
				if ((this._BankId != value))
				{
					if (this._MstArticle1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankIdChanging(value);
					this.SendPropertyChanging();
					this._BankId = value;
					this.SendPropertyChanged("BankId");
					this.OnBankIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayTypeId", DbType="BigInt NOT NULL")]
		public long PayTypeId
		{
			get
			{
				return this._PayTypeId;
			}
			set
			{
				if ((this._PayTypeId != value))
				{
					if (this._MstPayType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PayTypeId = value;
					this.SendPropertyChanged("PayTypeId");
					this.OnPayTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckNumber", DbType="NVarChar(50)")]
		public string CheckNumber
		{
			get
			{
				return this._CheckNumber;
			}
			set
			{
				if ((this._CheckNumber != value))
				{
					this.OnCheckNumberChanging(value);
					this.SendPropertyChanging();
					this._CheckNumber = value;
					this.SendPropertyChanged("CheckNumber");
					this.OnCheckNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckDate", DbType="DateTime NOT NULL")]
		public System.DateTime CheckDate
		{
			get
			{
				return this._CheckDate;
			}
			set
			{
				if ((this._CheckDate != value))
				{
					this.OnCheckDateChanging(value);
					this.SendPropertyChanging();
					this._CheckDate = value;
					this.SendPropertyChanged("CheckDate");
					this.OnCheckDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckPayee", DbType="NVarChar(255)")]
		public string CheckPayee
		{
			get
			{
				return this._CheckPayee;
			}
			set
			{
				if ((this._CheckPayee != value))
				{
					this.OnCheckPayeeChanging(value);
					this.SendPropertyChanging();
					this._CheckPayee = value;
					this.SendPropertyChanged("CheckPayee");
					this.OnCheckPayeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this.OnTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalAmount = value;
					this.SendPropertyChanged("TotalAmount");
					this.OnTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCleared", DbType="Bit NOT NULL")]
		public bool IsCleared
		{
			get
			{
				return this._IsCleared;
			}
			set
			{
				if ((this._IsCleared != value))
				{
					this.OnIsClearedChanging(value);
					this.SendPropertyChanging();
					this._IsCleared = value;
					this.SendPropertyChanged("IsCleared");
					this.OnIsClearedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCleared", DbType="DateTime NOT NULL")]
		public System.DateTime DateCleared
		{
			get
			{
				return this._DateCleared;
			}
			set
			{
				if ((this._DateCleared != value))
				{
					this.OnDateClearedChanging(value);
					this.SendPropertyChanging();
					this._DateCleared = value;
					this.SendPropertyChanged("DateCleared");
					this.OnDateClearedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPrinted", DbType="Bit NOT NULL")]
		public bool IsPrinted
		{
			get
			{
				return this._IsPrinted;
			}
			set
			{
				if ((this._IsPrinted != value))
				{
					this.OnIsPrintedChanging(value);
					this.SendPropertyChanging();
					this._IsPrinted = value;
					this.SendPropertyChanged("IsPrinted");
					this.OnIsPrintedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedById", DbType="BigInt NOT NULL")]
		public long PreparedById
		{
			get
			{
				return this._PreparedById;
			}
			set
			{
				if ((this._PreparedById != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreparedByIdChanging(value);
					this.SendPropertyChanging();
					this._PreparedById = value;
					this.SendPropertyChanged("PreparedById");
					this.OnPreparedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedById", DbType="BigInt NOT NULL")]
		public long CheckedById
		{
			get
			{
				return this._CheckedById;
			}
			set
			{
				if ((this._CheckedById != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckedByIdChanging(value);
					this.SendPropertyChanging();
					this._CheckedById = value;
					this.SendPropertyChanged("CheckedById");
					this.OnCheckedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedById", DbType="BigInt NOT NULL")]
		public long ApprovedById
		{
			get
			{
				return this._ApprovedById;
			}
			set
			{
				if ((this._ApprovedById != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApprovedByIdChanging(value);
					this.SendPropertyChanging();
					this._ApprovedById = value;
					this.SendPropertyChanged("ApprovedById");
					this.OnApprovedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="BigInt NOT NULL")]
		public long CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					if (this._MstUser3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="BigInt NOT NULL")]
		public long UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					if (this._MstUser4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnDisbursement_TrnBank", Storage="_TrnBanks", ThisKey="Id", OtherKey="CVId")]
		public EntitySet<TrnBank> TrnBanks
		{
			get
			{
				return this._TrnBanks;
			}
			set
			{
				this._TrnBanks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnDisbursement_TrnDisbursementLine", Storage="_TrnDisbursementLines", ThisKey="Id", OtherKey="CVId")]
		public EntitySet<TrnDisbursementLine> TrnDisbursementLines
		{
			get
			{
				return this._TrnDisbursementLines;
			}
			set
			{
				this._TrnDisbursementLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnDisbursement_TrnJournal", Storage="_TrnJournals", ThisKey="Id", OtherKey="CVId")]
		public EntitySet<TrnJournal> TrnJournals
		{
			get
			{
				return this._TrnJournals;
			}
			set
			{
				this._TrnJournals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnDisbursement", Storage="_MstArticle", ThisKey="SupplierId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.TrnDisbursements.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.TrnDisbursements.Add(this);
						this._SupplierId = value.Id;
					}
					else
					{
						this._SupplierId = default(long);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnDisbursement1", Storage="_MstArticle1", ThisKey="BankId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle1
		{
			get
			{
				return this._MstArticle1.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle1.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle1.Entity = null;
						previousValue.TrnDisbursements1.Remove(this);
					}
					this._MstArticle1.Entity = value;
					if ((value != null))
					{
						value.TrnDisbursements1.Add(this);
						this._BankId = value.Id;
					}
					else
					{
						this._BankId = default(long);
					}
					this.SendPropertyChanged("MstArticle1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnDisbursement", Storage="_MstBranch", ThisKey="BranchId", OtherKey="Id", IsForeignKey=true)]
		public MstBranch MstBranch
		{
			get
			{
				return this._MstBranch.Entity;
			}
			set
			{
				MstBranch previousValue = this._MstBranch.Entity;
				if (((previousValue != value) 
							|| (this._MstBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBranch.Entity = null;
						previousValue.TrnDisbursements.Remove(this);
					}
					this._MstBranch.Entity = value;
					if ((value != null))
					{
						value.TrnDisbursements.Add(this);
						this._BranchId = value.Id;
					}
					else
					{
						this._BranchId = default(long);
					}
					this.SendPropertyChanged("MstBranch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPayType_TrnDisbursement", Storage="_MstPayType", ThisKey="PayTypeId", OtherKey="Id", IsForeignKey=true)]
		public MstPayType MstPayType
		{
			get
			{
				return this._MstPayType.Entity;
			}
			set
			{
				MstPayType previousValue = this._MstPayType.Entity;
				if (((previousValue != value) 
							|| (this._MstPayType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPayType.Entity = null;
						previousValue.TrnDisbursements.Remove(this);
					}
					this._MstPayType.Entity = value;
					if ((value != null))
					{
						value.TrnDisbursements.Add(this);
						this._PayTypeId = value.Id;
					}
					else
					{
						this._PayTypeId = default(long);
					}
					this.SendPropertyChanged("MstPayType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_TrnDisbursement", Storage="_MstPeriod", ThisKey="PeriodId", OtherKey="Id", IsForeignKey=true)]
		public MstPeriod MstPeriod
		{
			get
			{
				return this._MstPeriod.Entity;
			}
			set
			{
				MstPeriod previousValue = this._MstPeriod.Entity;
				if (((previousValue != value) 
							|| (this._MstPeriod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPeriod.Entity = null;
						previousValue.TrnDisbursements.Remove(this);
					}
					this._MstPeriod.Entity = value;
					if ((value != null))
					{
						value.TrnDisbursements.Add(this);
						this._PeriodId = value.Id;
					}
					else
					{
						this._PeriodId = default(long);
					}
					this.SendPropertyChanged("MstPeriod");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnDisbursement", Storage="_MstUser", ThisKey="PreparedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.TrnDisbursements.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.TrnDisbursements.Add(this);
						this._PreparedById = value.Id;
					}
					else
					{
						this._PreparedById = default(long);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnDisbursement1", Storage="_MstUser1", ThisKey="CheckedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.TrnDisbursements1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.TrnDisbursements1.Add(this);
						this._CheckedById = value.Id;
					}
					else
					{
						this._CheckedById = default(long);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnDisbursement2", Storage="_MstUser2", ThisKey="ApprovedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.TrnDisbursements2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.TrnDisbursements2.Add(this);
						this._ApprovedById = value.Id;
					}
					else
					{
						this._ApprovedById = default(long);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnDisbursement3", Storage="_MstUser3", ThisKey="CreatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser3
		{
			get
			{
				return this._MstUser3.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser3.Entity;
				if (((previousValue != value) 
							|| (this._MstUser3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser3.Entity = null;
						previousValue.TrnDisbursements3.Remove(this);
					}
					this._MstUser3.Entity = value;
					if ((value != null))
					{
						value.TrnDisbursements3.Add(this);
						this._CreatedById = value.Id;
					}
					else
					{
						this._CreatedById = default(long);
					}
					this.SendPropertyChanged("MstUser3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnDisbursement4", Storage="_MstUser4", ThisKey="UpdatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser4
		{
			get
			{
				return this._MstUser4.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser4.Entity;
				if (((previousValue != value) 
							|| (this._MstUser4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser4.Entity = null;
						previousValue.TrnDisbursements4.Remove(this);
					}
					this._MstUser4.Entity = value;
					if ((value != null))
					{
						value.TrnDisbursements4.Add(this);
						this._UpdatedById = value.Id;
					}
					else
					{
						this._UpdatedById = default(long);
					}
					this.SendPropertyChanged("MstUser4");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnBanks(TrnBank entity)
		{
			this.SendPropertyChanging();
			entity.TrnDisbursement = this;
		}
		
		private void detach_TrnBanks(TrnBank entity)
		{
			this.SendPropertyChanging();
			entity.TrnDisbursement = null;
		}
		
		private void attach_TrnDisbursementLines(TrnDisbursementLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnDisbursement = this;
		}
		
		private void detach_TrnDisbursementLines(TrnDisbursementLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnDisbursement = null;
		}
		
		private void attach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.TrnDisbursement = this;
		}
		
		private void detach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.TrnDisbursement = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnDisbursementLine")]
	public partial class TrnDisbursementLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _CVId;
		
		private long _AccountId;
		
		private System.Nullable<long> _PIId;
		
		private string _Particulars;
		
		private decimal _Amount;
		
		private long _BranchId;
		
		private EntityRef<MstAccount> _MstAccount;
		
		private EntityRef<MstBranch> _MstBranch;
		
		private EntityRef<TrnDisbursement> _TrnDisbursement;
		
		private EntityRef<TrnPurchaseInvoice> _TrnPurchaseInvoice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCVIdChanging(long value);
    partial void OnCVIdChanged();
    partial void OnAccountIdChanging(long value);
    partial void OnAccountIdChanged();
    partial void OnPIIdChanging(System.Nullable<long> value);
    partial void OnPIIdChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnBranchIdChanging(long value);
    partial void OnBranchIdChanged();
    #endregion
		
		public TrnDisbursementLine()
		{
			this._MstAccount = default(EntityRef<MstAccount>);
			this._MstBranch = default(EntityRef<MstBranch>);
			this._TrnDisbursement = default(EntityRef<TrnDisbursement>);
			this._TrnPurchaseInvoice = default(EntityRef<TrnPurchaseInvoice>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CVId", DbType="BigInt NOT NULL")]
		public long CVId
		{
			get
			{
				return this._CVId;
			}
			set
			{
				if ((this._CVId != value))
				{
					if (this._TrnDisbursement.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCVIdChanging(value);
					this.SendPropertyChanging();
					this._CVId = value;
					this.SendPropertyChanged("CVId");
					this.OnCVIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="BigInt NOT NULL")]
		public long AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._MstAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PIId", DbType="BigInt")]
		public System.Nullable<long> PIId
		{
			get
			{
				return this._PIId;
			}
			set
			{
				if ((this._PIId != value))
				{
					if (this._TrnPurchaseInvoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPIIdChanging(value);
					this.SendPropertyChanging();
					this._PIId = value;
					this.SendPropertyChanged("PIId");
					this.OnPIIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="BigInt NOT NULL")]
		public long BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._MstBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_TrnDisbursementLine", Storage="_MstAccount", ThisKey="AccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount
		{
			get
			{
				return this._MstAccount.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount.Entity = null;
						previousValue.TrnDisbursementLines.Remove(this);
					}
					this._MstAccount.Entity = value;
					if ((value != null))
					{
						value.TrnDisbursementLines.Add(this);
						this._AccountId = value.Id;
					}
					else
					{
						this._AccountId = default(long);
					}
					this.SendPropertyChanged("MstAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnDisbursementLine", Storage="_MstBranch", ThisKey="BranchId", OtherKey="Id", IsForeignKey=true)]
		public MstBranch MstBranch
		{
			get
			{
				return this._MstBranch.Entity;
			}
			set
			{
				MstBranch previousValue = this._MstBranch.Entity;
				if (((previousValue != value) 
							|| (this._MstBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBranch.Entity = null;
						previousValue.TrnDisbursementLines.Remove(this);
					}
					this._MstBranch.Entity = value;
					if ((value != null))
					{
						value.TrnDisbursementLines.Add(this);
						this._BranchId = value.Id;
					}
					else
					{
						this._BranchId = default(long);
					}
					this.SendPropertyChanged("MstBranch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnDisbursement_TrnDisbursementLine", Storage="_TrnDisbursement", ThisKey="CVId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TrnDisbursement TrnDisbursement
		{
			get
			{
				return this._TrnDisbursement.Entity;
			}
			set
			{
				TrnDisbursement previousValue = this._TrnDisbursement.Entity;
				if (((previousValue != value) 
							|| (this._TrnDisbursement.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnDisbursement.Entity = null;
						previousValue.TrnDisbursementLines.Remove(this);
					}
					this._TrnDisbursement.Entity = value;
					if ((value != null))
					{
						value.TrnDisbursementLines.Add(this);
						this._CVId = value.Id;
					}
					else
					{
						this._CVId = default(long);
					}
					this.SendPropertyChanged("TrnDisbursement");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnPurchaseInvoice_TrnDisbursementLine", Storage="_TrnPurchaseInvoice", ThisKey="PIId", OtherKey="Id", IsForeignKey=true)]
		public TrnPurchaseInvoice TrnPurchaseInvoice
		{
			get
			{
				return this._TrnPurchaseInvoice.Entity;
			}
			set
			{
				TrnPurchaseInvoice previousValue = this._TrnPurchaseInvoice.Entity;
				if (((previousValue != value) 
							|| (this._TrnPurchaseInvoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnPurchaseInvoice.Entity = null;
						previousValue.TrnDisbursementLines.Remove(this);
					}
					this._TrnPurchaseInvoice.Entity = value;
					if ((value != null))
					{
						value.TrnDisbursementLines.Add(this);
						this._PIId = value.Id;
					}
					else
					{
						this._PIId = default(Nullable<long>);
					}
					this.SendPropertyChanged("TrnPurchaseInvoice");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnInventory")]
	public partial class TrnInventory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _INId;
		
		private System.Nullable<long> _OTId;
		
		private System.Nullable<long> _STId;
		
		private long _PeriodId;
		
		private System.DateTime _InventoryDate;
		
		private long _BranchId;
		
		private long _ItemId;
		
		private long _ItemInventoryId;
		
		private string _Particulars;
		
		private long _UnitId;
		
		private decimal _Cost;
		
		private decimal _QuantityIn;
		
		private decimal _QuantityOut;
		
		private decimal _Quantity;
		
		private decimal _Amount;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstArticleItemInventory> _MstArticleItemInventory;
		
		private EntityRef<MstBranch> _MstBranch;
		
		private EntityRef<MstPeriod> _MstPeriod;
		
		private EntityRef<MstUnit> _MstUnit;
		
		private EntityRef<TrnStockIn> _TrnStockIn;
		
		private EntityRef<TrnStockOut> _TrnStockOut;
		
		private EntityRef<TrnStockTransfer> _TrnStockTransfer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnINIdChanging(System.Nullable<long> value);
    partial void OnINIdChanged();
    partial void OnOTIdChanging(System.Nullable<long> value);
    partial void OnOTIdChanged();
    partial void OnSTIdChanging(System.Nullable<long> value);
    partial void OnSTIdChanged();
    partial void OnPeriodIdChanging(long value);
    partial void OnPeriodIdChanged();
    partial void OnInventoryDateChanging(System.DateTime value);
    partial void OnInventoryDateChanged();
    partial void OnBranchIdChanging(long value);
    partial void OnBranchIdChanged();
    partial void OnItemIdChanging(long value);
    partial void OnItemIdChanged();
    partial void OnItemInventoryIdChanging(long value);
    partial void OnItemInventoryIdChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnUnitIdChanging(long value);
    partial void OnUnitIdChanged();
    partial void OnCostChanging(decimal value);
    partial void OnCostChanged();
    partial void OnQuantityInChanging(decimal value);
    partial void OnQuantityInChanged();
    partial void OnQuantityOutChanging(decimal value);
    partial void OnQuantityOutChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    #endregion
		
		public TrnInventory()
		{
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstArticleItemInventory = default(EntityRef<MstArticleItemInventory>);
			this._MstBranch = default(EntityRef<MstBranch>);
			this._MstPeriod = default(EntityRef<MstPeriod>);
			this._MstUnit = default(EntityRef<MstUnit>);
			this._TrnStockIn = default(EntityRef<TrnStockIn>);
			this._TrnStockOut = default(EntityRef<TrnStockOut>);
			this._TrnStockTransfer = default(EntityRef<TrnStockTransfer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INId", DbType="BigInt")]
		public System.Nullable<long> INId
		{
			get
			{
				return this._INId;
			}
			set
			{
				if ((this._INId != value))
				{
					if (this._TrnStockIn.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnINIdChanging(value);
					this.SendPropertyChanging();
					this._INId = value;
					this.SendPropertyChanged("INId");
					this.OnINIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OTId", DbType="BigInt")]
		public System.Nullable<long> OTId
		{
			get
			{
				return this._OTId;
			}
			set
			{
				if ((this._OTId != value))
				{
					if (this._TrnStockOut.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOTIdChanging(value);
					this.SendPropertyChanging();
					this._OTId = value;
					this.SendPropertyChanged("OTId");
					this.OnOTIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STId", DbType="BigInt")]
		public System.Nullable<long> STId
		{
			get
			{
				return this._STId;
			}
			set
			{
				if ((this._STId != value))
				{
					if (this._TrnStockTransfer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSTIdChanging(value);
					this.SendPropertyChanging();
					this._STId = value;
					this.SendPropertyChanged("STId");
					this.OnSTIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodId", DbType="BigInt NOT NULL")]
		public long PeriodId
		{
			get
			{
				return this._PeriodId;
			}
			set
			{
				if ((this._PeriodId != value))
				{
					if (this._MstPeriod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPeriodIdChanging(value);
					this.SendPropertyChanging();
					this._PeriodId = value;
					this.SendPropertyChanged("PeriodId");
					this.OnPeriodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryDate", DbType="DateTime NOT NULL")]
		public System.DateTime InventoryDate
		{
			get
			{
				return this._InventoryDate;
			}
			set
			{
				if ((this._InventoryDate != value))
				{
					this.OnInventoryDateChanging(value);
					this.SendPropertyChanging();
					this._InventoryDate = value;
					this.SendPropertyChanged("InventoryDate");
					this.OnInventoryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="BigInt NOT NULL")]
		public long BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._MstBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="BigInt NOT NULL")]
		public long ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemInventoryId", DbType="BigInt NOT NULL")]
		public long ItemInventoryId
		{
			get
			{
				return this._ItemInventoryId;
			}
			set
			{
				if ((this._ItemInventoryId != value))
				{
					if (this._MstArticleItemInventory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemInventoryIdChanging(value);
					this.SendPropertyChanging();
					this._ItemInventoryId = value;
					this.SendPropertyChanged("ItemInventoryId");
					this.OnItemInventoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="BigInt NOT NULL")]
		public long UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._MstUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(18,5) NOT NULL")]
		public decimal Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuantityIn", DbType="Decimal(18,5) NOT NULL")]
		public decimal QuantityIn
		{
			get
			{
				return this._QuantityIn;
			}
			set
			{
				if ((this._QuantityIn != value))
				{
					this.OnQuantityInChanging(value);
					this.SendPropertyChanging();
					this._QuantityIn = value;
					this.SendPropertyChanged("QuantityIn");
					this.OnQuantityInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuantityOut", DbType="Decimal(18,5) NOT NULL")]
		public decimal QuantityOut
		{
			get
			{
				return this._QuantityOut;
			}
			set
			{
				if ((this._QuantityOut != value))
				{
					this.OnQuantityOutChanging(value);
					this.SendPropertyChanging();
					this._QuantityOut = value;
					this.SendPropertyChanged("QuantityOut");
					this.OnQuantityOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnInventory", Storage="_MstArticle", ThisKey="ItemId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.TrnInventories.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.TrnInventories.Add(this);
						this._ItemId = value.Id;
					}
					else
					{
						this._ItemId = default(long);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleItemInventory_TrnInventory", Storage="_MstArticleItemInventory", ThisKey="ItemInventoryId", OtherKey="Id", IsForeignKey=true)]
		public MstArticleItemInventory MstArticleItemInventory
		{
			get
			{
				return this._MstArticleItemInventory.Entity;
			}
			set
			{
				MstArticleItemInventory previousValue = this._MstArticleItemInventory.Entity;
				if (((previousValue != value) 
							|| (this._MstArticleItemInventory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticleItemInventory.Entity = null;
						previousValue.TrnInventories.Remove(this);
					}
					this._MstArticleItemInventory.Entity = value;
					if ((value != null))
					{
						value.TrnInventories.Add(this);
						this._ItemInventoryId = value.Id;
					}
					else
					{
						this._ItemInventoryId = default(long);
					}
					this.SendPropertyChanged("MstArticleItemInventory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnInventory", Storage="_MstBranch", ThisKey="BranchId", OtherKey="Id", IsForeignKey=true)]
		public MstBranch MstBranch
		{
			get
			{
				return this._MstBranch.Entity;
			}
			set
			{
				MstBranch previousValue = this._MstBranch.Entity;
				if (((previousValue != value) 
							|| (this._MstBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBranch.Entity = null;
						previousValue.TrnInventories.Remove(this);
					}
					this._MstBranch.Entity = value;
					if ((value != null))
					{
						value.TrnInventories.Add(this);
						this._BranchId = value.Id;
					}
					else
					{
						this._BranchId = default(long);
					}
					this.SendPropertyChanged("MstBranch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_TrnInventory", Storage="_MstPeriod", ThisKey="PeriodId", OtherKey="Id", IsForeignKey=true)]
		public MstPeriod MstPeriod
		{
			get
			{
				return this._MstPeriod.Entity;
			}
			set
			{
				MstPeriod previousValue = this._MstPeriod.Entity;
				if (((previousValue != value) 
							|| (this._MstPeriod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPeriod.Entity = null;
						previousValue.TrnInventories.Remove(this);
					}
					this._MstPeriod.Entity = value;
					if ((value != null))
					{
						value.TrnInventories.Add(this);
						this._PeriodId = value.Id;
					}
					else
					{
						this._PeriodId = default(long);
					}
					this.SendPropertyChanged("MstPeriod");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnInventory", Storage="_MstUnit", ThisKey="UnitId", OtherKey="Id", IsForeignKey=true)]
		public MstUnit MstUnit
		{
			get
			{
				return this._MstUnit.Entity;
			}
			set
			{
				MstUnit previousValue = this._MstUnit.Entity;
				if (((previousValue != value) 
							|| (this._MstUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUnit.Entity = null;
						previousValue.TrnInventories.Remove(this);
					}
					this._MstUnit.Entity = value;
					if ((value != null))
					{
						value.TrnInventories.Add(this);
						this._UnitId = value.Id;
					}
					else
					{
						this._UnitId = default(long);
					}
					this.SendPropertyChanged("MstUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockIn_TrnInventory", Storage="_TrnStockIn", ThisKey="INId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public TrnStockIn TrnStockIn
		{
			get
			{
				return this._TrnStockIn.Entity;
			}
			set
			{
				TrnStockIn previousValue = this._TrnStockIn.Entity;
				if (((previousValue != value) 
							|| (this._TrnStockIn.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnStockIn.Entity = null;
						previousValue.TrnInventories.Remove(this);
					}
					this._TrnStockIn.Entity = value;
					if ((value != null))
					{
						value.TrnInventories.Add(this);
						this._INId = value.Id;
					}
					else
					{
						this._INId = default(Nullable<long>);
					}
					this.SendPropertyChanged("TrnStockIn");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockOut_TrnInventory", Storage="_TrnStockOut", ThisKey="OTId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public TrnStockOut TrnStockOut
		{
			get
			{
				return this._TrnStockOut.Entity;
			}
			set
			{
				TrnStockOut previousValue = this._TrnStockOut.Entity;
				if (((previousValue != value) 
							|| (this._TrnStockOut.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnStockOut.Entity = null;
						previousValue.TrnInventories.Remove(this);
					}
					this._TrnStockOut.Entity = value;
					if ((value != null))
					{
						value.TrnInventories.Add(this);
						this._OTId = value.Id;
					}
					else
					{
						this._OTId = default(Nullable<long>);
					}
					this.SendPropertyChanged("TrnStockOut");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockTransfer_TrnInventory", Storage="_TrnStockTransfer", ThisKey="STId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public TrnStockTransfer TrnStockTransfer
		{
			get
			{
				return this._TrnStockTransfer.Entity;
			}
			set
			{
				TrnStockTransfer previousValue = this._TrnStockTransfer.Entity;
				if (((previousValue != value) 
							|| (this._TrnStockTransfer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnStockTransfer.Entity = null;
						previousValue.TrnInventories.Remove(this);
					}
					this._TrnStockTransfer.Entity = value;
					if ((value != null))
					{
						value.TrnInventories.Add(this);
						this._STId = value.Id;
					}
					else
					{
						this._STId = default(Nullable<long>);
					}
					this.SendPropertyChanged("TrnStockTransfer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnJournal")]
	public partial class TrnJournal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _PIId;
		
		private System.Nullable<long> _CVId;
		
		private System.Nullable<long> _SIId;
		
		private System.Nullable<long> _ORId;
		
		private System.Nullable<long> _INId;
		
		private System.Nullable<long> _OTId;
		
		private System.Nullable<long> _STId;
		
		private System.Nullable<long> _JVId;
		
		private long _PeriodId;
		
		private System.DateTime _JournalDate;
		
		private long _BranchId;
		
		private long _AccountId;
		
		private System.Nullable<long> _ArticleId;
		
		private string _Particulars;
		
		private decimal _DebitAmount;
		
		private decimal _CreditAmount;
		
		private EntityRef<MstAccount> _MstAccount;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstBranch> _MstBranch;
		
		private EntityRef<MstPeriod> _MstPeriod;
		
		private EntityRef<TrnCollection> _TrnCollection;
		
		private EntityRef<TrnDisbursement> _TrnDisbursement;
		
		private EntityRef<TrnJournalVoucher> _TrnJournalVoucher;
		
		private EntityRef<TrnPurchaseInvoice> _TrnPurchaseInvoice;
		
		private EntityRef<TrnSalesInvoice> _TrnSalesInvoice;
		
		private EntityRef<TrnStockIn> _TrnStockIn;
		
		private EntityRef<TrnStockOut> _TrnStockOut;
		
		private EntityRef<TrnStockTransfer> _TrnStockTransfer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnPIIdChanging(System.Nullable<long> value);
    partial void OnPIIdChanged();
    partial void OnCVIdChanging(System.Nullable<long> value);
    partial void OnCVIdChanged();
    partial void OnSIIdChanging(System.Nullable<long> value);
    partial void OnSIIdChanged();
    partial void OnORIdChanging(System.Nullable<long> value);
    partial void OnORIdChanged();
    partial void OnINIdChanging(System.Nullable<long> value);
    partial void OnINIdChanged();
    partial void OnOTIdChanging(System.Nullable<long> value);
    partial void OnOTIdChanged();
    partial void OnSTIdChanging(System.Nullable<long> value);
    partial void OnSTIdChanged();
    partial void OnJVIdChanging(System.Nullable<long> value);
    partial void OnJVIdChanged();
    partial void OnPeriodIdChanging(long value);
    partial void OnPeriodIdChanged();
    partial void OnJournalDateChanging(System.DateTime value);
    partial void OnJournalDateChanged();
    partial void OnBranchIdChanging(long value);
    partial void OnBranchIdChanged();
    partial void OnAccountIdChanging(long value);
    partial void OnAccountIdChanged();
    partial void OnArticleIdChanging(System.Nullable<long> value);
    partial void OnArticleIdChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnDebitAmountChanging(decimal value);
    partial void OnDebitAmountChanged();
    partial void OnCreditAmountChanging(decimal value);
    partial void OnCreditAmountChanged();
    #endregion
		
		public TrnJournal()
		{
			this._MstAccount = default(EntityRef<MstAccount>);
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstBranch = default(EntityRef<MstBranch>);
			this._MstPeriod = default(EntityRef<MstPeriod>);
			this._TrnCollection = default(EntityRef<TrnCollection>);
			this._TrnDisbursement = default(EntityRef<TrnDisbursement>);
			this._TrnJournalVoucher = default(EntityRef<TrnJournalVoucher>);
			this._TrnPurchaseInvoice = default(EntityRef<TrnPurchaseInvoice>);
			this._TrnSalesInvoice = default(EntityRef<TrnSalesInvoice>);
			this._TrnStockIn = default(EntityRef<TrnStockIn>);
			this._TrnStockOut = default(EntityRef<TrnStockOut>);
			this._TrnStockTransfer = default(EntityRef<TrnStockTransfer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PIId", DbType="BigInt")]
		public System.Nullable<long> PIId
		{
			get
			{
				return this._PIId;
			}
			set
			{
				if ((this._PIId != value))
				{
					if (this._TrnPurchaseInvoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPIIdChanging(value);
					this.SendPropertyChanging();
					this._PIId = value;
					this.SendPropertyChanged("PIId");
					this.OnPIIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CVId", DbType="BigInt")]
		public System.Nullable<long> CVId
		{
			get
			{
				return this._CVId;
			}
			set
			{
				if ((this._CVId != value))
				{
					if (this._TrnDisbursement.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCVIdChanging(value);
					this.SendPropertyChanging();
					this._CVId = value;
					this.SendPropertyChanged("CVId");
					this.OnCVIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIId", DbType="BigInt")]
		public System.Nullable<long> SIId
		{
			get
			{
				return this._SIId;
			}
			set
			{
				if ((this._SIId != value))
				{
					if (this._TrnSalesInvoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSIIdChanging(value);
					this.SendPropertyChanging();
					this._SIId = value;
					this.SendPropertyChanged("SIId");
					this.OnSIIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORId", DbType="BigInt")]
		public System.Nullable<long> ORId
		{
			get
			{
				return this._ORId;
			}
			set
			{
				if ((this._ORId != value))
				{
					if (this._TrnCollection.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnORIdChanging(value);
					this.SendPropertyChanging();
					this._ORId = value;
					this.SendPropertyChanged("ORId");
					this.OnORIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INId", DbType="BigInt")]
		public System.Nullable<long> INId
		{
			get
			{
				return this._INId;
			}
			set
			{
				if ((this._INId != value))
				{
					if (this._TrnStockIn.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnINIdChanging(value);
					this.SendPropertyChanging();
					this._INId = value;
					this.SendPropertyChanged("INId");
					this.OnINIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OTId", DbType="BigInt")]
		public System.Nullable<long> OTId
		{
			get
			{
				return this._OTId;
			}
			set
			{
				if ((this._OTId != value))
				{
					if (this._TrnStockOut.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOTIdChanging(value);
					this.SendPropertyChanging();
					this._OTId = value;
					this.SendPropertyChanged("OTId");
					this.OnOTIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STId", DbType="BigInt")]
		public System.Nullable<long> STId
		{
			get
			{
				return this._STId;
			}
			set
			{
				if ((this._STId != value))
				{
					if (this._TrnStockTransfer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSTIdChanging(value);
					this.SendPropertyChanging();
					this._STId = value;
					this.SendPropertyChanged("STId");
					this.OnSTIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JVId", DbType="BigInt")]
		public System.Nullable<long> JVId
		{
			get
			{
				return this._JVId;
			}
			set
			{
				if ((this._JVId != value))
				{
					if (this._TrnJournalVoucher.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJVIdChanging(value);
					this.SendPropertyChanging();
					this._JVId = value;
					this.SendPropertyChanged("JVId");
					this.OnJVIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodId", DbType="BigInt NOT NULL")]
		public long PeriodId
		{
			get
			{
				return this._PeriodId;
			}
			set
			{
				if ((this._PeriodId != value))
				{
					if (this._MstPeriod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPeriodIdChanging(value);
					this.SendPropertyChanging();
					this._PeriodId = value;
					this.SendPropertyChanged("PeriodId");
					this.OnPeriodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalDate", DbType="DateTime NOT NULL")]
		public System.DateTime JournalDate
		{
			get
			{
				return this._JournalDate;
			}
			set
			{
				if ((this._JournalDate != value))
				{
					this.OnJournalDateChanging(value);
					this.SendPropertyChanging();
					this._JournalDate = value;
					this.SendPropertyChanged("JournalDate");
					this.OnJournalDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="BigInt NOT NULL")]
		public long BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._MstBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="BigInt NOT NULL")]
		public long AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._MstAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleId", DbType="BigInt")]
		public System.Nullable<long> ArticleId
		{
			get
			{
				return this._ArticleId;
			}
			set
			{
				if ((this._ArticleId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticleIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleId = value;
					this.SendPropertyChanged("ArticleId");
					this.OnArticleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DebitAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal DebitAmount
		{
			get
			{
				return this._DebitAmount;
			}
			set
			{
				if ((this._DebitAmount != value))
				{
					this.OnDebitAmountChanging(value);
					this.SendPropertyChanging();
					this._DebitAmount = value;
					this.SendPropertyChanged("DebitAmount");
					this.OnDebitAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal CreditAmount
		{
			get
			{
				return this._CreditAmount;
			}
			set
			{
				if ((this._CreditAmount != value))
				{
					this.OnCreditAmountChanging(value);
					this.SendPropertyChanging();
					this._CreditAmount = value;
					this.SendPropertyChanged("CreditAmount");
					this.OnCreditAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_TrnJournal", Storage="_MstAccount", ThisKey="AccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount
		{
			get
			{
				return this._MstAccount.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount.Entity = null;
						previousValue.TrnJournals.Remove(this);
					}
					this._MstAccount.Entity = value;
					if ((value != null))
					{
						value.TrnJournals.Add(this);
						this._AccountId = value.Id;
					}
					else
					{
						this._AccountId = default(long);
					}
					this.SendPropertyChanged("MstAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnJournal", Storage="_MstArticle", ThisKey="ArticleId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.TrnJournals.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.TrnJournals.Add(this);
						this._ArticleId = value.Id;
					}
					else
					{
						this._ArticleId = default(Nullable<long>);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnJournal", Storage="_MstBranch", ThisKey="BranchId", OtherKey="Id", IsForeignKey=true)]
		public MstBranch MstBranch
		{
			get
			{
				return this._MstBranch.Entity;
			}
			set
			{
				MstBranch previousValue = this._MstBranch.Entity;
				if (((previousValue != value) 
							|| (this._MstBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBranch.Entity = null;
						previousValue.TrnJournals.Remove(this);
					}
					this._MstBranch.Entity = value;
					if ((value != null))
					{
						value.TrnJournals.Add(this);
						this._BranchId = value.Id;
					}
					else
					{
						this._BranchId = default(long);
					}
					this.SendPropertyChanged("MstBranch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_TrnJournal", Storage="_MstPeriod", ThisKey="PeriodId", OtherKey="Id", IsForeignKey=true)]
		public MstPeriod MstPeriod
		{
			get
			{
				return this._MstPeriod.Entity;
			}
			set
			{
				MstPeriod previousValue = this._MstPeriod.Entity;
				if (((previousValue != value) 
							|| (this._MstPeriod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPeriod.Entity = null;
						previousValue.TrnJournals.Remove(this);
					}
					this._MstPeriod.Entity = value;
					if ((value != null))
					{
						value.TrnJournals.Add(this);
						this._PeriodId = value.Id;
					}
					else
					{
						this._PeriodId = default(long);
					}
					this.SendPropertyChanged("MstPeriod");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnCollection_TrnJournal", Storage="_TrnCollection", ThisKey="ORId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public TrnCollection TrnCollection
		{
			get
			{
				return this._TrnCollection.Entity;
			}
			set
			{
				TrnCollection previousValue = this._TrnCollection.Entity;
				if (((previousValue != value) 
							|| (this._TrnCollection.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnCollection.Entity = null;
						previousValue.TrnJournals.Remove(this);
					}
					this._TrnCollection.Entity = value;
					if ((value != null))
					{
						value.TrnJournals.Add(this);
						this._ORId = value.Id;
					}
					else
					{
						this._ORId = default(Nullable<long>);
					}
					this.SendPropertyChanged("TrnCollection");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnDisbursement_TrnJournal", Storage="_TrnDisbursement", ThisKey="CVId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public TrnDisbursement TrnDisbursement
		{
			get
			{
				return this._TrnDisbursement.Entity;
			}
			set
			{
				TrnDisbursement previousValue = this._TrnDisbursement.Entity;
				if (((previousValue != value) 
							|| (this._TrnDisbursement.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnDisbursement.Entity = null;
						previousValue.TrnJournals.Remove(this);
					}
					this._TrnDisbursement.Entity = value;
					if ((value != null))
					{
						value.TrnJournals.Add(this);
						this._CVId = value.Id;
					}
					else
					{
						this._CVId = default(Nullable<long>);
					}
					this.SendPropertyChanged("TrnDisbursement");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnJournalVoucher_TrnJournal", Storage="_TrnJournalVoucher", ThisKey="JVId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public TrnJournalVoucher TrnJournalVoucher
		{
			get
			{
				return this._TrnJournalVoucher.Entity;
			}
			set
			{
				TrnJournalVoucher previousValue = this._TrnJournalVoucher.Entity;
				if (((previousValue != value) 
							|| (this._TrnJournalVoucher.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnJournalVoucher.Entity = null;
						previousValue.TrnJournals.Remove(this);
					}
					this._TrnJournalVoucher.Entity = value;
					if ((value != null))
					{
						value.TrnJournals.Add(this);
						this._JVId = value.Id;
					}
					else
					{
						this._JVId = default(Nullable<long>);
					}
					this.SendPropertyChanged("TrnJournalVoucher");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnPurchaseInvoice_TrnJournal", Storage="_TrnPurchaseInvoice", ThisKey="PIId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public TrnPurchaseInvoice TrnPurchaseInvoice
		{
			get
			{
				return this._TrnPurchaseInvoice.Entity;
			}
			set
			{
				TrnPurchaseInvoice previousValue = this._TrnPurchaseInvoice.Entity;
				if (((previousValue != value) 
							|| (this._TrnPurchaseInvoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnPurchaseInvoice.Entity = null;
						previousValue.TrnJournals.Remove(this);
					}
					this._TrnPurchaseInvoice.Entity = value;
					if ((value != null))
					{
						value.TrnJournals.Add(this);
						this._PIId = value.Id;
					}
					else
					{
						this._PIId = default(Nullable<long>);
					}
					this.SendPropertyChanged("TrnPurchaseInvoice");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSalesInvoice_TrnJournal", Storage="_TrnSalesInvoice", ThisKey="SIId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public TrnSalesInvoice TrnSalesInvoice
		{
			get
			{
				return this._TrnSalesInvoice.Entity;
			}
			set
			{
				TrnSalesInvoice previousValue = this._TrnSalesInvoice.Entity;
				if (((previousValue != value) 
							|| (this._TrnSalesInvoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnSalesInvoice.Entity = null;
						previousValue.TrnJournals.Remove(this);
					}
					this._TrnSalesInvoice.Entity = value;
					if ((value != null))
					{
						value.TrnJournals.Add(this);
						this._SIId = value.Id;
					}
					else
					{
						this._SIId = default(Nullable<long>);
					}
					this.SendPropertyChanged("TrnSalesInvoice");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockIn_TrnJournal", Storage="_TrnStockIn", ThisKey="INId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public TrnStockIn TrnStockIn
		{
			get
			{
				return this._TrnStockIn.Entity;
			}
			set
			{
				TrnStockIn previousValue = this._TrnStockIn.Entity;
				if (((previousValue != value) 
							|| (this._TrnStockIn.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnStockIn.Entity = null;
						previousValue.TrnJournals.Remove(this);
					}
					this._TrnStockIn.Entity = value;
					if ((value != null))
					{
						value.TrnJournals.Add(this);
						this._INId = value.Id;
					}
					else
					{
						this._INId = default(Nullable<long>);
					}
					this.SendPropertyChanged("TrnStockIn");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockOut_TrnJournal", Storage="_TrnStockOut", ThisKey="OTId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public TrnStockOut TrnStockOut
		{
			get
			{
				return this._TrnStockOut.Entity;
			}
			set
			{
				TrnStockOut previousValue = this._TrnStockOut.Entity;
				if (((previousValue != value) 
							|| (this._TrnStockOut.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnStockOut.Entity = null;
						previousValue.TrnJournals.Remove(this);
					}
					this._TrnStockOut.Entity = value;
					if ((value != null))
					{
						value.TrnJournals.Add(this);
						this._OTId = value.Id;
					}
					else
					{
						this._OTId = default(Nullable<long>);
					}
					this.SendPropertyChanged("TrnStockOut");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockTransfer_TrnJournal", Storage="_TrnStockTransfer", ThisKey="STId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public TrnStockTransfer TrnStockTransfer
		{
			get
			{
				return this._TrnStockTransfer.Entity;
			}
			set
			{
				TrnStockTransfer previousValue = this._TrnStockTransfer.Entity;
				if (((previousValue != value) 
							|| (this._TrnStockTransfer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnStockTransfer.Entity = null;
						previousValue.TrnJournals.Remove(this);
					}
					this._TrnStockTransfer.Entity = value;
					if ((value != null))
					{
						value.TrnJournals.Add(this);
						this._STId = value.Id;
					}
					else
					{
						this._STId = default(Nullable<long>);
					}
					this.SendPropertyChanged("TrnStockTransfer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnJournalVoucher")]
	public partial class TrnJournalVoucher : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _PeriodId;
		
		private long _BranchId;
		
		private string _JVNumber;
		
		private string _JVManualNumber;
		
		private System.DateTime _JVDate;
		
		private string _Particulars;
		
		private long _PreparedById;
		
		private long _CheckedById;
		
		private long _ApprovedById;
		
		private bool _IsLocked;
		
		private long _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private long _UpdatedById;
		
		private System.DateTime _UpdatedByDateTime;
		
		private EntitySet<TrnBank> _TrnBanks;
		
		private EntitySet<TrnJournal> _TrnJournals;
		
		private EntitySet<TrnJournalVoucherLine> _TrnJournalVoucherLines;
		
		private EntityRef<MstBranch> _MstBranch;
		
		private EntityRef<MstPeriod> _MstPeriod;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
		private EntityRef<MstUser> _MstUser3;
		
		private EntityRef<MstUser> _MstUser4;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnPeriodIdChanging(long value);
    partial void OnPeriodIdChanged();
    partial void OnBranchIdChanging(long value);
    partial void OnBranchIdChanged();
    partial void OnJVNumberChanging(string value);
    partial void OnJVNumberChanged();
    partial void OnJVManualNumberChanging(string value);
    partial void OnJVManualNumberChanged();
    partial void OnJVDateChanging(System.DateTime value);
    partial void OnJVDateChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnPreparedByIdChanging(long value);
    partial void OnPreparedByIdChanged();
    partial void OnCheckedByIdChanging(long value);
    partial void OnCheckedByIdChanged();
    partial void OnApprovedByIdChanging(long value);
    partial void OnApprovedByIdChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(long value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(long value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedByDateTimeChanging(System.DateTime value);
    partial void OnUpdatedByDateTimeChanged();
    #endregion
		
		public TrnJournalVoucher()
		{
			this._TrnBanks = new EntitySet<TrnBank>(new Action<TrnBank>(this.attach_TrnBanks), new Action<TrnBank>(this.detach_TrnBanks));
			this._TrnJournals = new EntitySet<TrnJournal>(new Action<TrnJournal>(this.attach_TrnJournals), new Action<TrnJournal>(this.detach_TrnJournals));
			this._TrnJournalVoucherLines = new EntitySet<TrnJournalVoucherLine>(new Action<TrnJournalVoucherLine>(this.attach_TrnJournalVoucherLines), new Action<TrnJournalVoucherLine>(this.detach_TrnJournalVoucherLines));
			this._MstBranch = default(EntityRef<MstBranch>);
			this._MstPeriod = default(EntityRef<MstPeriod>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			this._MstUser3 = default(EntityRef<MstUser>);
			this._MstUser4 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodId", DbType="BigInt NOT NULL")]
		public long PeriodId
		{
			get
			{
				return this._PeriodId;
			}
			set
			{
				if ((this._PeriodId != value))
				{
					if (this._MstPeriod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPeriodIdChanging(value);
					this.SendPropertyChanging();
					this._PeriodId = value;
					this.SendPropertyChanged("PeriodId");
					this.OnPeriodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="BigInt NOT NULL")]
		public long BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._MstBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JVNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string JVNumber
		{
			get
			{
				return this._JVNumber;
			}
			set
			{
				if ((this._JVNumber != value))
				{
					this.OnJVNumberChanging(value);
					this.SendPropertyChanging();
					this._JVNumber = value;
					this.SendPropertyChanged("JVNumber");
					this.OnJVNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JVManualNumber", DbType="NVarChar(50)")]
		public string JVManualNumber
		{
			get
			{
				return this._JVManualNumber;
			}
			set
			{
				if ((this._JVManualNumber != value))
				{
					this.OnJVManualNumberChanging(value);
					this.SendPropertyChanging();
					this._JVManualNumber = value;
					this.SendPropertyChanged("JVManualNumber");
					this.OnJVManualNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JVDate", DbType="DateTime NOT NULL")]
		public System.DateTime JVDate
		{
			get
			{
				return this._JVDate;
			}
			set
			{
				if ((this._JVDate != value))
				{
					this.OnJVDateChanging(value);
					this.SendPropertyChanging();
					this._JVDate = value;
					this.SendPropertyChanged("JVDate");
					this.OnJVDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedById", DbType="BigInt NOT NULL")]
		public long PreparedById
		{
			get
			{
				return this._PreparedById;
			}
			set
			{
				if ((this._PreparedById != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreparedByIdChanging(value);
					this.SendPropertyChanging();
					this._PreparedById = value;
					this.SendPropertyChanged("PreparedById");
					this.OnPreparedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedById", DbType="BigInt NOT NULL")]
		public long CheckedById
		{
			get
			{
				return this._CheckedById;
			}
			set
			{
				if ((this._CheckedById != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckedByIdChanging(value);
					this.SendPropertyChanging();
					this._CheckedById = value;
					this.SendPropertyChanged("CheckedById");
					this.OnCheckedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedById", DbType="BigInt NOT NULL")]
		public long ApprovedById
		{
			get
			{
				return this._ApprovedById;
			}
			set
			{
				if ((this._ApprovedById != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApprovedByIdChanging(value);
					this.SendPropertyChanging();
					this._ApprovedById = value;
					this.SendPropertyChanged("ApprovedById");
					this.OnApprovedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="BigInt NOT NULL")]
		public long CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					if (this._MstUser3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="BigInt NOT NULL")]
		public long UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					if (this._MstUser4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedByDateTime
		{
			get
			{
				return this._UpdatedByDateTime;
			}
			set
			{
				if ((this._UpdatedByDateTime != value))
				{
					this.OnUpdatedByDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByDateTime = value;
					this.SendPropertyChanged("UpdatedByDateTime");
					this.OnUpdatedByDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnJournalVoucher_TrnBank", Storage="_TrnBanks", ThisKey="Id", OtherKey="JVId")]
		public EntitySet<TrnBank> TrnBanks
		{
			get
			{
				return this._TrnBanks;
			}
			set
			{
				this._TrnBanks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnJournalVoucher_TrnJournal", Storage="_TrnJournals", ThisKey="Id", OtherKey="JVId")]
		public EntitySet<TrnJournal> TrnJournals
		{
			get
			{
				return this._TrnJournals;
			}
			set
			{
				this._TrnJournals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnJournalVoucher_TrnJournalVoucherLine", Storage="_TrnJournalVoucherLines", ThisKey="Id", OtherKey="JVId")]
		public EntitySet<TrnJournalVoucherLine> TrnJournalVoucherLines
		{
			get
			{
				return this._TrnJournalVoucherLines;
			}
			set
			{
				this._TrnJournalVoucherLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnJournalVoucher", Storage="_MstBranch", ThisKey="BranchId", OtherKey="Id", IsForeignKey=true)]
		public MstBranch MstBranch
		{
			get
			{
				return this._MstBranch.Entity;
			}
			set
			{
				MstBranch previousValue = this._MstBranch.Entity;
				if (((previousValue != value) 
							|| (this._MstBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBranch.Entity = null;
						previousValue.TrnJournalVouchers.Remove(this);
					}
					this._MstBranch.Entity = value;
					if ((value != null))
					{
						value.TrnJournalVouchers.Add(this);
						this._BranchId = value.Id;
					}
					else
					{
						this._BranchId = default(long);
					}
					this.SendPropertyChanged("MstBranch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_TrnJournalVoucher", Storage="_MstPeriod", ThisKey="PeriodId", OtherKey="Id", IsForeignKey=true)]
		public MstPeriod MstPeriod
		{
			get
			{
				return this._MstPeriod.Entity;
			}
			set
			{
				MstPeriod previousValue = this._MstPeriod.Entity;
				if (((previousValue != value) 
							|| (this._MstPeriod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPeriod.Entity = null;
						previousValue.TrnJournalVouchers.Remove(this);
					}
					this._MstPeriod.Entity = value;
					if ((value != null))
					{
						value.TrnJournalVouchers.Add(this);
						this._PeriodId = value.Id;
					}
					else
					{
						this._PeriodId = default(long);
					}
					this.SendPropertyChanged("MstPeriod");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnJournalVoucher", Storage="_MstUser", ThisKey="PreparedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.TrnJournalVouchers.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.TrnJournalVouchers.Add(this);
						this._PreparedById = value.Id;
					}
					else
					{
						this._PreparedById = default(long);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnJournalVoucher1", Storage="_MstUser1", ThisKey="CheckedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.TrnJournalVouchers1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.TrnJournalVouchers1.Add(this);
						this._CheckedById = value.Id;
					}
					else
					{
						this._CheckedById = default(long);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnJournalVoucher2", Storage="_MstUser2", ThisKey="ApprovedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.TrnJournalVouchers2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.TrnJournalVouchers2.Add(this);
						this._ApprovedById = value.Id;
					}
					else
					{
						this._ApprovedById = default(long);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnJournalVoucher3", Storage="_MstUser3", ThisKey="CreatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser3
		{
			get
			{
				return this._MstUser3.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser3.Entity;
				if (((previousValue != value) 
							|| (this._MstUser3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser3.Entity = null;
						previousValue.TrnJournalVouchers3.Remove(this);
					}
					this._MstUser3.Entity = value;
					if ((value != null))
					{
						value.TrnJournalVouchers3.Add(this);
						this._CreatedById = value.Id;
					}
					else
					{
						this._CreatedById = default(long);
					}
					this.SendPropertyChanged("MstUser3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnJournalVoucher4", Storage="_MstUser4", ThisKey="UpdatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser4
		{
			get
			{
				return this._MstUser4.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser4.Entity;
				if (((previousValue != value) 
							|| (this._MstUser4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser4.Entity = null;
						previousValue.TrnJournalVouchers4.Remove(this);
					}
					this._MstUser4.Entity = value;
					if ((value != null))
					{
						value.TrnJournalVouchers4.Add(this);
						this._UpdatedById = value.Id;
					}
					else
					{
						this._UpdatedById = default(long);
					}
					this.SendPropertyChanged("MstUser4");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnBanks(TrnBank entity)
		{
			this.SendPropertyChanging();
			entity.TrnJournalVoucher = this;
		}
		
		private void detach_TrnBanks(TrnBank entity)
		{
			this.SendPropertyChanging();
			entity.TrnJournalVoucher = null;
		}
		
		private void attach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.TrnJournalVoucher = this;
		}
		
		private void detach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.TrnJournalVoucher = null;
		}
		
		private void attach_TrnJournalVoucherLines(TrnJournalVoucherLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnJournalVoucher = this;
		}
		
		private void detach_TrnJournalVoucherLines(TrnJournalVoucherLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnJournalVoucher = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnJournalVoucherLine")]
	public partial class TrnJournalVoucherLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _JVId;
		
		private long _BranchId;
		
		private long _AccountId;
		
		private System.Nullable<long> _ArticleId;
		
		private decimal _DebitAmount;
		
		private decimal _CreditAmount;
		
		private string _Particulars;
		
		private System.Nullable<long> _PIId;
		
		private System.Nullable<long> _SIId;
		
		private EntityRef<MstAccount> _MstAccount;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstBranch> _MstBranch;
		
		private EntityRef<TrnJournalVoucher> _TrnJournalVoucher;
		
		private EntityRef<TrnPurchaseInvoice> _TrnPurchaseInvoice;
		
		private EntityRef<TrnSalesInvoice> _TrnSalesInvoice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnJVIdChanging(long value);
    partial void OnJVIdChanged();
    partial void OnBranchIdChanging(long value);
    partial void OnBranchIdChanged();
    partial void OnAccountIdChanging(long value);
    partial void OnAccountIdChanged();
    partial void OnArticleIdChanging(System.Nullable<long> value);
    partial void OnArticleIdChanged();
    partial void OnDebitAmountChanging(decimal value);
    partial void OnDebitAmountChanged();
    partial void OnCreditAmountChanging(decimal value);
    partial void OnCreditAmountChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnPIIdChanging(System.Nullable<long> value);
    partial void OnPIIdChanged();
    partial void OnSIIdChanging(System.Nullable<long> value);
    partial void OnSIIdChanged();
    #endregion
		
		public TrnJournalVoucherLine()
		{
			this._MstAccount = default(EntityRef<MstAccount>);
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstBranch = default(EntityRef<MstBranch>);
			this._TrnJournalVoucher = default(EntityRef<TrnJournalVoucher>);
			this._TrnPurchaseInvoice = default(EntityRef<TrnPurchaseInvoice>);
			this._TrnSalesInvoice = default(EntityRef<TrnSalesInvoice>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JVId", DbType="BigInt NOT NULL")]
		public long JVId
		{
			get
			{
				return this._JVId;
			}
			set
			{
				if ((this._JVId != value))
				{
					if (this._TrnJournalVoucher.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJVIdChanging(value);
					this.SendPropertyChanging();
					this._JVId = value;
					this.SendPropertyChanged("JVId");
					this.OnJVIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="BigInt NOT NULL")]
		public long BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._MstBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="BigInt NOT NULL")]
		public long AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._MstAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleId", DbType="BigInt")]
		public System.Nullable<long> ArticleId
		{
			get
			{
				return this._ArticleId;
			}
			set
			{
				if ((this._ArticleId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticleIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleId = value;
					this.SendPropertyChanged("ArticleId");
					this.OnArticleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DebitAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal DebitAmount
		{
			get
			{
				return this._DebitAmount;
			}
			set
			{
				if ((this._DebitAmount != value))
				{
					this.OnDebitAmountChanging(value);
					this.SendPropertyChanging();
					this._DebitAmount = value;
					this.SendPropertyChanged("DebitAmount");
					this.OnDebitAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal CreditAmount
		{
			get
			{
				return this._CreditAmount;
			}
			set
			{
				if ((this._CreditAmount != value))
				{
					this.OnCreditAmountChanging(value);
					this.SendPropertyChanging();
					this._CreditAmount = value;
					this.SendPropertyChanged("CreditAmount");
					this.OnCreditAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PIId", DbType="BigInt")]
		public System.Nullable<long> PIId
		{
			get
			{
				return this._PIId;
			}
			set
			{
				if ((this._PIId != value))
				{
					if (this._TrnPurchaseInvoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPIIdChanging(value);
					this.SendPropertyChanging();
					this._PIId = value;
					this.SendPropertyChanged("PIId");
					this.OnPIIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIId", DbType="BigInt")]
		public System.Nullable<long> SIId
		{
			get
			{
				return this._SIId;
			}
			set
			{
				if ((this._SIId != value))
				{
					if (this._TrnSalesInvoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSIIdChanging(value);
					this.SendPropertyChanging();
					this._SIId = value;
					this.SendPropertyChanged("SIId");
					this.OnSIIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_TrnJournalVoucherLine", Storage="_MstAccount", ThisKey="AccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount
		{
			get
			{
				return this._MstAccount.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount.Entity = null;
						previousValue.TrnJournalVoucherLines.Remove(this);
					}
					this._MstAccount.Entity = value;
					if ((value != null))
					{
						value.TrnJournalVoucherLines.Add(this);
						this._AccountId = value.Id;
					}
					else
					{
						this._AccountId = default(long);
					}
					this.SendPropertyChanged("MstAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnJournalVoucherLine", Storage="_MstArticle", ThisKey="ArticleId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.TrnJournalVoucherLines.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.TrnJournalVoucherLines.Add(this);
						this._ArticleId = value.Id;
					}
					else
					{
						this._ArticleId = default(Nullable<long>);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnJournalVoucherLine", Storage="_MstBranch", ThisKey="BranchId", OtherKey="Id", IsForeignKey=true)]
		public MstBranch MstBranch
		{
			get
			{
				return this._MstBranch.Entity;
			}
			set
			{
				MstBranch previousValue = this._MstBranch.Entity;
				if (((previousValue != value) 
							|| (this._MstBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBranch.Entity = null;
						previousValue.TrnJournalVoucherLines.Remove(this);
					}
					this._MstBranch.Entity = value;
					if ((value != null))
					{
						value.TrnJournalVoucherLines.Add(this);
						this._BranchId = value.Id;
					}
					else
					{
						this._BranchId = default(long);
					}
					this.SendPropertyChanged("MstBranch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnJournalVoucher_TrnJournalVoucherLine", Storage="_TrnJournalVoucher", ThisKey="JVId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TrnJournalVoucher TrnJournalVoucher
		{
			get
			{
				return this._TrnJournalVoucher.Entity;
			}
			set
			{
				TrnJournalVoucher previousValue = this._TrnJournalVoucher.Entity;
				if (((previousValue != value) 
							|| (this._TrnJournalVoucher.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnJournalVoucher.Entity = null;
						previousValue.TrnJournalVoucherLines.Remove(this);
					}
					this._TrnJournalVoucher.Entity = value;
					if ((value != null))
					{
						value.TrnJournalVoucherLines.Add(this);
						this._JVId = value.Id;
					}
					else
					{
						this._JVId = default(long);
					}
					this.SendPropertyChanged("TrnJournalVoucher");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnPurchaseInvoice_TrnJournalVoucherLine", Storage="_TrnPurchaseInvoice", ThisKey="PIId", OtherKey="Id", IsForeignKey=true)]
		public TrnPurchaseInvoice TrnPurchaseInvoice
		{
			get
			{
				return this._TrnPurchaseInvoice.Entity;
			}
			set
			{
				TrnPurchaseInvoice previousValue = this._TrnPurchaseInvoice.Entity;
				if (((previousValue != value) 
							|| (this._TrnPurchaseInvoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnPurchaseInvoice.Entity = null;
						previousValue.TrnJournalVoucherLines.Remove(this);
					}
					this._TrnPurchaseInvoice.Entity = value;
					if ((value != null))
					{
						value.TrnJournalVoucherLines.Add(this);
						this._PIId = value.Id;
					}
					else
					{
						this._PIId = default(Nullable<long>);
					}
					this.SendPropertyChanged("TrnPurchaseInvoice");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSalesInvoice_TrnJournalVoucherLine", Storage="_TrnSalesInvoice", ThisKey="SIId", OtherKey="Id", IsForeignKey=true)]
		public TrnSalesInvoice TrnSalesInvoice
		{
			get
			{
				return this._TrnSalesInvoice.Entity;
			}
			set
			{
				TrnSalesInvoice previousValue = this._TrnSalesInvoice.Entity;
				if (((previousValue != value) 
							|| (this._TrnSalesInvoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnSalesInvoice.Entity = null;
						previousValue.TrnJournalVoucherLines.Remove(this);
					}
					this._TrnSalesInvoice.Entity = value;
					if ((value != null))
					{
						value.TrnJournalVoucherLines.Add(this);
						this._SIId = value.Id;
					}
					else
					{
						this._SIId = default(Nullable<long>);
					}
					this.SendPropertyChanged("TrnSalesInvoice");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnPurchaseInvoice")]
	public partial class TrnPurchaseInvoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _PeriodId;
		
		private long _BranchId;
		
		private string _PINumber;
		
		private string _PIManualNumber;
		
		private System.DateTime _PIDate;
		
		private long _SupplierId;
		
		private long _TermId;
		
		private string _DocumentReference;
		
		private string _Particulars;
		
		private decimal _TotalAmount;
		
		private decimal _TotalPaidAmount;
		
		private decimal _TotalDebitAmount;
		
		private decimal _TotalCreditAmount;
		
		private long _PreparedById;
		
		private long _CheckedById;
		
		private long _ApprovedById;
		
		private bool _IsLocked;
		
		private long _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private long _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<TrnDisbursementLine> _TrnDisbursementLines;
		
		private EntitySet<TrnJournal> _TrnJournals;
		
		private EntitySet<TrnJournalVoucherLine> _TrnJournalVoucherLines;
		
		private EntitySet<TrnPurchaseInvoiceLine> _TrnPurchaseInvoiceLines;
		
		private EntitySet<TrnStockIn> _TrnStockIns;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstBranch> _MstBranch;
		
		private EntityRef<MstPeriod> _MstPeriod;
		
		private EntityRef<MstTerm> _MstTerm;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
		private EntityRef<MstUser> _MstUser3;
		
		private EntityRef<MstUser> _MstUser4;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnPeriodIdChanging(long value);
    partial void OnPeriodIdChanged();
    partial void OnBranchIdChanging(long value);
    partial void OnBranchIdChanged();
    partial void OnPINumberChanging(string value);
    partial void OnPINumberChanged();
    partial void OnPIManualNumberChanging(string value);
    partial void OnPIManualNumberChanged();
    partial void OnPIDateChanging(System.DateTime value);
    partial void OnPIDateChanged();
    partial void OnSupplierIdChanging(long value);
    partial void OnSupplierIdChanged();
    partial void OnTermIdChanging(long value);
    partial void OnTermIdChanged();
    partial void OnDocumentReferenceChanging(string value);
    partial void OnDocumentReferenceChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnTotalAmountChanging(decimal value);
    partial void OnTotalAmountChanged();
    partial void OnTotalPaidAmountChanging(decimal value);
    partial void OnTotalPaidAmountChanged();
    partial void OnTotalDebitAmountChanging(decimal value);
    partial void OnTotalDebitAmountChanged();
    partial void OnTotalCreditAmountChanging(decimal value);
    partial void OnTotalCreditAmountChanged();
    partial void OnPreparedByIdChanging(long value);
    partial void OnPreparedByIdChanged();
    partial void OnCheckedByIdChanging(long value);
    partial void OnCheckedByIdChanged();
    partial void OnApprovedByIdChanging(long value);
    partial void OnApprovedByIdChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(long value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(long value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public TrnPurchaseInvoice()
		{
			this._TrnDisbursementLines = new EntitySet<TrnDisbursementLine>(new Action<TrnDisbursementLine>(this.attach_TrnDisbursementLines), new Action<TrnDisbursementLine>(this.detach_TrnDisbursementLines));
			this._TrnJournals = new EntitySet<TrnJournal>(new Action<TrnJournal>(this.attach_TrnJournals), new Action<TrnJournal>(this.detach_TrnJournals));
			this._TrnJournalVoucherLines = new EntitySet<TrnJournalVoucherLine>(new Action<TrnJournalVoucherLine>(this.attach_TrnJournalVoucherLines), new Action<TrnJournalVoucherLine>(this.detach_TrnJournalVoucherLines));
			this._TrnPurchaseInvoiceLines = new EntitySet<TrnPurchaseInvoiceLine>(new Action<TrnPurchaseInvoiceLine>(this.attach_TrnPurchaseInvoiceLines), new Action<TrnPurchaseInvoiceLine>(this.detach_TrnPurchaseInvoiceLines));
			this._TrnStockIns = new EntitySet<TrnStockIn>(new Action<TrnStockIn>(this.attach_TrnStockIns), new Action<TrnStockIn>(this.detach_TrnStockIns));
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstBranch = default(EntityRef<MstBranch>);
			this._MstPeriod = default(EntityRef<MstPeriod>);
			this._MstTerm = default(EntityRef<MstTerm>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			this._MstUser3 = default(EntityRef<MstUser>);
			this._MstUser4 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodId", DbType="BigInt NOT NULL")]
		public long PeriodId
		{
			get
			{
				return this._PeriodId;
			}
			set
			{
				if ((this._PeriodId != value))
				{
					if (this._MstPeriod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPeriodIdChanging(value);
					this.SendPropertyChanging();
					this._PeriodId = value;
					this.SendPropertyChanged("PeriodId");
					this.OnPeriodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="BigInt NOT NULL")]
		public long BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._MstBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PINumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PINumber
		{
			get
			{
				return this._PINumber;
			}
			set
			{
				if ((this._PINumber != value))
				{
					this.OnPINumberChanging(value);
					this.SendPropertyChanging();
					this._PINumber = value;
					this.SendPropertyChanged("PINumber");
					this.OnPINumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PIManualNumber", DbType="NVarChar(50)")]
		public string PIManualNumber
		{
			get
			{
				return this._PIManualNumber;
			}
			set
			{
				if ((this._PIManualNumber != value))
				{
					this.OnPIManualNumberChanging(value);
					this.SendPropertyChanging();
					this._PIManualNumber = value;
					this.SendPropertyChanged("PIManualNumber");
					this.OnPIManualNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PIDate", DbType="DateTime NOT NULL")]
		public System.DateTime PIDate
		{
			get
			{
				return this._PIDate;
			}
			set
			{
				if ((this._PIDate != value))
				{
					this.OnPIDateChanging(value);
					this.SendPropertyChanging();
					this._PIDate = value;
					this.SendPropertyChanged("PIDate");
					this.OnPIDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierId", DbType="BigInt NOT NULL")]
		public long SupplierId
		{
			get
			{
				return this._SupplierId;
			}
			set
			{
				if ((this._SupplierId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIdChanging(value);
					this.SendPropertyChanging();
					this._SupplierId = value;
					this.SendPropertyChanged("SupplierId");
					this.OnSupplierIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="BigInt NOT NULL")]
		public long TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					if (this._MstTerm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTermIdChanging(value);
					this.SendPropertyChanging();
					this._TermId = value;
					this.SendPropertyChanged("TermId");
					this.OnTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentReference", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DocumentReference
		{
			get
			{
				return this._DocumentReference;
			}
			set
			{
				if ((this._DocumentReference != value))
				{
					this.OnDocumentReferenceChanging(value);
					this.SendPropertyChanging();
					this._DocumentReference = value;
					this.SendPropertyChanged("DocumentReference");
					this.OnDocumentReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255)")]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this.OnTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalAmount = value;
					this.SendPropertyChanged("TotalAmount");
					this.OnTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPaidAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalPaidAmount
		{
			get
			{
				return this._TotalPaidAmount;
			}
			set
			{
				if ((this._TotalPaidAmount != value))
				{
					this.OnTotalPaidAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalPaidAmount = value;
					this.SendPropertyChanged("TotalPaidAmount");
					this.OnTotalPaidAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDebitAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalDebitAmount
		{
			get
			{
				return this._TotalDebitAmount;
			}
			set
			{
				if ((this._TotalDebitAmount != value))
				{
					this.OnTotalDebitAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalDebitAmount = value;
					this.SendPropertyChanged("TotalDebitAmount");
					this.OnTotalDebitAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCreditAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalCreditAmount
		{
			get
			{
				return this._TotalCreditAmount;
			}
			set
			{
				if ((this._TotalCreditAmount != value))
				{
					this.OnTotalCreditAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalCreditAmount = value;
					this.SendPropertyChanged("TotalCreditAmount");
					this.OnTotalCreditAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedById", DbType="BigInt NOT NULL")]
		public long PreparedById
		{
			get
			{
				return this._PreparedById;
			}
			set
			{
				if ((this._PreparedById != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreparedByIdChanging(value);
					this.SendPropertyChanging();
					this._PreparedById = value;
					this.SendPropertyChanged("PreparedById");
					this.OnPreparedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedById", DbType="BigInt NOT NULL")]
		public long CheckedById
		{
			get
			{
				return this._CheckedById;
			}
			set
			{
				if ((this._CheckedById != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckedByIdChanging(value);
					this.SendPropertyChanging();
					this._CheckedById = value;
					this.SendPropertyChanged("CheckedById");
					this.OnCheckedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedById", DbType="BigInt NOT NULL")]
		public long ApprovedById
		{
			get
			{
				return this._ApprovedById;
			}
			set
			{
				if ((this._ApprovedById != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApprovedByIdChanging(value);
					this.SendPropertyChanging();
					this._ApprovedById = value;
					this.SendPropertyChanged("ApprovedById");
					this.OnApprovedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="BigInt NOT NULL")]
		public long CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					if (this._MstUser3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="BigInt NOT NULL")]
		public long UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					if (this._MstUser4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnPurchaseInvoice_TrnDisbursementLine", Storage="_TrnDisbursementLines", ThisKey="Id", OtherKey="PIId")]
		public EntitySet<TrnDisbursementLine> TrnDisbursementLines
		{
			get
			{
				return this._TrnDisbursementLines;
			}
			set
			{
				this._TrnDisbursementLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnPurchaseInvoice_TrnJournal", Storage="_TrnJournals", ThisKey="Id", OtherKey="PIId")]
		public EntitySet<TrnJournal> TrnJournals
		{
			get
			{
				return this._TrnJournals;
			}
			set
			{
				this._TrnJournals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnPurchaseInvoice_TrnJournalVoucherLine", Storage="_TrnJournalVoucherLines", ThisKey="Id", OtherKey="PIId")]
		public EntitySet<TrnJournalVoucherLine> TrnJournalVoucherLines
		{
			get
			{
				return this._TrnJournalVoucherLines;
			}
			set
			{
				this._TrnJournalVoucherLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnPurchaseInvoice_TrnPurchaseInvoiceLine", Storage="_TrnPurchaseInvoiceLines", ThisKey="Id", OtherKey="PIId")]
		public EntitySet<TrnPurchaseInvoiceLine> TrnPurchaseInvoiceLines
		{
			get
			{
				return this._TrnPurchaseInvoiceLines;
			}
			set
			{
				this._TrnPurchaseInvoiceLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnPurchaseInvoice_TrnStockIn", Storage="_TrnStockIns", ThisKey="Id", OtherKey="PIId")]
		public EntitySet<TrnStockIn> TrnStockIns
		{
			get
			{
				return this._TrnStockIns;
			}
			set
			{
				this._TrnStockIns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnPurchaseInvoice", Storage="_MstArticle", ThisKey="SupplierId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.TrnPurchaseInvoices.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.TrnPurchaseInvoices.Add(this);
						this._SupplierId = value.Id;
					}
					else
					{
						this._SupplierId = default(long);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnPurchaseInvoice", Storage="_MstBranch", ThisKey="BranchId", OtherKey="Id", IsForeignKey=true)]
		public MstBranch MstBranch
		{
			get
			{
				return this._MstBranch.Entity;
			}
			set
			{
				MstBranch previousValue = this._MstBranch.Entity;
				if (((previousValue != value) 
							|| (this._MstBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBranch.Entity = null;
						previousValue.TrnPurchaseInvoices.Remove(this);
					}
					this._MstBranch.Entity = value;
					if ((value != null))
					{
						value.TrnPurchaseInvoices.Add(this);
						this._BranchId = value.Id;
					}
					else
					{
						this._BranchId = default(long);
					}
					this.SendPropertyChanged("MstBranch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_TrnPurchaseInvoice", Storage="_MstPeriod", ThisKey="PeriodId", OtherKey="Id", IsForeignKey=true)]
		public MstPeriod MstPeriod
		{
			get
			{
				return this._MstPeriod.Entity;
			}
			set
			{
				MstPeriod previousValue = this._MstPeriod.Entity;
				if (((previousValue != value) 
							|| (this._MstPeriod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPeriod.Entity = null;
						previousValue.TrnPurchaseInvoices.Remove(this);
					}
					this._MstPeriod.Entity = value;
					if ((value != null))
					{
						value.TrnPurchaseInvoices.Add(this);
						this._PeriodId = value.Id;
					}
					else
					{
						this._PeriodId = default(long);
					}
					this.SendPropertyChanged("MstPeriod");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTerm_TrnPurchaseInvoice", Storage="_MstTerm", ThisKey="TermId", OtherKey="Id", IsForeignKey=true)]
		public MstTerm MstTerm
		{
			get
			{
				return this._MstTerm.Entity;
			}
			set
			{
				MstTerm previousValue = this._MstTerm.Entity;
				if (((previousValue != value) 
							|| (this._MstTerm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstTerm.Entity = null;
						previousValue.TrnPurchaseInvoices.Remove(this);
					}
					this._MstTerm.Entity = value;
					if ((value != null))
					{
						value.TrnPurchaseInvoices.Add(this);
						this._TermId = value.Id;
					}
					else
					{
						this._TermId = default(long);
					}
					this.SendPropertyChanged("MstTerm");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPurchaseInvoice", Storage="_MstUser", ThisKey="PreparedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.TrnPurchaseInvoices.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.TrnPurchaseInvoices.Add(this);
						this._PreparedById = value.Id;
					}
					else
					{
						this._PreparedById = default(long);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPurchaseInvoice1", Storage="_MstUser1", ThisKey="CheckedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.TrnPurchaseInvoices1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.TrnPurchaseInvoices1.Add(this);
						this._CheckedById = value.Id;
					}
					else
					{
						this._CheckedById = default(long);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPurchaseInvoice2", Storage="_MstUser2", ThisKey="ApprovedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.TrnPurchaseInvoices2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.TrnPurchaseInvoices2.Add(this);
						this._ApprovedById = value.Id;
					}
					else
					{
						this._ApprovedById = default(long);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPurchaseInvoice3", Storage="_MstUser3", ThisKey="CreatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser3
		{
			get
			{
				return this._MstUser3.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser3.Entity;
				if (((previousValue != value) 
							|| (this._MstUser3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser3.Entity = null;
						previousValue.TrnPurchaseInvoices3.Remove(this);
					}
					this._MstUser3.Entity = value;
					if ((value != null))
					{
						value.TrnPurchaseInvoices3.Add(this);
						this._CreatedById = value.Id;
					}
					else
					{
						this._CreatedById = default(long);
					}
					this.SendPropertyChanged("MstUser3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPurchaseInvoice4", Storage="_MstUser4", ThisKey="UpdatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser4
		{
			get
			{
				return this._MstUser4.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser4.Entity;
				if (((previousValue != value) 
							|| (this._MstUser4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser4.Entity = null;
						previousValue.TrnPurchaseInvoices4.Remove(this);
					}
					this._MstUser4.Entity = value;
					if ((value != null))
					{
						value.TrnPurchaseInvoices4.Add(this);
						this._UpdatedById = value.Id;
					}
					else
					{
						this._UpdatedById = default(long);
					}
					this.SendPropertyChanged("MstUser4");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnDisbursementLines(TrnDisbursementLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnPurchaseInvoice = this;
		}
		
		private void detach_TrnDisbursementLines(TrnDisbursementLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnPurchaseInvoice = null;
		}
		
		private void attach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.TrnPurchaseInvoice = this;
		}
		
		private void detach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.TrnPurchaseInvoice = null;
		}
		
		private void attach_TrnJournalVoucherLines(TrnJournalVoucherLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnPurchaseInvoice = this;
		}
		
		private void detach_TrnJournalVoucherLines(TrnJournalVoucherLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnPurchaseInvoice = null;
		}
		
		private void attach_TrnPurchaseInvoiceLines(TrnPurchaseInvoiceLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnPurchaseInvoice = this;
		}
		
		private void detach_TrnPurchaseInvoiceLines(TrnPurchaseInvoiceLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnPurchaseInvoice = null;
		}
		
		private void attach_TrnStockIns(TrnStockIn entity)
		{
			this.SendPropertyChanging();
			entity.TrnPurchaseInvoice = this;
		}
		
		private void detach_TrnStockIns(TrnStockIn entity)
		{
			this.SendPropertyChanging();
			entity.TrnPurchaseInvoice = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnPurchaseInvoiceLine")]
	public partial class TrnPurchaseInvoiceLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _POId;
		
		private long _PIId;
		
		private long _ItemId;
		
		private string _Particulars;
		
		private long _UnitId;
		
		private decimal _Cost;
		
		private decimal _Quantity;
		
		private decimal _Amount;
		
		private long _TaxId;
		
		private decimal _TaxRate;
		
		private decimal _TaxAmount;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstTax> _MstTax;
		
		private EntityRef<MstUnit> _MstUnit;
		
		private EntityRef<TrnPurchaseInvoice> _TrnPurchaseInvoice;
		
		private EntityRef<TrnPurchaseOrder> _TrnPurchaseOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnPOIdChanging(System.Nullable<long> value);
    partial void OnPOIdChanged();
    partial void OnPIIdChanging(long value);
    partial void OnPIIdChanged();
    partial void OnItemIdChanging(long value);
    partial void OnItemIdChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnUnitIdChanging(long value);
    partial void OnUnitIdChanged();
    partial void OnCostChanging(decimal value);
    partial void OnCostChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnTaxIdChanging(long value);
    partial void OnTaxIdChanged();
    partial void OnTaxRateChanging(decimal value);
    partial void OnTaxRateChanged();
    partial void OnTaxAmountChanging(decimal value);
    partial void OnTaxAmountChanged();
    #endregion
		
		public TrnPurchaseInvoiceLine()
		{
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstTax = default(EntityRef<MstTax>);
			this._MstUnit = default(EntityRef<MstUnit>);
			this._TrnPurchaseInvoice = default(EntityRef<TrnPurchaseInvoice>);
			this._TrnPurchaseOrder = default(EntityRef<TrnPurchaseOrder>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POId", DbType="BigInt")]
		public System.Nullable<long> POId
		{
			get
			{
				return this._POId;
			}
			set
			{
				if ((this._POId != value))
				{
					if (this._TrnPurchaseOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPOIdChanging(value);
					this.SendPropertyChanging();
					this._POId = value;
					this.SendPropertyChanged("POId");
					this.OnPOIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PIId", DbType="BigInt NOT NULL")]
		public long PIId
		{
			get
			{
				return this._PIId;
			}
			set
			{
				if ((this._PIId != value))
				{
					if (this._TrnPurchaseInvoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPIIdChanging(value);
					this.SendPropertyChanging();
					this._PIId = value;
					this.SendPropertyChanged("PIId");
					this.OnPIIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="BigInt NOT NULL")]
		public long ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255)")]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="BigInt NOT NULL")]
		public long UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._MstUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(18,5) NOT NULL")]
		public decimal Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxId", DbType="BigInt NOT NULL")]
		public long TaxId
		{
			get
			{
				return this._TaxId;
			}
			set
			{
				if ((this._TaxId != value))
				{
					if (this._MstTax.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaxIdChanging(value);
					this.SendPropertyChanging();
					this._TaxId = value;
					this.SendPropertyChanged("TaxId");
					this.OnTaxIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxRate", DbType="Decimal(18,5) NOT NULL")]
		public decimal TaxRate
		{
			get
			{
				return this._TaxRate;
			}
			set
			{
				if ((this._TaxRate != value))
				{
					this.OnTaxRateChanging(value);
					this.SendPropertyChanging();
					this._TaxRate = value;
					this.SendPropertyChanged("TaxRate");
					this.OnTaxRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal TaxAmount
		{
			get
			{
				return this._TaxAmount;
			}
			set
			{
				if ((this._TaxAmount != value))
				{
					this.OnTaxAmountChanging(value);
					this.SendPropertyChanging();
					this._TaxAmount = value;
					this.SendPropertyChanged("TaxAmount");
					this.OnTaxAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnPurchaseInvoiceLine", Storage="_MstArticle", ThisKey="ItemId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.TrnPurchaseInvoiceLines.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.TrnPurchaseInvoiceLines.Add(this);
						this._ItemId = value.Id;
					}
					else
					{
						this._ItemId = default(long);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTax_TrnPurchaseInvoiceLine", Storage="_MstTax", ThisKey="TaxId", OtherKey="Id", IsForeignKey=true)]
		public MstTax MstTax
		{
			get
			{
				return this._MstTax.Entity;
			}
			set
			{
				MstTax previousValue = this._MstTax.Entity;
				if (((previousValue != value) 
							|| (this._MstTax.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstTax.Entity = null;
						previousValue.TrnPurchaseInvoiceLines.Remove(this);
					}
					this._MstTax.Entity = value;
					if ((value != null))
					{
						value.TrnPurchaseInvoiceLines.Add(this);
						this._TaxId = value.Id;
					}
					else
					{
						this._TaxId = default(long);
					}
					this.SendPropertyChanged("MstTax");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnPurchaseInvoiceLine", Storage="_MstUnit", ThisKey="UnitId", OtherKey="Id", IsForeignKey=true)]
		public MstUnit MstUnit
		{
			get
			{
				return this._MstUnit.Entity;
			}
			set
			{
				MstUnit previousValue = this._MstUnit.Entity;
				if (((previousValue != value) 
							|| (this._MstUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUnit.Entity = null;
						previousValue.TrnPurchaseInvoiceLines.Remove(this);
					}
					this._MstUnit.Entity = value;
					if ((value != null))
					{
						value.TrnPurchaseInvoiceLines.Add(this);
						this._UnitId = value.Id;
					}
					else
					{
						this._UnitId = default(long);
					}
					this.SendPropertyChanged("MstUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnPurchaseInvoice_TrnPurchaseInvoiceLine", Storage="_TrnPurchaseInvoice", ThisKey="PIId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TrnPurchaseInvoice TrnPurchaseInvoice
		{
			get
			{
				return this._TrnPurchaseInvoice.Entity;
			}
			set
			{
				TrnPurchaseInvoice previousValue = this._TrnPurchaseInvoice.Entity;
				if (((previousValue != value) 
							|| (this._TrnPurchaseInvoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnPurchaseInvoice.Entity = null;
						previousValue.TrnPurchaseInvoiceLines.Remove(this);
					}
					this._TrnPurchaseInvoice.Entity = value;
					if ((value != null))
					{
						value.TrnPurchaseInvoiceLines.Add(this);
						this._PIId = value.Id;
					}
					else
					{
						this._PIId = default(long);
					}
					this.SendPropertyChanged("TrnPurchaseInvoice");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnPurchaseOrder_TrnPurchaseInvoiceLine", Storage="_TrnPurchaseOrder", ThisKey="POId", OtherKey="Id", IsForeignKey=true)]
		public TrnPurchaseOrder TrnPurchaseOrder
		{
			get
			{
				return this._TrnPurchaseOrder.Entity;
			}
			set
			{
				TrnPurchaseOrder previousValue = this._TrnPurchaseOrder.Entity;
				if (((previousValue != value) 
							|| (this._TrnPurchaseOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnPurchaseOrder.Entity = null;
						previousValue.TrnPurchaseInvoiceLines.Remove(this);
					}
					this._TrnPurchaseOrder.Entity = value;
					if ((value != null))
					{
						value.TrnPurchaseInvoiceLines.Add(this);
						this._POId = value.Id;
					}
					else
					{
						this._POId = default(Nullable<long>);
					}
					this.SendPropertyChanged("TrnPurchaseOrder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnPurchaseOrder")]
	public partial class TrnPurchaseOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _PeriodId;
		
		private long _BranchId;
		
		private string _PONumber;
		
		private string _POManualNumber;
		
		private System.DateTime _PODate;
		
		private long _SupplierId;
		
		private long _TermId;
		
		private string _RequestNumber;
		
		private System.DateTime _DateNeeded;
		
		private string _Particulars;
		
		private System.Nullable<long> _RequestedById;
		
		private bool _IsClosed;
		
		private long _PreparedById;
		
		private long _CheckedById;
		
		private long _ApprovedById;
		
		private bool _IsLocked;
		
		private long _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private long _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<TrnPurchaseInvoiceLine> _TrnPurchaseInvoiceLines;
		
		private EntitySet<TrnPurchaseOrderLine> _TrnPurchaseOrderLines;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstBranch> _MstBranch;
		
		private EntityRef<MstPeriod> _MstPeriod;
		
		private EntityRef<MstTerm> _MstTerm;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
		private EntityRef<MstUser> _MstUser3;
		
		private EntityRef<MstUser> _MstUser4;
		
		private EntityRef<MstUser> _MstUser5;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnPeriodIdChanging(long value);
    partial void OnPeriodIdChanged();
    partial void OnBranchIdChanging(long value);
    partial void OnBranchIdChanged();
    partial void OnPONumberChanging(string value);
    partial void OnPONumberChanged();
    partial void OnPOManualNumberChanging(string value);
    partial void OnPOManualNumberChanged();
    partial void OnPODateChanging(System.DateTime value);
    partial void OnPODateChanged();
    partial void OnSupplierIdChanging(long value);
    partial void OnSupplierIdChanged();
    partial void OnTermIdChanging(long value);
    partial void OnTermIdChanged();
    partial void OnRequestNumberChanging(string value);
    partial void OnRequestNumberChanged();
    partial void OnDateNeededChanging(System.DateTime value);
    partial void OnDateNeededChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnRequestedByIdChanging(System.Nullable<long> value);
    partial void OnRequestedByIdChanged();
    partial void OnIsClosedChanging(bool value);
    partial void OnIsClosedChanged();
    partial void OnPreparedByIdChanging(long value);
    partial void OnPreparedByIdChanged();
    partial void OnCheckedByIdChanging(long value);
    partial void OnCheckedByIdChanged();
    partial void OnApprovedByIdChanging(long value);
    partial void OnApprovedByIdChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(long value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(long value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public TrnPurchaseOrder()
		{
			this._TrnPurchaseInvoiceLines = new EntitySet<TrnPurchaseInvoiceLine>(new Action<TrnPurchaseInvoiceLine>(this.attach_TrnPurchaseInvoiceLines), new Action<TrnPurchaseInvoiceLine>(this.detach_TrnPurchaseInvoiceLines));
			this._TrnPurchaseOrderLines = new EntitySet<TrnPurchaseOrderLine>(new Action<TrnPurchaseOrderLine>(this.attach_TrnPurchaseOrderLines), new Action<TrnPurchaseOrderLine>(this.detach_TrnPurchaseOrderLines));
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstBranch = default(EntityRef<MstBranch>);
			this._MstPeriod = default(EntityRef<MstPeriod>);
			this._MstTerm = default(EntityRef<MstTerm>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			this._MstUser3 = default(EntityRef<MstUser>);
			this._MstUser4 = default(EntityRef<MstUser>);
			this._MstUser5 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodId", DbType="BigInt NOT NULL")]
		public long PeriodId
		{
			get
			{
				return this._PeriodId;
			}
			set
			{
				if ((this._PeriodId != value))
				{
					if (this._MstPeriod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPeriodIdChanging(value);
					this.SendPropertyChanging();
					this._PeriodId = value;
					this.SendPropertyChanged("PeriodId");
					this.OnPeriodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="BigInt NOT NULL")]
		public long BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._MstBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PONumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PONumber
		{
			get
			{
				return this._PONumber;
			}
			set
			{
				if ((this._PONumber != value))
				{
					this.OnPONumberChanging(value);
					this.SendPropertyChanging();
					this._PONumber = value;
					this.SendPropertyChanged("PONumber");
					this.OnPONumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POManualNumber", DbType="NVarChar(50)")]
		public string POManualNumber
		{
			get
			{
				return this._POManualNumber;
			}
			set
			{
				if ((this._POManualNumber != value))
				{
					this.OnPOManualNumberChanging(value);
					this.SendPropertyChanging();
					this._POManualNumber = value;
					this.SendPropertyChanged("POManualNumber");
					this.OnPOManualNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PODate", DbType="DateTime NOT NULL")]
		public System.DateTime PODate
		{
			get
			{
				return this._PODate;
			}
			set
			{
				if ((this._PODate != value))
				{
					this.OnPODateChanging(value);
					this.SendPropertyChanging();
					this._PODate = value;
					this.SendPropertyChanged("PODate");
					this.OnPODateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierId", DbType="BigInt NOT NULL")]
		public long SupplierId
		{
			get
			{
				return this._SupplierId;
			}
			set
			{
				if ((this._SupplierId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIdChanging(value);
					this.SendPropertyChanging();
					this._SupplierId = value;
					this.SendPropertyChanged("SupplierId");
					this.OnSupplierIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="BigInt NOT NULL")]
		public long TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					if (this._MstTerm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTermIdChanging(value);
					this.SendPropertyChanging();
					this._TermId = value;
					this.SendPropertyChanged("TermId");
					this.OnTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestNumber", DbType="NVarChar(50)")]
		public string RequestNumber
		{
			get
			{
				return this._RequestNumber;
			}
			set
			{
				if ((this._RequestNumber != value))
				{
					this.OnRequestNumberChanging(value);
					this.SendPropertyChanging();
					this._RequestNumber = value;
					this.SendPropertyChanged("RequestNumber");
					this.OnRequestNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateNeeded", DbType="DateTime NOT NULL")]
		public System.DateTime DateNeeded
		{
			get
			{
				return this._DateNeeded;
			}
			set
			{
				if ((this._DateNeeded != value))
				{
					this.OnDateNeededChanging(value);
					this.SendPropertyChanging();
					this._DateNeeded = value;
					this.SendPropertyChanged("DateNeeded");
					this.OnDateNeededChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255)")]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestedById", DbType="BigInt")]
		public System.Nullable<long> RequestedById
		{
			get
			{
				return this._RequestedById;
			}
			set
			{
				if ((this._RequestedById != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestedByIdChanging(value);
					this.SendPropertyChanging();
					this._RequestedById = value;
					this.SendPropertyChanged("RequestedById");
					this.OnRequestedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsClosed", DbType="Bit NOT NULL")]
		public bool IsClosed
		{
			get
			{
				return this._IsClosed;
			}
			set
			{
				if ((this._IsClosed != value))
				{
					this.OnIsClosedChanging(value);
					this.SendPropertyChanging();
					this._IsClosed = value;
					this.SendPropertyChanged("IsClosed");
					this.OnIsClosedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedById", DbType="BigInt NOT NULL")]
		public long PreparedById
		{
			get
			{
				return this._PreparedById;
			}
			set
			{
				if ((this._PreparedById != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreparedByIdChanging(value);
					this.SendPropertyChanging();
					this._PreparedById = value;
					this.SendPropertyChanged("PreparedById");
					this.OnPreparedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedById", DbType="BigInt NOT NULL")]
		public long CheckedById
		{
			get
			{
				return this._CheckedById;
			}
			set
			{
				if ((this._CheckedById != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckedByIdChanging(value);
					this.SendPropertyChanging();
					this._CheckedById = value;
					this.SendPropertyChanged("CheckedById");
					this.OnCheckedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedById", DbType="BigInt NOT NULL")]
		public long ApprovedById
		{
			get
			{
				return this._ApprovedById;
			}
			set
			{
				if ((this._ApprovedById != value))
				{
					if (this._MstUser3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApprovedByIdChanging(value);
					this.SendPropertyChanging();
					this._ApprovedById = value;
					this.SendPropertyChanged("ApprovedById");
					this.OnApprovedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="BigInt NOT NULL")]
		public long CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					if (this._MstUser4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="BigInt NOT NULL")]
		public long UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					if (this._MstUser5.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnPurchaseOrder_TrnPurchaseInvoiceLine", Storage="_TrnPurchaseInvoiceLines", ThisKey="Id", OtherKey="POId")]
		public EntitySet<TrnPurchaseInvoiceLine> TrnPurchaseInvoiceLines
		{
			get
			{
				return this._TrnPurchaseInvoiceLines;
			}
			set
			{
				this._TrnPurchaseInvoiceLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnPurchaseOrder_TrnPurchaseOrderLine", Storage="_TrnPurchaseOrderLines", ThisKey="Id", OtherKey="POId")]
		public EntitySet<TrnPurchaseOrderLine> TrnPurchaseOrderLines
		{
			get
			{
				return this._TrnPurchaseOrderLines;
			}
			set
			{
				this._TrnPurchaseOrderLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnPurchaseOrder", Storage="_MstArticle", ThisKey="SupplierId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.TrnPurchaseOrders.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.TrnPurchaseOrders.Add(this);
						this._SupplierId = value.Id;
					}
					else
					{
						this._SupplierId = default(long);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnPurchaseOrder", Storage="_MstBranch", ThisKey="BranchId", OtherKey="Id", IsForeignKey=true)]
		public MstBranch MstBranch
		{
			get
			{
				return this._MstBranch.Entity;
			}
			set
			{
				MstBranch previousValue = this._MstBranch.Entity;
				if (((previousValue != value) 
							|| (this._MstBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBranch.Entity = null;
						previousValue.TrnPurchaseOrders.Remove(this);
					}
					this._MstBranch.Entity = value;
					if ((value != null))
					{
						value.TrnPurchaseOrders.Add(this);
						this._BranchId = value.Id;
					}
					else
					{
						this._BranchId = default(long);
					}
					this.SendPropertyChanged("MstBranch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_TrnPurchaseOrder", Storage="_MstPeriod", ThisKey="PeriodId", OtherKey="Id", IsForeignKey=true)]
		public MstPeriod MstPeriod
		{
			get
			{
				return this._MstPeriod.Entity;
			}
			set
			{
				MstPeriod previousValue = this._MstPeriod.Entity;
				if (((previousValue != value) 
							|| (this._MstPeriod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPeriod.Entity = null;
						previousValue.TrnPurchaseOrders.Remove(this);
					}
					this._MstPeriod.Entity = value;
					if ((value != null))
					{
						value.TrnPurchaseOrders.Add(this);
						this._PeriodId = value.Id;
					}
					else
					{
						this._PeriodId = default(long);
					}
					this.SendPropertyChanged("MstPeriod");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTerm_TrnPurchaseOrder", Storage="_MstTerm", ThisKey="TermId", OtherKey="Id", IsForeignKey=true)]
		public MstTerm MstTerm
		{
			get
			{
				return this._MstTerm.Entity;
			}
			set
			{
				MstTerm previousValue = this._MstTerm.Entity;
				if (((previousValue != value) 
							|| (this._MstTerm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstTerm.Entity = null;
						previousValue.TrnPurchaseOrders.Remove(this);
					}
					this._MstTerm.Entity = value;
					if ((value != null))
					{
						value.TrnPurchaseOrders.Add(this);
						this._TermId = value.Id;
					}
					else
					{
						this._TermId = default(long);
					}
					this.SendPropertyChanged("MstTerm");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPurchaseOrder", Storage="_MstUser", ThisKey="RequestedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.TrnPurchaseOrders.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.TrnPurchaseOrders.Add(this);
						this._RequestedById = value.Id;
					}
					else
					{
						this._RequestedById = default(Nullable<long>);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPurchaseOrder1", Storage="_MstUser1", ThisKey="PreparedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.TrnPurchaseOrders1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.TrnPurchaseOrders1.Add(this);
						this._PreparedById = value.Id;
					}
					else
					{
						this._PreparedById = default(long);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPurchaseOrder2", Storage="_MstUser2", ThisKey="CheckedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.TrnPurchaseOrders2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.TrnPurchaseOrders2.Add(this);
						this._CheckedById = value.Id;
					}
					else
					{
						this._CheckedById = default(long);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPurchaseOrder3", Storage="_MstUser3", ThisKey="ApprovedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser3
		{
			get
			{
				return this._MstUser3.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser3.Entity;
				if (((previousValue != value) 
							|| (this._MstUser3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser3.Entity = null;
						previousValue.TrnPurchaseOrders3.Remove(this);
					}
					this._MstUser3.Entity = value;
					if ((value != null))
					{
						value.TrnPurchaseOrders3.Add(this);
						this._ApprovedById = value.Id;
					}
					else
					{
						this._ApprovedById = default(long);
					}
					this.SendPropertyChanged("MstUser3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPurchaseOrder4", Storage="_MstUser4", ThisKey="CreatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser4
		{
			get
			{
				return this._MstUser4.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser4.Entity;
				if (((previousValue != value) 
							|| (this._MstUser4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser4.Entity = null;
						previousValue.TrnPurchaseOrders4.Remove(this);
					}
					this._MstUser4.Entity = value;
					if ((value != null))
					{
						value.TrnPurchaseOrders4.Add(this);
						this._CreatedById = value.Id;
					}
					else
					{
						this._CreatedById = default(long);
					}
					this.SendPropertyChanged("MstUser4");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnPurchaseOrder5", Storage="_MstUser5", ThisKey="UpdatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser5
		{
			get
			{
				return this._MstUser5.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser5.Entity;
				if (((previousValue != value) 
							|| (this._MstUser5.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser5.Entity = null;
						previousValue.TrnPurchaseOrders5.Remove(this);
					}
					this._MstUser5.Entity = value;
					if ((value != null))
					{
						value.TrnPurchaseOrders5.Add(this);
						this._UpdatedById = value.Id;
					}
					else
					{
						this._UpdatedById = default(long);
					}
					this.SendPropertyChanged("MstUser5");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnPurchaseInvoiceLines(TrnPurchaseInvoiceLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnPurchaseOrder = this;
		}
		
		private void detach_TrnPurchaseInvoiceLines(TrnPurchaseInvoiceLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnPurchaseOrder = null;
		}
		
		private void attach_TrnPurchaseOrderLines(TrnPurchaseOrderLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnPurchaseOrder = this;
		}
		
		private void detach_TrnPurchaseOrderLines(TrnPurchaseOrderLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnPurchaseOrder = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnPurchaseOrderLine")]
	public partial class TrnPurchaseOrderLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _POId;
		
		private long _ItemId;
		
		private string _Particulars;
		
		private long _UnitId;
		
		private decimal _Cost;
		
		private decimal _Quantity;
		
		private decimal _Amount;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstUnit> _MstUnit;
		
		private EntityRef<TrnPurchaseOrder> _TrnPurchaseOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnPOIdChanging(long value);
    partial void OnPOIdChanged();
    partial void OnItemIdChanging(long value);
    partial void OnItemIdChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnUnitIdChanging(long value);
    partial void OnUnitIdChanged();
    partial void OnCostChanging(decimal value);
    partial void OnCostChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    #endregion
		
		public TrnPurchaseOrderLine()
		{
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstUnit = default(EntityRef<MstUnit>);
			this._TrnPurchaseOrder = default(EntityRef<TrnPurchaseOrder>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POId", DbType="BigInt NOT NULL")]
		public long POId
		{
			get
			{
				return this._POId;
			}
			set
			{
				if ((this._POId != value))
				{
					if (this._TrnPurchaseOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPOIdChanging(value);
					this.SendPropertyChanging();
					this._POId = value;
					this.SendPropertyChanged("POId");
					this.OnPOIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="BigInt NOT NULL")]
		public long ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255)")]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="BigInt NOT NULL")]
		public long UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._MstUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(18,5) NOT NULL")]
		public decimal Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnPurchaseOrderLine", Storage="_MstArticle", ThisKey="ItemId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.TrnPurchaseOrderLines.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.TrnPurchaseOrderLines.Add(this);
						this._ItemId = value.Id;
					}
					else
					{
						this._ItemId = default(long);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnPurchaseOrderLine", Storage="_MstUnit", ThisKey="UnitId", OtherKey="Id", IsForeignKey=true)]
		public MstUnit MstUnit
		{
			get
			{
				return this._MstUnit.Entity;
			}
			set
			{
				MstUnit previousValue = this._MstUnit.Entity;
				if (((previousValue != value) 
							|| (this._MstUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUnit.Entity = null;
						previousValue.TrnPurchaseOrderLines.Remove(this);
					}
					this._MstUnit.Entity = value;
					if ((value != null))
					{
						value.TrnPurchaseOrderLines.Add(this);
						this._UnitId = value.Id;
					}
					else
					{
						this._UnitId = default(long);
					}
					this.SendPropertyChanged("MstUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnPurchaseOrder_TrnPurchaseOrderLine", Storage="_TrnPurchaseOrder", ThisKey="POId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TrnPurchaseOrder TrnPurchaseOrder
		{
			get
			{
				return this._TrnPurchaseOrder.Entity;
			}
			set
			{
				TrnPurchaseOrder previousValue = this._TrnPurchaseOrder.Entity;
				if (((previousValue != value) 
							|| (this._TrnPurchaseOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnPurchaseOrder.Entity = null;
						previousValue.TrnPurchaseOrderLines.Remove(this);
					}
					this._TrnPurchaseOrder.Entity = value;
					if ((value != null))
					{
						value.TrnPurchaseOrderLines.Add(this);
						this._POId = value.Id;
					}
					else
					{
						this._POId = default(long);
					}
					this.SendPropertyChanged("TrnPurchaseOrder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnSalesInvoice")]
	public partial class TrnSalesInvoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _PeriodId;
		
		private long _BranchId;
		
		private string _SINumber;
		
		private string _SIManualNumber;
		
		private System.DateTime _SIDate;
		
		private long _CustomerId;
		
		private long _TermId;
		
		private string _DocumentReference;
		
		private string _Particulars;
		
		private long _SoldById;
		
		private decimal _TotalAmount;
		
		private decimal _TotalCollectedAmount;
		
		private decimal _TotalDebitAmount;
		
		private decimal _TotalCreditAmount;
		
		private long _PreparedById;
		
		private long _CheckedById;
		
		private long _ApprovedById;
		
		private bool _IsLocked;
		
		private long _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private long _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<TrnCollectionLine> _TrnCollectionLines;
		
		private EntitySet<TrnJournal> _TrnJournals;
		
		private EntitySet<TrnJournalVoucherLine> _TrnJournalVoucherLines;
		
		private EntitySet<TrnSalesInvoiceLine> _TrnSalesInvoiceLines;
		
		private EntitySet<TrnStockOut> _TrnStockOuts;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstBranch> _MstBranch;
		
		private EntityRef<MstPeriod> _MstPeriod;
		
		private EntityRef<MstTerm> _MstTerm;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
		private EntityRef<MstUser> _MstUser3;
		
		private EntityRef<MstUser> _MstUser4;
		
		private EntityRef<MstUser> _MstUser5;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnPeriodIdChanging(long value);
    partial void OnPeriodIdChanged();
    partial void OnBranchIdChanging(long value);
    partial void OnBranchIdChanged();
    partial void OnSINumberChanging(string value);
    partial void OnSINumberChanged();
    partial void OnSIManualNumberChanging(string value);
    partial void OnSIManualNumberChanged();
    partial void OnSIDateChanging(System.DateTime value);
    partial void OnSIDateChanged();
    partial void OnCustomerIdChanging(long value);
    partial void OnCustomerIdChanged();
    partial void OnTermIdChanging(long value);
    partial void OnTermIdChanged();
    partial void OnDocumentReferenceChanging(string value);
    partial void OnDocumentReferenceChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnSoldByIdChanging(long value);
    partial void OnSoldByIdChanged();
    partial void OnTotalAmountChanging(decimal value);
    partial void OnTotalAmountChanged();
    partial void OnTotalCollectedAmountChanging(decimal value);
    partial void OnTotalCollectedAmountChanged();
    partial void OnTotalDebitAmountChanging(decimal value);
    partial void OnTotalDebitAmountChanged();
    partial void OnTotalCreditAmountChanging(decimal value);
    partial void OnTotalCreditAmountChanged();
    partial void OnPreparedByIdChanging(long value);
    partial void OnPreparedByIdChanged();
    partial void OnCheckedByIdChanging(long value);
    partial void OnCheckedByIdChanged();
    partial void OnApprovedByIdChanging(long value);
    partial void OnApprovedByIdChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(long value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(long value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public TrnSalesInvoice()
		{
			this._TrnCollectionLines = new EntitySet<TrnCollectionLine>(new Action<TrnCollectionLine>(this.attach_TrnCollectionLines), new Action<TrnCollectionLine>(this.detach_TrnCollectionLines));
			this._TrnJournals = new EntitySet<TrnJournal>(new Action<TrnJournal>(this.attach_TrnJournals), new Action<TrnJournal>(this.detach_TrnJournals));
			this._TrnJournalVoucherLines = new EntitySet<TrnJournalVoucherLine>(new Action<TrnJournalVoucherLine>(this.attach_TrnJournalVoucherLines), new Action<TrnJournalVoucherLine>(this.detach_TrnJournalVoucherLines));
			this._TrnSalesInvoiceLines = new EntitySet<TrnSalesInvoiceLine>(new Action<TrnSalesInvoiceLine>(this.attach_TrnSalesInvoiceLines), new Action<TrnSalesInvoiceLine>(this.detach_TrnSalesInvoiceLines));
			this._TrnStockOuts = new EntitySet<TrnStockOut>(new Action<TrnStockOut>(this.attach_TrnStockOuts), new Action<TrnStockOut>(this.detach_TrnStockOuts));
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstBranch = default(EntityRef<MstBranch>);
			this._MstPeriod = default(EntityRef<MstPeriod>);
			this._MstTerm = default(EntityRef<MstTerm>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			this._MstUser3 = default(EntityRef<MstUser>);
			this._MstUser4 = default(EntityRef<MstUser>);
			this._MstUser5 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodId", DbType="BigInt NOT NULL")]
		public long PeriodId
		{
			get
			{
				return this._PeriodId;
			}
			set
			{
				if ((this._PeriodId != value))
				{
					if (this._MstPeriod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPeriodIdChanging(value);
					this.SendPropertyChanging();
					this._PeriodId = value;
					this.SendPropertyChanged("PeriodId");
					this.OnPeriodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="BigInt NOT NULL")]
		public long BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._MstBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SINumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SINumber
		{
			get
			{
				return this._SINumber;
			}
			set
			{
				if ((this._SINumber != value))
				{
					this.OnSINumberChanging(value);
					this.SendPropertyChanging();
					this._SINumber = value;
					this.SendPropertyChanged("SINumber");
					this.OnSINumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIManualNumber", DbType="NVarChar(50)")]
		public string SIManualNumber
		{
			get
			{
				return this._SIManualNumber;
			}
			set
			{
				if ((this._SIManualNumber != value))
				{
					this.OnSIManualNumberChanging(value);
					this.SendPropertyChanging();
					this._SIManualNumber = value;
					this.SendPropertyChanged("SIManualNumber");
					this.OnSIManualNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIDate", DbType="DateTime NOT NULL")]
		public System.DateTime SIDate
		{
			get
			{
				return this._SIDate;
			}
			set
			{
				if ((this._SIDate != value))
				{
					this.OnSIDateChanging(value);
					this.SendPropertyChanging();
					this._SIDate = value;
					this.SendPropertyChanged("SIDate");
					this.OnSIDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="BigInt NOT NULL")]
		public long CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="BigInt NOT NULL")]
		public long TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					if (this._MstTerm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTermIdChanging(value);
					this.SendPropertyChanging();
					this._TermId = value;
					this.SendPropertyChanged("TermId");
					this.OnTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentReference", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DocumentReference
		{
			get
			{
				return this._DocumentReference;
			}
			set
			{
				if ((this._DocumentReference != value))
				{
					this.OnDocumentReferenceChanging(value);
					this.SendPropertyChanging();
					this._DocumentReference = value;
					this.SendPropertyChanged("DocumentReference");
					this.OnDocumentReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoldById", DbType="BigInt NOT NULL")]
		public long SoldById
		{
			get
			{
				return this._SoldById;
			}
			set
			{
				if ((this._SoldById != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSoldByIdChanging(value);
					this.SendPropertyChanging();
					this._SoldById = value;
					this.SendPropertyChanged("SoldById");
					this.OnSoldByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this.OnTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalAmount = value;
					this.SendPropertyChanged("TotalAmount");
					this.OnTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCollectedAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalCollectedAmount
		{
			get
			{
				return this._TotalCollectedAmount;
			}
			set
			{
				if ((this._TotalCollectedAmount != value))
				{
					this.OnTotalCollectedAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalCollectedAmount = value;
					this.SendPropertyChanged("TotalCollectedAmount");
					this.OnTotalCollectedAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDebitAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalDebitAmount
		{
			get
			{
				return this._TotalDebitAmount;
			}
			set
			{
				if ((this._TotalDebitAmount != value))
				{
					this.OnTotalDebitAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalDebitAmount = value;
					this.SendPropertyChanged("TotalDebitAmount");
					this.OnTotalDebitAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCreditAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal TotalCreditAmount
		{
			get
			{
				return this._TotalCreditAmount;
			}
			set
			{
				if ((this._TotalCreditAmount != value))
				{
					this.OnTotalCreditAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalCreditAmount = value;
					this.SendPropertyChanged("TotalCreditAmount");
					this.OnTotalCreditAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedById", DbType="BigInt NOT NULL")]
		public long PreparedById
		{
			get
			{
				return this._PreparedById;
			}
			set
			{
				if ((this._PreparedById != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreparedByIdChanging(value);
					this.SendPropertyChanging();
					this._PreparedById = value;
					this.SendPropertyChanged("PreparedById");
					this.OnPreparedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedById", DbType="BigInt NOT NULL")]
		public long CheckedById
		{
			get
			{
				return this._CheckedById;
			}
			set
			{
				if ((this._CheckedById != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckedByIdChanging(value);
					this.SendPropertyChanging();
					this._CheckedById = value;
					this.SendPropertyChanged("CheckedById");
					this.OnCheckedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedById", DbType="BigInt NOT NULL")]
		public long ApprovedById
		{
			get
			{
				return this._ApprovedById;
			}
			set
			{
				if ((this._ApprovedById != value))
				{
					if (this._MstUser3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApprovedByIdChanging(value);
					this.SendPropertyChanging();
					this._ApprovedById = value;
					this.SendPropertyChanged("ApprovedById");
					this.OnApprovedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="BigInt NOT NULL")]
		public long CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					if (this._MstUser4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="BigInt NOT NULL")]
		public long UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					if (this._MstUser5.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSalesInvoice_TrnCollectionLine", Storage="_TrnCollectionLines", ThisKey="Id", OtherKey="SIId")]
		public EntitySet<TrnCollectionLine> TrnCollectionLines
		{
			get
			{
				return this._TrnCollectionLines;
			}
			set
			{
				this._TrnCollectionLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSalesInvoice_TrnJournal", Storage="_TrnJournals", ThisKey="Id", OtherKey="SIId")]
		public EntitySet<TrnJournal> TrnJournals
		{
			get
			{
				return this._TrnJournals;
			}
			set
			{
				this._TrnJournals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSalesInvoice_TrnJournalVoucherLine", Storage="_TrnJournalVoucherLines", ThisKey="Id", OtherKey="SIId")]
		public EntitySet<TrnJournalVoucherLine> TrnJournalVoucherLines
		{
			get
			{
				return this._TrnJournalVoucherLines;
			}
			set
			{
				this._TrnJournalVoucherLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSalesInvoice_TrnSalesInvoiceLine", Storage="_TrnSalesInvoiceLines", ThisKey="Id", OtherKey="SIId")]
		public EntitySet<TrnSalesInvoiceLine> TrnSalesInvoiceLines
		{
			get
			{
				return this._TrnSalesInvoiceLines;
			}
			set
			{
				this._TrnSalesInvoiceLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSalesInvoice_TrnStockOut", Storage="_TrnStockOuts", ThisKey="Id", OtherKey="SIId")]
		public EntitySet<TrnStockOut> TrnStockOuts
		{
			get
			{
				return this._TrnStockOuts;
			}
			set
			{
				this._TrnStockOuts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnSalesInvoice", Storage="_MstArticle", ThisKey="CustomerId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.TrnSalesInvoices.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.TrnSalesInvoices.Add(this);
						this._CustomerId = value.Id;
					}
					else
					{
						this._CustomerId = default(long);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnSalesInvoice", Storage="_MstBranch", ThisKey="BranchId", OtherKey="Id", IsForeignKey=true)]
		public MstBranch MstBranch
		{
			get
			{
				return this._MstBranch.Entity;
			}
			set
			{
				MstBranch previousValue = this._MstBranch.Entity;
				if (((previousValue != value) 
							|| (this._MstBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBranch.Entity = null;
						previousValue.TrnSalesInvoices.Remove(this);
					}
					this._MstBranch.Entity = value;
					if ((value != null))
					{
						value.TrnSalesInvoices.Add(this);
						this._BranchId = value.Id;
					}
					else
					{
						this._BranchId = default(long);
					}
					this.SendPropertyChanged("MstBranch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_TrnSalesInvoice", Storage="_MstPeriod", ThisKey="PeriodId", OtherKey="Id", IsForeignKey=true)]
		public MstPeriod MstPeriod
		{
			get
			{
				return this._MstPeriod.Entity;
			}
			set
			{
				MstPeriod previousValue = this._MstPeriod.Entity;
				if (((previousValue != value) 
							|| (this._MstPeriod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPeriod.Entity = null;
						previousValue.TrnSalesInvoices.Remove(this);
					}
					this._MstPeriod.Entity = value;
					if ((value != null))
					{
						value.TrnSalesInvoices.Add(this);
						this._PeriodId = value.Id;
					}
					else
					{
						this._PeriodId = default(long);
					}
					this.SendPropertyChanged("MstPeriod");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTerm_TrnSalesInvoice", Storage="_MstTerm", ThisKey="TermId", OtherKey="Id", IsForeignKey=true)]
		public MstTerm MstTerm
		{
			get
			{
				return this._MstTerm.Entity;
			}
			set
			{
				MstTerm previousValue = this._MstTerm.Entity;
				if (((previousValue != value) 
							|| (this._MstTerm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstTerm.Entity = null;
						previousValue.TrnSalesInvoices.Remove(this);
					}
					this._MstTerm.Entity = value;
					if ((value != null))
					{
						value.TrnSalesInvoices.Add(this);
						this._TermId = value.Id;
					}
					else
					{
						this._TermId = default(long);
					}
					this.SendPropertyChanged("MstTerm");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesInvoice", Storage="_MstUser", ThisKey="SoldById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.TrnSalesInvoices.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.TrnSalesInvoices.Add(this);
						this._SoldById = value.Id;
					}
					else
					{
						this._SoldById = default(long);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesInvoice1", Storage="_MstUser1", ThisKey="PreparedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.TrnSalesInvoices1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.TrnSalesInvoices1.Add(this);
						this._PreparedById = value.Id;
					}
					else
					{
						this._PreparedById = default(long);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesInvoice2", Storage="_MstUser2", ThisKey="CheckedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.TrnSalesInvoices2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.TrnSalesInvoices2.Add(this);
						this._CheckedById = value.Id;
					}
					else
					{
						this._CheckedById = default(long);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesInvoice3", Storage="_MstUser3", ThisKey="ApprovedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser3
		{
			get
			{
				return this._MstUser3.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser3.Entity;
				if (((previousValue != value) 
							|| (this._MstUser3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser3.Entity = null;
						previousValue.TrnSalesInvoices3.Remove(this);
					}
					this._MstUser3.Entity = value;
					if ((value != null))
					{
						value.TrnSalesInvoices3.Add(this);
						this._ApprovedById = value.Id;
					}
					else
					{
						this._ApprovedById = default(long);
					}
					this.SendPropertyChanged("MstUser3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesInvoice4", Storage="_MstUser4", ThisKey="CreatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser4
		{
			get
			{
				return this._MstUser4.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser4.Entity;
				if (((previousValue != value) 
							|| (this._MstUser4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser4.Entity = null;
						previousValue.TrnSalesInvoices4.Remove(this);
					}
					this._MstUser4.Entity = value;
					if ((value != null))
					{
						value.TrnSalesInvoices4.Add(this);
						this._CreatedById = value.Id;
					}
					else
					{
						this._CreatedById = default(long);
					}
					this.SendPropertyChanged("MstUser4");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesInvoice5", Storage="_MstUser5", ThisKey="UpdatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser5
		{
			get
			{
				return this._MstUser5.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser5.Entity;
				if (((previousValue != value) 
							|| (this._MstUser5.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser5.Entity = null;
						previousValue.TrnSalesInvoices5.Remove(this);
					}
					this._MstUser5.Entity = value;
					if ((value != null))
					{
						value.TrnSalesInvoices5.Add(this);
						this._UpdatedById = value.Id;
					}
					else
					{
						this._UpdatedById = default(long);
					}
					this.SendPropertyChanged("MstUser5");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnCollectionLines(TrnCollectionLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnSalesInvoice = this;
		}
		
		private void detach_TrnCollectionLines(TrnCollectionLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnSalesInvoice = null;
		}
		
		private void attach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.TrnSalesInvoice = this;
		}
		
		private void detach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.TrnSalesInvoice = null;
		}
		
		private void attach_TrnJournalVoucherLines(TrnJournalVoucherLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnSalesInvoice = this;
		}
		
		private void detach_TrnJournalVoucherLines(TrnJournalVoucherLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnSalesInvoice = null;
		}
		
		private void attach_TrnSalesInvoiceLines(TrnSalesInvoiceLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnSalesInvoice = this;
		}
		
		private void detach_TrnSalesInvoiceLines(TrnSalesInvoiceLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnSalesInvoice = null;
		}
		
		private void attach_TrnStockOuts(TrnStockOut entity)
		{
			this.SendPropertyChanging();
			entity.TrnSalesInvoice = this;
		}
		
		private void detach_TrnStockOuts(TrnStockOut entity)
		{
			this.SendPropertyChanging();
			entity.TrnSalesInvoice = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnSalesInvoiceLine")]
	public partial class TrnSalesInvoiceLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _SIId;
		
		private System.Nullable<long> _SOId;
		
		private long _ItemId;
		
		private System.Nullable<long> _ItemInventoryId;
		
		private string _Particulars;
		
		private long _UnitId;
		
		private long _PriceId;
		
		private decimal _Price;
		
		private System.Nullable<long> _DiscountId;
		
		private decimal _DiscountRate;
		
		private decimal _DiscountAmount;
		
		private decimal _NetPrice;
		
		private decimal _Quantity;
		
		private decimal _Amount;
		
		private long _TaxId;
		
		private decimal _TaxRate;
		
		private decimal _TaxAmount;
		
		private bool _TaxAmountInclusive;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstArticleItemInventory> _MstArticleItemInventory;
		
		private EntityRef<MstArticleItemPrice> _MstArticleItemPrice;
		
		private EntityRef<MstDiscount> _MstDiscount;
		
		private EntityRef<MstTax> _MstTax;
		
		private EntityRef<MstUnit> _MstUnit;
		
		private EntityRef<TrnSalesInvoice> _TrnSalesInvoice;
		
		private EntityRef<TrnSalesOrder> _TrnSalesOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnSIIdChanging(long value);
    partial void OnSIIdChanged();
    partial void OnSOIdChanging(System.Nullable<long> value);
    partial void OnSOIdChanged();
    partial void OnItemIdChanging(long value);
    partial void OnItemIdChanged();
    partial void OnItemInventoryIdChanging(System.Nullable<long> value);
    partial void OnItemInventoryIdChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnUnitIdChanging(long value);
    partial void OnUnitIdChanged();
    partial void OnPriceIdChanging(long value);
    partial void OnPriceIdChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnDiscountIdChanging(System.Nullable<long> value);
    partial void OnDiscountIdChanged();
    partial void OnDiscountRateChanging(decimal value);
    partial void OnDiscountRateChanged();
    partial void OnDiscountAmountChanging(decimal value);
    partial void OnDiscountAmountChanged();
    partial void OnNetPriceChanging(decimal value);
    partial void OnNetPriceChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnTaxIdChanging(long value);
    partial void OnTaxIdChanged();
    partial void OnTaxRateChanging(decimal value);
    partial void OnTaxRateChanged();
    partial void OnTaxAmountChanging(decimal value);
    partial void OnTaxAmountChanged();
    partial void OnTaxAmountInclusiveChanging(bool value);
    partial void OnTaxAmountInclusiveChanged();
    #endregion
		
		public TrnSalesInvoiceLine()
		{
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstArticleItemInventory = default(EntityRef<MstArticleItemInventory>);
			this._MstArticleItemPrice = default(EntityRef<MstArticleItemPrice>);
			this._MstDiscount = default(EntityRef<MstDiscount>);
			this._MstTax = default(EntityRef<MstTax>);
			this._MstUnit = default(EntityRef<MstUnit>);
			this._TrnSalesInvoice = default(EntityRef<TrnSalesInvoice>);
			this._TrnSalesOrder = default(EntityRef<TrnSalesOrder>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIId", DbType="BigInt NOT NULL")]
		public long SIId
		{
			get
			{
				return this._SIId;
			}
			set
			{
				if ((this._SIId != value))
				{
					if (this._TrnSalesInvoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSIIdChanging(value);
					this.SendPropertyChanging();
					this._SIId = value;
					this.SendPropertyChanged("SIId");
					this.OnSIIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOId", DbType="BigInt")]
		public System.Nullable<long> SOId
		{
			get
			{
				return this._SOId;
			}
			set
			{
				if ((this._SOId != value))
				{
					if (this._TrnSalesOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSOIdChanging(value);
					this.SendPropertyChanging();
					this._SOId = value;
					this.SendPropertyChanged("SOId");
					this.OnSOIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="BigInt NOT NULL")]
		public long ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemInventoryId", DbType="BigInt")]
		public System.Nullable<long> ItemInventoryId
		{
			get
			{
				return this._ItemInventoryId;
			}
			set
			{
				if ((this._ItemInventoryId != value))
				{
					if (this._MstArticleItemInventory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemInventoryIdChanging(value);
					this.SendPropertyChanging();
					this._ItemInventoryId = value;
					this.SendPropertyChanged("ItemInventoryId");
					this.OnItemInventoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="BigInt NOT NULL")]
		public long UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._MstUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceId", DbType="BigInt NOT NULL")]
		public long PriceId
		{
			get
			{
				return this._PriceId;
			}
			set
			{
				if ((this._PriceId != value))
				{
					if (this._MstArticleItemPrice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPriceIdChanging(value);
					this.SendPropertyChanging();
					this._PriceId = value;
					this.SendPropertyChanged("PriceId");
					this.OnPriceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,5) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountId", DbType="BigInt")]
		public System.Nullable<long> DiscountId
		{
			get
			{
				return this._DiscountId;
			}
			set
			{
				if ((this._DiscountId != value))
				{
					if (this._MstDiscount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDiscountIdChanging(value);
					this.SendPropertyChanging();
					this._DiscountId = value;
					this.SendPropertyChanged("DiscountId");
					this.OnDiscountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountRate", DbType="Decimal(18,5) NOT NULL")]
		public decimal DiscountRate
		{
			get
			{
				return this._DiscountRate;
			}
			set
			{
				if ((this._DiscountRate != value))
				{
					this.OnDiscountRateChanging(value);
					this.SendPropertyChanging();
					this._DiscountRate = value;
					this.SendPropertyChanged("DiscountRate");
					this.OnDiscountRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal DiscountAmount
		{
			get
			{
				return this._DiscountAmount;
			}
			set
			{
				if ((this._DiscountAmount != value))
				{
					this.OnDiscountAmountChanging(value);
					this.SendPropertyChanging();
					this._DiscountAmount = value;
					this.SendPropertyChanged("DiscountAmount");
					this.OnDiscountAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetPrice", DbType="Decimal(18,5) NOT NULL")]
		public decimal NetPrice
		{
			get
			{
				return this._NetPrice;
			}
			set
			{
				if ((this._NetPrice != value))
				{
					this.OnNetPriceChanging(value);
					this.SendPropertyChanging();
					this._NetPrice = value;
					this.SendPropertyChanged("NetPrice");
					this.OnNetPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxId", DbType="BigInt NOT NULL")]
		public long TaxId
		{
			get
			{
				return this._TaxId;
			}
			set
			{
				if ((this._TaxId != value))
				{
					if (this._MstTax.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaxIdChanging(value);
					this.SendPropertyChanging();
					this._TaxId = value;
					this.SendPropertyChanged("TaxId");
					this.OnTaxIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxRate", DbType="Decimal(18,5) NOT NULL")]
		public decimal TaxRate
		{
			get
			{
				return this._TaxRate;
			}
			set
			{
				if ((this._TaxRate != value))
				{
					this.OnTaxRateChanging(value);
					this.SendPropertyChanging();
					this._TaxRate = value;
					this.SendPropertyChanged("TaxRate");
					this.OnTaxRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal TaxAmount
		{
			get
			{
				return this._TaxAmount;
			}
			set
			{
				if ((this._TaxAmount != value))
				{
					this.OnTaxAmountChanging(value);
					this.SendPropertyChanging();
					this._TaxAmount = value;
					this.SendPropertyChanged("TaxAmount");
					this.OnTaxAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxAmountInclusive", DbType="Bit NOT NULL")]
		public bool TaxAmountInclusive
		{
			get
			{
				return this._TaxAmountInclusive;
			}
			set
			{
				if ((this._TaxAmountInclusive != value))
				{
					this.OnTaxAmountInclusiveChanging(value);
					this.SendPropertyChanging();
					this._TaxAmountInclusive = value;
					this.SendPropertyChanged("TaxAmountInclusive");
					this.OnTaxAmountInclusiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnSalesInvoiceLine", Storage="_MstArticle", ThisKey="ItemId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.TrnSalesInvoiceLines.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.TrnSalesInvoiceLines.Add(this);
						this._ItemId = value.Id;
					}
					else
					{
						this._ItemId = default(long);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleItemInventory_TrnSalesInvoiceLine", Storage="_MstArticleItemInventory", ThisKey="ItemInventoryId", OtherKey="Id", IsForeignKey=true)]
		public MstArticleItemInventory MstArticleItemInventory
		{
			get
			{
				return this._MstArticleItemInventory.Entity;
			}
			set
			{
				MstArticleItemInventory previousValue = this._MstArticleItemInventory.Entity;
				if (((previousValue != value) 
							|| (this._MstArticleItemInventory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticleItemInventory.Entity = null;
						previousValue.TrnSalesInvoiceLines.Remove(this);
					}
					this._MstArticleItemInventory.Entity = value;
					if ((value != null))
					{
						value.TrnSalesInvoiceLines.Add(this);
						this._ItemInventoryId = value.Id;
					}
					else
					{
						this._ItemInventoryId = default(Nullable<long>);
					}
					this.SendPropertyChanged("MstArticleItemInventory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleItemPrice_TrnSalesInvoiceLine", Storage="_MstArticleItemPrice", ThisKey="PriceId", OtherKey="Id", IsForeignKey=true)]
		public MstArticleItemPrice MstArticleItemPrice
		{
			get
			{
				return this._MstArticleItemPrice.Entity;
			}
			set
			{
				MstArticleItemPrice previousValue = this._MstArticleItemPrice.Entity;
				if (((previousValue != value) 
							|| (this._MstArticleItemPrice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticleItemPrice.Entity = null;
						previousValue.TrnSalesInvoiceLines.Remove(this);
					}
					this._MstArticleItemPrice.Entity = value;
					if ((value != null))
					{
						value.TrnSalesInvoiceLines.Add(this);
						this._PriceId = value.Id;
					}
					else
					{
						this._PriceId = default(long);
					}
					this.SendPropertyChanged("MstArticleItemPrice");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstDiscount_TrnSalesInvoiceLine", Storage="_MstDiscount", ThisKey="DiscountId", OtherKey="Id", IsForeignKey=true)]
		public MstDiscount MstDiscount
		{
			get
			{
				return this._MstDiscount.Entity;
			}
			set
			{
				MstDiscount previousValue = this._MstDiscount.Entity;
				if (((previousValue != value) 
							|| (this._MstDiscount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstDiscount.Entity = null;
						previousValue.TrnSalesInvoiceLines.Remove(this);
					}
					this._MstDiscount.Entity = value;
					if ((value != null))
					{
						value.TrnSalesInvoiceLines.Add(this);
						this._DiscountId = value.Id;
					}
					else
					{
						this._DiscountId = default(Nullable<long>);
					}
					this.SendPropertyChanged("MstDiscount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTax_TrnSalesInvoiceLine", Storage="_MstTax", ThisKey="TaxId", OtherKey="Id", IsForeignKey=true)]
		public MstTax MstTax
		{
			get
			{
				return this._MstTax.Entity;
			}
			set
			{
				MstTax previousValue = this._MstTax.Entity;
				if (((previousValue != value) 
							|| (this._MstTax.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstTax.Entity = null;
						previousValue.TrnSalesInvoiceLines.Remove(this);
					}
					this._MstTax.Entity = value;
					if ((value != null))
					{
						value.TrnSalesInvoiceLines.Add(this);
						this._TaxId = value.Id;
					}
					else
					{
						this._TaxId = default(long);
					}
					this.SendPropertyChanged("MstTax");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnSalesInvoiceLine", Storage="_MstUnit", ThisKey="UnitId", OtherKey="Id", IsForeignKey=true)]
		public MstUnit MstUnit
		{
			get
			{
				return this._MstUnit.Entity;
			}
			set
			{
				MstUnit previousValue = this._MstUnit.Entity;
				if (((previousValue != value) 
							|| (this._MstUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUnit.Entity = null;
						previousValue.TrnSalesInvoiceLines.Remove(this);
					}
					this._MstUnit.Entity = value;
					if ((value != null))
					{
						value.TrnSalesInvoiceLines.Add(this);
						this._UnitId = value.Id;
					}
					else
					{
						this._UnitId = default(long);
					}
					this.SendPropertyChanged("MstUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSalesInvoice_TrnSalesInvoiceLine", Storage="_TrnSalesInvoice", ThisKey="SIId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TrnSalesInvoice TrnSalesInvoice
		{
			get
			{
				return this._TrnSalesInvoice.Entity;
			}
			set
			{
				TrnSalesInvoice previousValue = this._TrnSalesInvoice.Entity;
				if (((previousValue != value) 
							|| (this._TrnSalesInvoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnSalesInvoice.Entity = null;
						previousValue.TrnSalesInvoiceLines.Remove(this);
					}
					this._TrnSalesInvoice.Entity = value;
					if ((value != null))
					{
						value.TrnSalesInvoiceLines.Add(this);
						this._SIId = value.Id;
					}
					else
					{
						this._SIId = default(long);
					}
					this.SendPropertyChanged("TrnSalesInvoice");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSalesOrder_TrnSalesInvoiceLine", Storage="_TrnSalesOrder", ThisKey="SOId", OtherKey="Id", IsForeignKey=true)]
		public TrnSalesOrder TrnSalesOrder
		{
			get
			{
				return this._TrnSalesOrder.Entity;
			}
			set
			{
				TrnSalesOrder previousValue = this._TrnSalesOrder.Entity;
				if (((previousValue != value) 
							|| (this._TrnSalesOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnSalesOrder.Entity = null;
						previousValue.TrnSalesInvoiceLines.Remove(this);
					}
					this._TrnSalesOrder.Entity = value;
					if ((value != null))
					{
						value.TrnSalesInvoiceLines.Add(this);
						this._SOId = value.Id;
					}
					else
					{
						this._SOId = default(Nullable<long>);
					}
					this.SendPropertyChanged("TrnSalesOrder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnSalesOrder")]
	public partial class TrnSalesOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _PeriodId;
		
		private long _BranchId;
		
		private string _SONumber;
		
		private string _SOManualNumber;
		
		private System.DateTime _SODate;
		
		private long _CustomerId;
		
		private long _TermId;
		
		private string _OrderNumber;
		
		private System.DateTime _DateNeeded;
		
		private string _Particulars;
		
		private long _OrderedById;
		
		private bool _IsClosed;
		
		private long _PreparedById;
		
		private long _CheckedById;
		
		private long _ApprovedById;
		
		private bool _IsLocked;
		
		private long _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private long _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<TrnSalesInvoiceLine> _TrnSalesInvoiceLines;
		
		private EntitySet<TrnSalesOrderLine> _TrnSalesOrderLines;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstBranch> _MstBranch;
		
		private EntityRef<MstPeriod> _MstPeriod;
		
		private EntityRef<MstTerm> _MstTerm;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
		private EntityRef<MstUser> _MstUser3;
		
		private EntityRef<MstUser> _MstUser4;
		
		private EntityRef<MstUser> _MstUser5;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnPeriodIdChanging(long value);
    partial void OnPeriodIdChanged();
    partial void OnBranchIdChanging(long value);
    partial void OnBranchIdChanged();
    partial void OnSONumberChanging(string value);
    partial void OnSONumberChanged();
    partial void OnSOManualNumberChanging(string value);
    partial void OnSOManualNumberChanged();
    partial void OnSODateChanging(System.DateTime value);
    partial void OnSODateChanged();
    partial void OnCustomerIdChanging(long value);
    partial void OnCustomerIdChanged();
    partial void OnTermIdChanging(long value);
    partial void OnTermIdChanged();
    partial void OnOrderNumberChanging(string value);
    partial void OnOrderNumberChanged();
    partial void OnDateNeededChanging(System.DateTime value);
    partial void OnDateNeededChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnOrderedByIdChanging(long value);
    partial void OnOrderedByIdChanged();
    partial void OnIsClosedChanging(bool value);
    partial void OnIsClosedChanged();
    partial void OnPreparedByIdChanging(long value);
    partial void OnPreparedByIdChanged();
    partial void OnCheckedByIdChanging(long value);
    partial void OnCheckedByIdChanged();
    partial void OnApprovedByIdChanging(long value);
    partial void OnApprovedByIdChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(long value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(long value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public TrnSalesOrder()
		{
			this._TrnSalesInvoiceLines = new EntitySet<TrnSalesInvoiceLine>(new Action<TrnSalesInvoiceLine>(this.attach_TrnSalesInvoiceLines), new Action<TrnSalesInvoiceLine>(this.detach_TrnSalesInvoiceLines));
			this._TrnSalesOrderLines = new EntitySet<TrnSalesOrderLine>(new Action<TrnSalesOrderLine>(this.attach_TrnSalesOrderLines), new Action<TrnSalesOrderLine>(this.detach_TrnSalesOrderLines));
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstBranch = default(EntityRef<MstBranch>);
			this._MstPeriod = default(EntityRef<MstPeriod>);
			this._MstTerm = default(EntityRef<MstTerm>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			this._MstUser3 = default(EntityRef<MstUser>);
			this._MstUser4 = default(EntityRef<MstUser>);
			this._MstUser5 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodId", DbType="BigInt NOT NULL")]
		public long PeriodId
		{
			get
			{
				return this._PeriodId;
			}
			set
			{
				if ((this._PeriodId != value))
				{
					if (this._MstPeriod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPeriodIdChanging(value);
					this.SendPropertyChanging();
					this._PeriodId = value;
					this.SendPropertyChanged("PeriodId");
					this.OnPeriodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="BigInt NOT NULL")]
		public long BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._MstBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SONumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SONumber
		{
			get
			{
				return this._SONumber;
			}
			set
			{
				if ((this._SONumber != value))
				{
					this.OnSONumberChanging(value);
					this.SendPropertyChanging();
					this._SONumber = value;
					this.SendPropertyChanged("SONumber");
					this.OnSONumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOManualNumber", DbType="NVarChar(50)")]
		public string SOManualNumber
		{
			get
			{
				return this._SOManualNumber;
			}
			set
			{
				if ((this._SOManualNumber != value))
				{
					this.OnSOManualNumberChanging(value);
					this.SendPropertyChanging();
					this._SOManualNumber = value;
					this.SendPropertyChanged("SOManualNumber");
					this.OnSOManualNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SODate", DbType="DateTime NOT NULL")]
		public System.DateTime SODate
		{
			get
			{
				return this._SODate;
			}
			set
			{
				if ((this._SODate != value))
				{
					this.OnSODateChanging(value);
					this.SendPropertyChanging();
					this._SODate = value;
					this.SendPropertyChanged("SODate");
					this.OnSODateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="BigInt NOT NULL")]
		public long CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="BigInt NOT NULL")]
		public long TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					if (this._MstTerm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTermIdChanging(value);
					this.SendPropertyChanging();
					this._TermId = value;
					this.SendPropertyChanged("TermId");
					this.OnTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNumber", DbType="NVarChar(50)")]
		public string OrderNumber
		{
			get
			{
				return this._OrderNumber;
			}
			set
			{
				if ((this._OrderNumber != value))
				{
					this.OnOrderNumberChanging(value);
					this.SendPropertyChanging();
					this._OrderNumber = value;
					this.SendPropertyChanged("OrderNumber");
					this.OnOrderNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateNeeded", DbType="DateTime NOT NULL")]
		public System.DateTime DateNeeded
		{
			get
			{
				return this._DateNeeded;
			}
			set
			{
				if ((this._DateNeeded != value))
				{
					this.OnDateNeededChanging(value);
					this.SendPropertyChanging();
					this._DateNeeded = value;
					this.SendPropertyChanged("DateNeeded");
					this.OnDateNeededChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderedById", DbType="BigInt NOT NULL")]
		public long OrderedById
		{
			get
			{
				return this._OrderedById;
			}
			set
			{
				if ((this._OrderedById != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderedByIdChanging(value);
					this.SendPropertyChanging();
					this._OrderedById = value;
					this.SendPropertyChanged("OrderedById");
					this.OnOrderedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsClosed", DbType="Bit NOT NULL")]
		public bool IsClosed
		{
			get
			{
				return this._IsClosed;
			}
			set
			{
				if ((this._IsClosed != value))
				{
					this.OnIsClosedChanging(value);
					this.SendPropertyChanging();
					this._IsClosed = value;
					this.SendPropertyChanged("IsClosed");
					this.OnIsClosedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedById", DbType="BigInt NOT NULL")]
		public long PreparedById
		{
			get
			{
				return this._PreparedById;
			}
			set
			{
				if ((this._PreparedById != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreparedByIdChanging(value);
					this.SendPropertyChanging();
					this._PreparedById = value;
					this.SendPropertyChanged("PreparedById");
					this.OnPreparedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedById", DbType="BigInt NOT NULL")]
		public long CheckedById
		{
			get
			{
				return this._CheckedById;
			}
			set
			{
				if ((this._CheckedById != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckedByIdChanging(value);
					this.SendPropertyChanging();
					this._CheckedById = value;
					this.SendPropertyChanged("CheckedById");
					this.OnCheckedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedById", DbType="BigInt NOT NULL")]
		public long ApprovedById
		{
			get
			{
				return this._ApprovedById;
			}
			set
			{
				if ((this._ApprovedById != value))
				{
					if (this._MstUser3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApprovedByIdChanging(value);
					this.SendPropertyChanging();
					this._ApprovedById = value;
					this.SendPropertyChanged("ApprovedById");
					this.OnApprovedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="BigInt NOT NULL")]
		public long CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					if (this._MstUser4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="BigInt NOT NULL")]
		public long UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					if (this._MstUser5.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSalesOrder_TrnSalesInvoiceLine", Storage="_TrnSalesInvoiceLines", ThisKey="Id", OtherKey="SOId")]
		public EntitySet<TrnSalesInvoiceLine> TrnSalesInvoiceLines
		{
			get
			{
				return this._TrnSalesInvoiceLines;
			}
			set
			{
				this._TrnSalesInvoiceLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSalesOrder_TrnSalesOrderLine", Storage="_TrnSalesOrderLines", ThisKey="Id", OtherKey="SOId")]
		public EntitySet<TrnSalesOrderLine> TrnSalesOrderLines
		{
			get
			{
				return this._TrnSalesOrderLines;
			}
			set
			{
				this._TrnSalesOrderLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnSalesOrder", Storage="_MstArticle", ThisKey="CustomerId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.TrnSalesOrders.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.TrnSalesOrders.Add(this);
						this._CustomerId = value.Id;
					}
					else
					{
						this._CustomerId = default(long);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnSalesOrder", Storage="_MstBranch", ThisKey="BranchId", OtherKey="Id", IsForeignKey=true)]
		public MstBranch MstBranch
		{
			get
			{
				return this._MstBranch.Entity;
			}
			set
			{
				MstBranch previousValue = this._MstBranch.Entity;
				if (((previousValue != value) 
							|| (this._MstBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBranch.Entity = null;
						previousValue.TrnSalesOrders.Remove(this);
					}
					this._MstBranch.Entity = value;
					if ((value != null))
					{
						value.TrnSalesOrders.Add(this);
						this._BranchId = value.Id;
					}
					else
					{
						this._BranchId = default(long);
					}
					this.SendPropertyChanged("MstBranch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_TrnSalesOrder", Storage="_MstPeriod", ThisKey="PeriodId", OtherKey="Id", IsForeignKey=true)]
		public MstPeriod MstPeriod
		{
			get
			{
				return this._MstPeriod.Entity;
			}
			set
			{
				MstPeriod previousValue = this._MstPeriod.Entity;
				if (((previousValue != value) 
							|| (this._MstPeriod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPeriod.Entity = null;
						previousValue.TrnSalesOrders.Remove(this);
					}
					this._MstPeriod.Entity = value;
					if ((value != null))
					{
						value.TrnSalesOrders.Add(this);
						this._PeriodId = value.Id;
					}
					else
					{
						this._PeriodId = default(long);
					}
					this.SendPropertyChanged("MstPeriod");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTerm_TrnSalesOrder", Storage="_MstTerm", ThisKey="TermId", OtherKey="Id", IsForeignKey=true)]
		public MstTerm MstTerm
		{
			get
			{
				return this._MstTerm.Entity;
			}
			set
			{
				MstTerm previousValue = this._MstTerm.Entity;
				if (((previousValue != value) 
							|| (this._MstTerm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstTerm.Entity = null;
						previousValue.TrnSalesOrders.Remove(this);
					}
					this._MstTerm.Entity = value;
					if ((value != null))
					{
						value.TrnSalesOrders.Add(this);
						this._TermId = value.Id;
					}
					else
					{
						this._TermId = default(long);
					}
					this.SendPropertyChanged("MstTerm");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesOrder", Storage="_MstUser", ThisKey="OrderedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.TrnSalesOrders.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.TrnSalesOrders.Add(this);
						this._OrderedById = value.Id;
					}
					else
					{
						this._OrderedById = default(long);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesOrder1", Storage="_MstUser1", ThisKey="PreparedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.TrnSalesOrders1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.TrnSalesOrders1.Add(this);
						this._PreparedById = value.Id;
					}
					else
					{
						this._PreparedById = default(long);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesOrder2", Storage="_MstUser2", ThisKey="CheckedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.TrnSalesOrders2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.TrnSalesOrders2.Add(this);
						this._CheckedById = value.Id;
					}
					else
					{
						this._CheckedById = default(long);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesOrder3", Storage="_MstUser3", ThisKey="ApprovedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser3
		{
			get
			{
				return this._MstUser3.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser3.Entity;
				if (((previousValue != value) 
							|| (this._MstUser3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser3.Entity = null;
						previousValue.TrnSalesOrders3.Remove(this);
					}
					this._MstUser3.Entity = value;
					if ((value != null))
					{
						value.TrnSalesOrders3.Add(this);
						this._ApprovedById = value.Id;
					}
					else
					{
						this._ApprovedById = default(long);
					}
					this.SendPropertyChanged("MstUser3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesOrder4", Storage="_MstUser4", ThisKey="CreatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser4
		{
			get
			{
				return this._MstUser4.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser4.Entity;
				if (((previousValue != value) 
							|| (this._MstUser4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser4.Entity = null;
						previousValue.TrnSalesOrders4.Remove(this);
					}
					this._MstUser4.Entity = value;
					if ((value != null))
					{
						value.TrnSalesOrders4.Add(this);
						this._CreatedById = value.Id;
					}
					else
					{
						this._CreatedById = default(long);
					}
					this.SendPropertyChanged("MstUser4");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesOrder5", Storage="_MstUser5", ThisKey="UpdatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser5
		{
			get
			{
				return this._MstUser5.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser5.Entity;
				if (((previousValue != value) 
							|| (this._MstUser5.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser5.Entity = null;
						previousValue.TrnSalesOrders5.Remove(this);
					}
					this._MstUser5.Entity = value;
					if ((value != null))
					{
						value.TrnSalesOrders5.Add(this);
						this._UpdatedById = value.Id;
					}
					else
					{
						this._UpdatedById = default(long);
					}
					this.SendPropertyChanged("MstUser5");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnSalesInvoiceLines(TrnSalesInvoiceLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnSalesOrder = this;
		}
		
		private void detach_TrnSalesInvoiceLines(TrnSalesInvoiceLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnSalesOrder = null;
		}
		
		private void attach_TrnSalesOrderLines(TrnSalesOrderLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnSalesOrder = this;
		}
		
		private void detach_TrnSalesOrderLines(TrnSalesOrderLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnSalesOrder = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnSalesOrderLine")]
	public partial class TrnSalesOrderLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _SOId;
		
		private long _ItemId;
		
		private string _Particulars;
		
		private long _UnitId;
		
		private decimal _Price;
		
		private decimal _Quantity;
		
		private decimal _Amount;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstUnit> _MstUnit;
		
		private EntityRef<TrnSalesOrder> _TrnSalesOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnSOIdChanging(long value);
    partial void OnSOIdChanged();
    partial void OnItemIdChanging(long value);
    partial void OnItemIdChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnUnitIdChanging(long value);
    partial void OnUnitIdChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    #endregion
		
		public TrnSalesOrderLine()
		{
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstUnit = default(EntityRef<MstUnit>);
			this._TrnSalesOrder = default(EntityRef<TrnSalesOrder>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOId", DbType="BigInt NOT NULL")]
		public long SOId
		{
			get
			{
				return this._SOId;
			}
			set
			{
				if ((this._SOId != value))
				{
					if (this._TrnSalesOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSOIdChanging(value);
					this.SendPropertyChanging();
					this._SOId = value;
					this.SendPropertyChanged("SOId");
					this.OnSOIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="BigInt NOT NULL")]
		public long ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="BigInt NOT NULL")]
		public long UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._MstUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,5) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnSalesOrderLine", Storage="_MstArticle", ThisKey="ItemId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.TrnSalesOrderLines.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.TrnSalesOrderLines.Add(this);
						this._ItemId = value.Id;
					}
					else
					{
						this._ItemId = default(long);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnSalesOrderLine", Storage="_MstUnit", ThisKey="UnitId", OtherKey="Id", IsForeignKey=true)]
		public MstUnit MstUnit
		{
			get
			{
				return this._MstUnit.Entity;
			}
			set
			{
				MstUnit previousValue = this._MstUnit.Entity;
				if (((previousValue != value) 
							|| (this._MstUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUnit.Entity = null;
						previousValue.TrnSalesOrderLines.Remove(this);
					}
					this._MstUnit.Entity = value;
					if ((value != null))
					{
						value.TrnSalesOrderLines.Add(this);
						this._UnitId = value.Id;
					}
					else
					{
						this._UnitId = default(long);
					}
					this.SendPropertyChanged("MstUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSalesOrder_TrnSalesOrderLine", Storage="_TrnSalesOrder", ThisKey="SOId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TrnSalesOrder TrnSalesOrder
		{
			get
			{
				return this._TrnSalesOrder.Entity;
			}
			set
			{
				TrnSalesOrder previousValue = this._TrnSalesOrder.Entity;
				if (((previousValue != value) 
							|| (this._TrnSalesOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnSalesOrder.Entity = null;
						previousValue.TrnSalesOrderLines.Remove(this);
					}
					this._TrnSalesOrder.Entity = value;
					if ((value != null))
					{
						value.TrnSalesOrderLines.Add(this);
						this._SOId = value.Id;
					}
					else
					{
						this._SOId = default(long);
					}
					this.SendPropertyChanged("TrnSalesOrder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnStockIn")]
	public partial class TrnStockIn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _PeriodId;
		
		private long _BranchId;
		
		private string _INNumber;
		
		private string _INManualNumber;
		
		private System.DateTime _INDate;
		
		private System.Nullable<long> _PIId;
		
		private long _AccountId;
		
		private long _ArticleId;
		
		private string _Particulars;
		
		private long _PreparedById;
		
		private long _CheckedById;
		
		private long _ApprovedById;
		
		private bool _IsLocked;
		
		private long _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private long _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private bool _IsProduced;
		
		private EntitySet<MstArticleItemInventory> _MstArticleItemInventories;
		
		private EntitySet<TrnInventory> _TrnInventories;
		
		private EntitySet<TrnJournal> _TrnJournals;
		
		private EntitySet<TrnStockInLine> _TrnStockInLines;
		
		private EntitySet<TrnStockOut> _TrnStockOuts;
		
		private EntityRef<MstAccount> _MstAccount;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstBranch> _MstBranch;
		
		private EntityRef<MstPeriod> _MstPeriod;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
		private EntityRef<MstUser> _MstUser3;
		
		private EntityRef<MstUser> _MstUser4;
		
		private EntityRef<TrnPurchaseInvoice> _TrnPurchaseInvoice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnPeriodIdChanging(long value);
    partial void OnPeriodIdChanged();
    partial void OnBranchIdChanging(long value);
    partial void OnBranchIdChanged();
    partial void OnINNumberChanging(string value);
    partial void OnINNumberChanged();
    partial void OnINManualNumberChanging(string value);
    partial void OnINManualNumberChanged();
    partial void OnINDateChanging(System.DateTime value);
    partial void OnINDateChanged();
    partial void OnPIIdChanging(System.Nullable<long> value);
    partial void OnPIIdChanged();
    partial void OnAccountIdChanging(long value);
    partial void OnAccountIdChanged();
    partial void OnArticleIdChanging(long value);
    partial void OnArticleIdChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnPreparedByIdChanging(long value);
    partial void OnPreparedByIdChanged();
    partial void OnCheckedByIdChanging(long value);
    partial void OnCheckedByIdChanged();
    partial void OnApprovedByIdChanging(long value);
    partial void OnApprovedByIdChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(long value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(long value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    partial void OnIsProducedChanging(bool value);
    partial void OnIsProducedChanged();
    #endregion
		
		public TrnStockIn()
		{
			this._MstArticleItemInventories = new EntitySet<MstArticleItemInventory>(new Action<MstArticleItemInventory>(this.attach_MstArticleItemInventories), new Action<MstArticleItemInventory>(this.detach_MstArticleItemInventories));
			this._TrnInventories = new EntitySet<TrnInventory>(new Action<TrnInventory>(this.attach_TrnInventories), new Action<TrnInventory>(this.detach_TrnInventories));
			this._TrnJournals = new EntitySet<TrnJournal>(new Action<TrnJournal>(this.attach_TrnJournals), new Action<TrnJournal>(this.detach_TrnJournals));
			this._TrnStockInLines = new EntitySet<TrnStockInLine>(new Action<TrnStockInLine>(this.attach_TrnStockInLines), new Action<TrnStockInLine>(this.detach_TrnStockInLines));
			this._TrnStockOuts = new EntitySet<TrnStockOut>(new Action<TrnStockOut>(this.attach_TrnStockOuts), new Action<TrnStockOut>(this.detach_TrnStockOuts));
			this._MstAccount = default(EntityRef<MstAccount>);
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstBranch = default(EntityRef<MstBranch>);
			this._MstPeriod = default(EntityRef<MstPeriod>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			this._MstUser3 = default(EntityRef<MstUser>);
			this._MstUser4 = default(EntityRef<MstUser>);
			this._TrnPurchaseInvoice = default(EntityRef<TrnPurchaseInvoice>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodId", DbType="BigInt NOT NULL")]
		public long PeriodId
		{
			get
			{
				return this._PeriodId;
			}
			set
			{
				if ((this._PeriodId != value))
				{
					if (this._MstPeriod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPeriodIdChanging(value);
					this.SendPropertyChanging();
					this._PeriodId = value;
					this.SendPropertyChanged("PeriodId");
					this.OnPeriodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="BigInt NOT NULL")]
		public long BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._MstBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string INNumber
		{
			get
			{
				return this._INNumber;
			}
			set
			{
				if ((this._INNumber != value))
				{
					this.OnINNumberChanging(value);
					this.SendPropertyChanging();
					this._INNumber = value;
					this.SendPropertyChanged("INNumber");
					this.OnINNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INManualNumber", DbType="NVarChar(50)")]
		public string INManualNumber
		{
			get
			{
				return this._INManualNumber;
			}
			set
			{
				if ((this._INManualNumber != value))
				{
					this.OnINManualNumberChanging(value);
					this.SendPropertyChanging();
					this._INManualNumber = value;
					this.SendPropertyChanged("INManualNumber");
					this.OnINManualNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INDate", DbType="DateTime NOT NULL")]
		public System.DateTime INDate
		{
			get
			{
				return this._INDate;
			}
			set
			{
				if ((this._INDate != value))
				{
					this.OnINDateChanging(value);
					this.SendPropertyChanging();
					this._INDate = value;
					this.SendPropertyChanged("INDate");
					this.OnINDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PIId", DbType="BigInt")]
		public System.Nullable<long> PIId
		{
			get
			{
				return this._PIId;
			}
			set
			{
				if ((this._PIId != value))
				{
					if (this._TrnPurchaseInvoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPIIdChanging(value);
					this.SendPropertyChanging();
					this._PIId = value;
					this.SendPropertyChanged("PIId");
					this.OnPIIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="BigInt NOT NULL")]
		public long AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._MstAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleId", DbType="BigInt NOT NULL")]
		public long ArticleId
		{
			get
			{
				return this._ArticleId;
			}
			set
			{
				if ((this._ArticleId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticleIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleId = value;
					this.SendPropertyChanged("ArticleId");
					this.OnArticleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedById", DbType="BigInt NOT NULL")]
		public long PreparedById
		{
			get
			{
				return this._PreparedById;
			}
			set
			{
				if ((this._PreparedById != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreparedByIdChanging(value);
					this.SendPropertyChanging();
					this._PreparedById = value;
					this.SendPropertyChanged("PreparedById");
					this.OnPreparedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedById", DbType="BigInt NOT NULL")]
		public long CheckedById
		{
			get
			{
				return this._CheckedById;
			}
			set
			{
				if ((this._CheckedById != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckedByIdChanging(value);
					this.SendPropertyChanging();
					this._CheckedById = value;
					this.SendPropertyChanged("CheckedById");
					this.OnCheckedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedById", DbType="BigInt NOT NULL")]
		public long ApprovedById
		{
			get
			{
				return this._ApprovedById;
			}
			set
			{
				if ((this._ApprovedById != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApprovedByIdChanging(value);
					this.SendPropertyChanging();
					this._ApprovedById = value;
					this.SendPropertyChanged("ApprovedById");
					this.OnApprovedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="BigInt NOT NULL")]
		public long CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					if (this._MstUser3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="BigInt NOT NULL")]
		public long UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					if (this._MstUser4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsProduced", DbType="Bit NOT NULL")]
		public bool IsProduced
		{
			get
			{
				return this._IsProduced;
			}
			set
			{
				if ((this._IsProduced != value))
				{
					this.OnIsProducedChanging(value);
					this.SendPropertyChanging();
					this._IsProduced = value;
					this.SendPropertyChanged("IsProduced");
					this.OnIsProducedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockIn_MstArticleItemInventory", Storage="_MstArticleItemInventories", ThisKey="Id", OtherKey="INId")]
		public EntitySet<MstArticleItemInventory> MstArticleItemInventories
		{
			get
			{
				return this._MstArticleItemInventories;
			}
			set
			{
				this._MstArticleItemInventories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockIn_TrnInventory", Storage="_TrnInventories", ThisKey="Id", OtherKey="INId")]
		public EntitySet<TrnInventory> TrnInventories
		{
			get
			{
				return this._TrnInventories;
			}
			set
			{
				this._TrnInventories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockIn_TrnJournal", Storage="_TrnJournals", ThisKey="Id", OtherKey="INId")]
		public EntitySet<TrnJournal> TrnJournals
		{
			get
			{
				return this._TrnJournals;
			}
			set
			{
				this._TrnJournals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockIn_TrnStockInLine", Storage="_TrnStockInLines", ThisKey="Id", OtherKey="INId")]
		public EntitySet<TrnStockInLine> TrnStockInLines
		{
			get
			{
				return this._TrnStockInLines;
			}
			set
			{
				this._TrnStockInLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockIn_TrnStockOut", Storage="_TrnStockOuts", ThisKey="Id", OtherKey="INId")]
		public EntitySet<TrnStockOut> TrnStockOuts
		{
			get
			{
				return this._TrnStockOuts;
			}
			set
			{
				this._TrnStockOuts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_TrnStockIn", Storage="_MstAccount", ThisKey="AccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount
		{
			get
			{
				return this._MstAccount.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount.Entity = null;
						previousValue.TrnStockIns.Remove(this);
					}
					this._MstAccount.Entity = value;
					if ((value != null))
					{
						value.TrnStockIns.Add(this);
						this._AccountId = value.Id;
					}
					else
					{
						this._AccountId = default(long);
					}
					this.SendPropertyChanged("MstAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnStockIn", Storage="_MstArticle", ThisKey="ArticleId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.TrnStockIns.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.TrnStockIns.Add(this);
						this._ArticleId = value.Id;
					}
					else
					{
						this._ArticleId = default(long);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnStockIn", Storage="_MstBranch", ThisKey="BranchId", OtherKey="Id", IsForeignKey=true)]
		public MstBranch MstBranch
		{
			get
			{
				return this._MstBranch.Entity;
			}
			set
			{
				MstBranch previousValue = this._MstBranch.Entity;
				if (((previousValue != value) 
							|| (this._MstBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBranch.Entity = null;
						previousValue.TrnStockIns.Remove(this);
					}
					this._MstBranch.Entity = value;
					if ((value != null))
					{
						value.TrnStockIns.Add(this);
						this._BranchId = value.Id;
					}
					else
					{
						this._BranchId = default(long);
					}
					this.SendPropertyChanged("MstBranch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_TrnStockIn", Storage="_MstPeriod", ThisKey="PeriodId", OtherKey="Id", IsForeignKey=true)]
		public MstPeriod MstPeriod
		{
			get
			{
				return this._MstPeriod.Entity;
			}
			set
			{
				MstPeriod previousValue = this._MstPeriod.Entity;
				if (((previousValue != value) 
							|| (this._MstPeriod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPeriod.Entity = null;
						previousValue.TrnStockIns.Remove(this);
					}
					this._MstPeriod.Entity = value;
					if ((value != null))
					{
						value.TrnStockIns.Add(this);
						this._PeriodId = value.Id;
					}
					else
					{
						this._PeriodId = default(long);
					}
					this.SendPropertyChanged("MstPeriod");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockIn", Storage="_MstUser", ThisKey="PreparedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.TrnStockIns.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.TrnStockIns.Add(this);
						this._PreparedById = value.Id;
					}
					else
					{
						this._PreparedById = default(long);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockIn1", Storage="_MstUser1", ThisKey="CheckedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.TrnStockIns1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.TrnStockIns1.Add(this);
						this._CheckedById = value.Id;
					}
					else
					{
						this._CheckedById = default(long);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockIn2", Storage="_MstUser2", ThisKey="ApprovedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.TrnStockIns2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.TrnStockIns2.Add(this);
						this._ApprovedById = value.Id;
					}
					else
					{
						this._ApprovedById = default(long);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockIn3", Storage="_MstUser3", ThisKey="CreatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser3
		{
			get
			{
				return this._MstUser3.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser3.Entity;
				if (((previousValue != value) 
							|| (this._MstUser3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser3.Entity = null;
						previousValue.TrnStockIns3.Remove(this);
					}
					this._MstUser3.Entity = value;
					if ((value != null))
					{
						value.TrnStockIns3.Add(this);
						this._CreatedById = value.Id;
					}
					else
					{
						this._CreatedById = default(long);
					}
					this.SendPropertyChanged("MstUser3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockIn4", Storage="_MstUser4", ThisKey="UpdatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser4
		{
			get
			{
				return this._MstUser4.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser4.Entity;
				if (((previousValue != value) 
							|| (this._MstUser4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser4.Entity = null;
						previousValue.TrnStockIns4.Remove(this);
					}
					this._MstUser4.Entity = value;
					if ((value != null))
					{
						value.TrnStockIns4.Add(this);
						this._UpdatedById = value.Id;
					}
					else
					{
						this._UpdatedById = default(long);
					}
					this.SendPropertyChanged("MstUser4");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnPurchaseInvoice_TrnStockIn", Storage="_TrnPurchaseInvoice", ThisKey="PIId", OtherKey="Id", IsForeignKey=true)]
		public TrnPurchaseInvoice TrnPurchaseInvoice
		{
			get
			{
				return this._TrnPurchaseInvoice.Entity;
			}
			set
			{
				TrnPurchaseInvoice previousValue = this._TrnPurchaseInvoice.Entity;
				if (((previousValue != value) 
							|| (this._TrnPurchaseInvoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnPurchaseInvoice.Entity = null;
						previousValue.TrnStockIns.Remove(this);
					}
					this._TrnPurchaseInvoice.Entity = value;
					if ((value != null))
					{
						value.TrnStockIns.Add(this);
						this._PIId = value.Id;
					}
					else
					{
						this._PIId = default(Nullable<long>);
					}
					this.SendPropertyChanged("TrnPurchaseInvoice");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstArticleItemInventories(MstArticleItemInventory entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockIn = this;
		}
		
		private void detach_MstArticleItemInventories(MstArticleItemInventory entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockIn = null;
		}
		
		private void attach_TrnInventories(TrnInventory entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockIn = this;
		}
		
		private void detach_TrnInventories(TrnInventory entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockIn = null;
		}
		
		private void attach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockIn = this;
		}
		
		private void detach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockIn = null;
		}
		
		private void attach_TrnStockInLines(TrnStockInLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockIn = this;
		}
		
		private void detach_TrnStockInLines(TrnStockInLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockIn = null;
		}
		
		private void attach_TrnStockOuts(TrnStockOut entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockIn = this;
		}
		
		private void detach_TrnStockOuts(TrnStockOut entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockIn = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnStockInLine")]
	public partial class TrnStockInLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _INId;
		
		private long _ItemId;
		
		private System.Nullable<long> _ItemInventoryId;
		
		private string _Particulars;
		
		private long _UnitId;
		
		private decimal _Cost;
		
		private decimal _Quantity;
		
		private decimal _Amount;
		
		private long _BaseUnitId;
		
		private decimal _BaseQuantity;
		
		private decimal _BaseCost;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstArticleItemInventory> _MstArticleItemInventory;
		
		private EntityRef<MstUnit> _MstUnit;
		
		private EntityRef<MstUnit> _MstUnit1;
		
		private EntityRef<TrnStockIn> _TrnStockIn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnINIdChanging(long value);
    partial void OnINIdChanged();
    partial void OnItemIdChanging(long value);
    partial void OnItemIdChanged();
    partial void OnItemInventoryIdChanging(System.Nullable<long> value);
    partial void OnItemInventoryIdChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnUnitIdChanging(long value);
    partial void OnUnitIdChanged();
    partial void OnCostChanging(decimal value);
    partial void OnCostChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnBaseUnitIdChanging(long value);
    partial void OnBaseUnitIdChanged();
    partial void OnBaseQuantityChanging(decimal value);
    partial void OnBaseQuantityChanged();
    partial void OnBaseCostChanging(decimal value);
    partial void OnBaseCostChanged();
    #endregion
		
		public TrnStockInLine()
		{
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstArticleItemInventory = default(EntityRef<MstArticleItemInventory>);
			this._MstUnit = default(EntityRef<MstUnit>);
			this._MstUnit1 = default(EntityRef<MstUnit>);
			this._TrnStockIn = default(EntityRef<TrnStockIn>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INId", DbType="BigInt NOT NULL")]
		public long INId
		{
			get
			{
				return this._INId;
			}
			set
			{
				if ((this._INId != value))
				{
					if (this._TrnStockIn.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnINIdChanging(value);
					this.SendPropertyChanging();
					this._INId = value;
					this.SendPropertyChanged("INId");
					this.OnINIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="BigInt NOT NULL")]
		public long ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemInventoryId", DbType="BigInt")]
		public System.Nullable<long> ItemInventoryId
		{
			get
			{
				return this._ItemInventoryId;
			}
			set
			{
				if ((this._ItemInventoryId != value))
				{
					if (this._MstArticleItemInventory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemInventoryIdChanging(value);
					this.SendPropertyChanging();
					this._ItemInventoryId = value;
					this.SendPropertyChanged("ItemInventoryId");
					this.OnItemInventoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255)")]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="BigInt NOT NULL")]
		public long UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._MstUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(18,5) NOT NULL")]
		public decimal Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseUnitId", DbType="BigInt NOT NULL")]
		public long BaseUnitId
		{
			get
			{
				return this._BaseUnitId;
			}
			set
			{
				if ((this._BaseUnitId != value))
				{
					if (this._MstUnit1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBaseUnitIdChanging(value);
					this.SendPropertyChanging();
					this._BaseUnitId = value;
					this.SendPropertyChanged("BaseUnitId");
					this.OnBaseUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseQuantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal BaseQuantity
		{
			get
			{
				return this._BaseQuantity;
			}
			set
			{
				if ((this._BaseQuantity != value))
				{
					this.OnBaseQuantityChanging(value);
					this.SendPropertyChanging();
					this._BaseQuantity = value;
					this.SendPropertyChanged("BaseQuantity");
					this.OnBaseQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseCost", DbType="Decimal(18,5) NOT NULL")]
		public decimal BaseCost
		{
			get
			{
				return this._BaseCost;
			}
			set
			{
				if ((this._BaseCost != value))
				{
					this.OnBaseCostChanging(value);
					this.SendPropertyChanging();
					this._BaseCost = value;
					this.SendPropertyChanged("BaseCost");
					this.OnBaseCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnStockInLine", Storage="_MstArticle", ThisKey="ItemId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.TrnStockInLines.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.TrnStockInLines.Add(this);
						this._ItemId = value.Id;
					}
					else
					{
						this._ItemId = default(long);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleItemInventory_TrnStockInLine", Storage="_MstArticleItemInventory", ThisKey="ItemInventoryId", OtherKey="Id", IsForeignKey=true)]
		public MstArticleItemInventory MstArticleItemInventory
		{
			get
			{
				return this._MstArticleItemInventory.Entity;
			}
			set
			{
				MstArticleItemInventory previousValue = this._MstArticleItemInventory.Entity;
				if (((previousValue != value) 
							|| (this._MstArticleItemInventory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticleItemInventory.Entity = null;
						previousValue.TrnStockInLines.Remove(this);
					}
					this._MstArticleItemInventory.Entity = value;
					if ((value != null))
					{
						value.TrnStockInLines.Add(this);
						this._ItemInventoryId = value.Id;
					}
					else
					{
						this._ItemInventoryId = default(Nullable<long>);
					}
					this.SendPropertyChanged("MstArticleItemInventory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnStockInLine", Storage="_MstUnit", ThisKey="UnitId", OtherKey="Id", IsForeignKey=true)]
		public MstUnit MstUnit
		{
			get
			{
				return this._MstUnit.Entity;
			}
			set
			{
				MstUnit previousValue = this._MstUnit.Entity;
				if (((previousValue != value) 
							|| (this._MstUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUnit.Entity = null;
						previousValue.TrnStockInLines.Remove(this);
					}
					this._MstUnit.Entity = value;
					if ((value != null))
					{
						value.TrnStockInLines.Add(this);
						this._UnitId = value.Id;
					}
					else
					{
						this._UnitId = default(long);
					}
					this.SendPropertyChanged("MstUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnStockInLine1", Storage="_MstUnit1", ThisKey="BaseUnitId", OtherKey="Id", IsForeignKey=true)]
		public MstUnit MstUnit1
		{
			get
			{
				return this._MstUnit1.Entity;
			}
			set
			{
				MstUnit previousValue = this._MstUnit1.Entity;
				if (((previousValue != value) 
							|| (this._MstUnit1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUnit1.Entity = null;
						previousValue.TrnStockInLines1.Remove(this);
					}
					this._MstUnit1.Entity = value;
					if ((value != null))
					{
						value.TrnStockInLines1.Add(this);
						this._BaseUnitId = value.Id;
					}
					else
					{
						this._BaseUnitId = default(long);
					}
					this.SendPropertyChanged("MstUnit1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockIn_TrnStockInLine", Storage="_TrnStockIn", ThisKey="INId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TrnStockIn TrnStockIn
		{
			get
			{
				return this._TrnStockIn.Entity;
			}
			set
			{
				TrnStockIn previousValue = this._TrnStockIn.Entity;
				if (((previousValue != value) 
							|| (this._TrnStockIn.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnStockIn.Entity = null;
						previousValue.TrnStockInLines.Remove(this);
					}
					this._TrnStockIn.Entity = value;
					if ((value != null))
					{
						value.TrnStockInLines.Add(this);
						this._INId = value.Id;
					}
					else
					{
						this._INId = default(long);
					}
					this.SendPropertyChanged("TrnStockIn");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnStockOut")]
	public partial class TrnStockOut : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _PeriodId;
		
		private long _BranchId;
		
		private string _OTNumber;
		
		private string _OTManualNumber;
		
		private System.DateTime _OTDate;
		
		private System.Nullable<long> _SIId;
		
		private long _AccountId;
		
		private long _ArticleId;
		
		private string _Particulars;
		
		private long _PreparedById;
		
		private long _CheckedById;
		
		private long _ApprovedById;
		
		private bool _IsLocked;
		
		private long _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private long _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private System.Nullable<long> _INId;
		
		private EntitySet<TrnInventory> _TrnInventories;
		
		private EntitySet<TrnJournal> _TrnJournals;
		
		private EntitySet<TrnStockOutLine> _TrnStockOutLines;
		
		private EntityRef<MstAccount> _MstAccount;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstBranch> _MstBranch;
		
		private EntityRef<MstPeriod> _MstPeriod;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
		private EntityRef<MstUser> _MstUser3;
		
		private EntityRef<MstUser> _MstUser4;
		
		private EntityRef<TrnSalesInvoice> _TrnSalesInvoice;
		
		private EntityRef<TrnStockIn> _TrnStockIn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnPeriodIdChanging(long value);
    partial void OnPeriodIdChanged();
    partial void OnBranchIdChanging(long value);
    partial void OnBranchIdChanged();
    partial void OnOTNumberChanging(string value);
    partial void OnOTNumberChanged();
    partial void OnOTManualNumberChanging(string value);
    partial void OnOTManualNumberChanged();
    partial void OnOTDateChanging(System.DateTime value);
    partial void OnOTDateChanged();
    partial void OnSIIdChanging(System.Nullable<long> value);
    partial void OnSIIdChanged();
    partial void OnAccountIdChanging(long value);
    partial void OnAccountIdChanged();
    partial void OnArticleIdChanging(long value);
    partial void OnArticleIdChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnPreparedByIdChanging(long value);
    partial void OnPreparedByIdChanged();
    partial void OnCheckedByIdChanging(long value);
    partial void OnCheckedByIdChanged();
    partial void OnApprovedByIdChanging(long value);
    partial void OnApprovedByIdChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(long value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(long value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    partial void OnINIdChanging(System.Nullable<long> value);
    partial void OnINIdChanged();
    #endregion
		
		public TrnStockOut()
		{
			this._TrnInventories = new EntitySet<TrnInventory>(new Action<TrnInventory>(this.attach_TrnInventories), new Action<TrnInventory>(this.detach_TrnInventories));
			this._TrnJournals = new EntitySet<TrnJournal>(new Action<TrnJournal>(this.attach_TrnJournals), new Action<TrnJournal>(this.detach_TrnJournals));
			this._TrnStockOutLines = new EntitySet<TrnStockOutLine>(new Action<TrnStockOutLine>(this.attach_TrnStockOutLines), new Action<TrnStockOutLine>(this.detach_TrnStockOutLines));
			this._MstAccount = default(EntityRef<MstAccount>);
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstBranch = default(EntityRef<MstBranch>);
			this._MstPeriod = default(EntityRef<MstPeriod>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			this._MstUser3 = default(EntityRef<MstUser>);
			this._MstUser4 = default(EntityRef<MstUser>);
			this._TrnSalesInvoice = default(EntityRef<TrnSalesInvoice>);
			this._TrnStockIn = default(EntityRef<TrnStockIn>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodId", DbType="BigInt NOT NULL")]
		public long PeriodId
		{
			get
			{
				return this._PeriodId;
			}
			set
			{
				if ((this._PeriodId != value))
				{
					if (this._MstPeriod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPeriodIdChanging(value);
					this.SendPropertyChanging();
					this._PeriodId = value;
					this.SendPropertyChanged("PeriodId");
					this.OnPeriodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="BigInt NOT NULL")]
		public long BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._MstBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OTNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string OTNumber
		{
			get
			{
				return this._OTNumber;
			}
			set
			{
				if ((this._OTNumber != value))
				{
					this.OnOTNumberChanging(value);
					this.SendPropertyChanging();
					this._OTNumber = value;
					this.SendPropertyChanged("OTNumber");
					this.OnOTNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OTManualNumber", DbType="NVarChar(50)")]
		public string OTManualNumber
		{
			get
			{
				return this._OTManualNumber;
			}
			set
			{
				if ((this._OTManualNumber != value))
				{
					this.OnOTManualNumberChanging(value);
					this.SendPropertyChanging();
					this._OTManualNumber = value;
					this.SendPropertyChanged("OTManualNumber");
					this.OnOTManualNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OTDate", DbType="DateTime NOT NULL")]
		public System.DateTime OTDate
		{
			get
			{
				return this._OTDate;
			}
			set
			{
				if ((this._OTDate != value))
				{
					this.OnOTDateChanging(value);
					this.SendPropertyChanging();
					this._OTDate = value;
					this.SendPropertyChanged("OTDate");
					this.OnOTDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIId", DbType="BigInt")]
		public System.Nullable<long> SIId
		{
			get
			{
				return this._SIId;
			}
			set
			{
				if ((this._SIId != value))
				{
					if (this._TrnSalesInvoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSIIdChanging(value);
					this.SendPropertyChanging();
					this._SIId = value;
					this.SendPropertyChanged("SIId");
					this.OnSIIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="BigInt NOT NULL")]
		public long AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._MstAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleId", DbType="BigInt NOT NULL")]
		public long ArticleId
		{
			get
			{
				return this._ArticleId;
			}
			set
			{
				if ((this._ArticleId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticleIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleId = value;
					this.SendPropertyChanged("ArticleId");
					this.OnArticleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedById", DbType="BigInt NOT NULL")]
		public long PreparedById
		{
			get
			{
				return this._PreparedById;
			}
			set
			{
				if ((this._PreparedById != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreparedByIdChanging(value);
					this.SendPropertyChanging();
					this._PreparedById = value;
					this.SendPropertyChanged("PreparedById");
					this.OnPreparedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedById", DbType="BigInt NOT NULL")]
		public long CheckedById
		{
			get
			{
				return this._CheckedById;
			}
			set
			{
				if ((this._CheckedById != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckedByIdChanging(value);
					this.SendPropertyChanging();
					this._CheckedById = value;
					this.SendPropertyChanged("CheckedById");
					this.OnCheckedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedById", DbType="BigInt NOT NULL")]
		public long ApprovedById
		{
			get
			{
				return this._ApprovedById;
			}
			set
			{
				if ((this._ApprovedById != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApprovedByIdChanging(value);
					this.SendPropertyChanging();
					this._ApprovedById = value;
					this.SendPropertyChanged("ApprovedById");
					this.OnApprovedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="BigInt NOT NULL")]
		public long CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					if (this._MstUser3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="BigInt NOT NULL")]
		public long UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					if (this._MstUser4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INId", DbType="BigInt")]
		public System.Nullable<long> INId
		{
			get
			{
				return this._INId;
			}
			set
			{
				if ((this._INId != value))
				{
					if (this._TrnStockIn.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnINIdChanging(value);
					this.SendPropertyChanging();
					this._INId = value;
					this.SendPropertyChanged("INId");
					this.OnINIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockOut_TrnInventory", Storage="_TrnInventories", ThisKey="Id", OtherKey="OTId")]
		public EntitySet<TrnInventory> TrnInventories
		{
			get
			{
				return this._TrnInventories;
			}
			set
			{
				this._TrnInventories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockOut_TrnJournal", Storage="_TrnJournals", ThisKey="Id", OtherKey="OTId")]
		public EntitySet<TrnJournal> TrnJournals
		{
			get
			{
				return this._TrnJournals;
			}
			set
			{
				this._TrnJournals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockOut_TrnStockOutLine", Storage="_TrnStockOutLines", ThisKey="Id", OtherKey="OTId")]
		public EntitySet<TrnStockOutLine> TrnStockOutLines
		{
			get
			{
				return this._TrnStockOutLines;
			}
			set
			{
				this._TrnStockOutLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_TrnStockOut", Storage="_MstAccount", ThisKey="AccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount
		{
			get
			{
				return this._MstAccount.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount.Entity = null;
						previousValue.TrnStockOuts.Remove(this);
					}
					this._MstAccount.Entity = value;
					if ((value != null))
					{
						value.TrnStockOuts.Add(this);
						this._AccountId = value.Id;
					}
					else
					{
						this._AccountId = default(long);
					}
					this.SendPropertyChanged("MstAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnStockOut", Storage="_MstArticle", ThisKey="ArticleId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.TrnStockOuts.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.TrnStockOuts.Add(this);
						this._ArticleId = value.Id;
					}
					else
					{
						this._ArticleId = default(long);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnStockOut", Storage="_MstBranch", ThisKey="BranchId", OtherKey="Id", IsForeignKey=true)]
		public MstBranch MstBranch
		{
			get
			{
				return this._MstBranch.Entity;
			}
			set
			{
				MstBranch previousValue = this._MstBranch.Entity;
				if (((previousValue != value) 
							|| (this._MstBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBranch.Entity = null;
						previousValue.TrnStockOuts.Remove(this);
					}
					this._MstBranch.Entity = value;
					if ((value != null))
					{
						value.TrnStockOuts.Add(this);
						this._BranchId = value.Id;
					}
					else
					{
						this._BranchId = default(long);
					}
					this.SendPropertyChanged("MstBranch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_TrnStockOut", Storage="_MstPeriod", ThisKey="PeriodId", OtherKey="Id", IsForeignKey=true)]
		public MstPeriod MstPeriod
		{
			get
			{
				return this._MstPeriod.Entity;
			}
			set
			{
				MstPeriod previousValue = this._MstPeriod.Entity;
				if (((previousValue != value) 
							|| (this._MstPeriod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPeriod.Entity = null;
						previousValue.TrnStockOuts.Remove(this);
					}
					this._MstPeriod.Entity = value;
					if ((value != null))
					{
						value.TrnStockOuts.Add(this);
						this._PeriodId = value.Id;
					}
					else
					{
						this._PeriodId = default(long);
					}
					this.SendPropertyChanged("MstPeriod");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockOut", Storage="_MstUser", ThisKey="PreparedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.TrnStockOuts.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.TrnStockOuts.Add(this);
						this._PreparedById = value.Id;
					}
					else
					{
						this._PreparedById = default(long);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockOut1", Storage="_MstUser1", ThisKey="CheckedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.TrnStockOuts1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.TrnStockOuts1.Add(this);
						this._CheckedById = value.Id;
					}
					else
					{
						this._CheckedById = default(long);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockOut2", Storage="_MstUser2", ThisKey="ApprovedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.TrnStockOuts2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.TrnStockOuts2.Add(this);
						this._ApprovedById = value.Id;
					}
					else
					{
						this._ApprovedById = default(long);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockOut3", Storage="_MstUser3", ThisKey="CreatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser3
		{
			get
			{
				return this._MstUser3.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser3.Entity;
				if (((previousValue != value) 
							|| (this._MstUser3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser3.Entity = null;
						previousValue.TrnStockOuts3.Remove(this);
					}
					this._MstUser3.Entity = value;
					if ((value != null))
					{
						value.TrnStockOuts3.Add(this);
						this._CreatedById = value.Id;
					}
					else
					{
						this._CreatedById = default(long);
					}
					this.SendPropertyChanged("MstUser3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockOut4", Storage="_MstUser4", ThisKey="UpdatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser4
		{
			get
			{
				return this._MstUser4.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser4.Entity;
				if (((previousValue != value) 
							|| (this._MstUser4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser4.Entity = null;
						previousValue.TrnStockOuts4.Remove(this);
					}
					this._MstUser4.Entity = value;
					if ((value != null))
					{
						value.TrnStockOuts4.Add(this);
						this._UpdatedById = value.Id;
					}
					else
					{
						this._UpdatedById = default(long);
					}
					this.SendPropertyChanged("MstUser4");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSalesInvoice_TrnStockOut", Storage="_TrnSalesInvoice", ThisKey="SIId", OtherKey="Id", IsForeignKey=true)]
		public TrnSalesInvoice TrnSalesInvoice
		{
			get
			{
				return this._TrnSalesInvoice.Entity;
			}
			set
			{
				TrnSalesInvoice previousValue = this._TrnSalesInvoice.Entity;
				if (((previousValue != value) 
							|| (this._TrnSalesInvoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnSalesInvoice.Entity = null;
						previousValue.TrnStockOuts.Remove(this);
					}
					this._TrnSalesInvoice.Entity = value;
					if ((value != null))
					{
						value.TrnStockOuts.Add(this);
						this._SIId = value.Id;
					}
					else
					{
						this._SIId = default(Nullable<long>);
					}
					this.SendPropertyChanged("TrnSalesInvoice");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockIn_TrnStockOut", Storage="_TrnStockIn", ThisKey="INId", OtherKey="Id", IsForeignKey=true)]
		public TrnStockIn TrnStockIn
		{
			get
			{
				return this._TrnStockIn.Entity;
			}
			set
			{
				TrnStockIn previousValue = this._TrnStockIn.Entity;
				if (((previousValue != value) 
							|| (this._TrnStockIn.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnStockIn.Entity = null;
						previousValue.TrnStockOuts.Remove(this);
					}
					this._TrnStockIn.Entity = value;
					if ((value != null))
					{
						value.TrnStockOuts.Add(this);
						this._INId = value.Id;
					}
					else
					{
						this._INId = default(Nullable<long>);
					}
					this.SendPropertyChanged("TrnStockIn");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnInventories(TrnInventory entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockOut = this;
		}
		
		private void detach_TrnInventories(TrnInventory entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockOut = null;
		}
		
		private void attach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockOut = this;
		}
		
		private void detach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockOut = null;
		}
		
		private void attach_TrnStockOutLines(TrnStockOutLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockOut = this;
		}
		
		private void detach_TrnStockOutLines(TrnStockOutLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockOut = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnStockOutLine")]
	public partial class TrnStockOutLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _OTId;
		
		private long _ItemId;
		
		private long _ItemInventoryId;
		
		private string _Particulars;
		
		private long _UnitId;
		
		private decimal _Cost;
		
		private decimal _Quantity;
		
		private decimal _Amount;
		
		private long _BaseUnitId;
		
		private decimal _BaseQuantity;
		
		private decimal _BaseCost;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstArticleItemInventory> _MstArticleItemInventory;
		
		private EntityRef<MstUnit> _MstUnit;
		
		private EntityRef<MstUnit> _MstUnit1;
		
		private EntityRef<TrnStockOut> _TrnStockOut;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnOTIdChanging(long value);
    partial void OnOTIdChanged();
    partial void OnItemIdChanging(long value);
    partial void OnItemIdChanged();
    partial void OnItemInventoryIdChanging(long value);
    partial void OnItemInventoryIdChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnUnitIdChanging(long value);
    partial void OnUnitIdChanged();
    partial void OnCostChanging(decimal value);
    partial void OnCostChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnBaseUnitIdChanging(long value);
    partial void OnBaseUnitIdChanged();
    partial void OnBaseQuantityChanging(decimal value);
    partial void OnBaseQuantityChanged();
    partial void OnBaseCostChanging(decimal value);
    partial void OnBaseCostChanged();
    #endregion
		
		public TrnStockOutLine()
		{
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstArticleItemInventory = default(EntityRef<MstArticleItemInventory>);
			this._MstUnit = default(EntityRef<MstUnit>);
			this._MstUnit1 = default(EntityRef<MstUnit>);
			this._TrnStockOut = default(EntityRef<TrnStockOut>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OTId", DbType="BigInt NOT NULL")]
		public long OTId
		{
			get
			{
				return this._OTId;
			}
			set
			{
				if ((this._OTId != value))
				{
					if (this._TrnStockOut.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOTIdChanging(value);
					this.SendPropertyChanging();
					this._OTId = value;
					this.SendPropertyChanged("OTId");
					this.OnOTIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="BigInt NOT NULL")]
		public long ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemInventoryId", DbType="BigInt NOT NULL")]
		public long ItemInventoryId
		{
			get
			{
				return this._ItemInventoryId;
			}
			set
			{
				if ((this._ItemInventoryId != value))
				{
					if (this._MstArticleItemInventory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemInventoryIdChanging(value);
					this.SendPropertyChanging();
					this._ItemInventoryId = value;
					this.SendPropertyChanged("ItemInventoryId");
					this.OnItemInventoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255)")]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="BigInt NOT NULL")]
		public long UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._MstUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(18,5) NOT NULL")]
		public decimal Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseUnitId", DbType="BigInt NOT NULL")]
		public long BaseUnitId
		{
			get
			{
				return this._BaseUnitId;
			}
			set
			{
				if ((this._BaseUnitId != value))
				{
					if (this._MstUnit1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBaseUnitIdChanging(value);
					this.SendPropertyChanging();
					this._BaseUnitId = value;
					this.SendPropertyChanged("BaseUnitId");
					this.OnBaseUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseQuantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal BaseQuantity
		{
			get
			{
				return this._BaseQuantity;
			}
			set
			{
				if ((this._BaseQuantity != value))
				{
					this.OnBaseQuantityChanging(value);
					this.SendPropertyChanging();
					this._BaseQuantity = value;
					this.SendPropertyChanged("BaseQuantity");
					this.OnBaseQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseCost", DbType="Decimal(18,5) NOT NULL")]
		public decimal BaseCost
		{
			get
			{
				return this._BaseCost;
			}
			set
			{
				if ((this._BaseCost != value))
				{
					this.OnBaseCostChanging(value);
					this.SendPropertyChanging();
					this._BaseCost = value;
					this.SendPropertyChanged("BaseCost");
					this.OnBaseCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnStockOutLine", Storage="_MstArticle", ThisKey="ItemId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.TrnStockOutLines.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.TrnStockOutLines.Add(this);
						this._ItemId = value.Id;
					}
					else
					{
						this._ItemId = default(long);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleItemInventory_TrnStockOutLine", Storage="_MstArticleItemInventory", ThisKey="ItemInventoryId", OtherKey="Id", IsForeignKey=true)]
		public MstArticleItemInventory MstArticleItemInventory
		{
			get
			{
				return this._MstArticleItemInventory.Entity;
			}
			set
			{
				MstArticleItemInventory previousValue = this._MstArticleItemInventory.Entity;
				if (((previousValue != value) 
							|| (this._MstArticleItemInventory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticleItemInventory.Entity = null;
						previousValue.TrnStockOutLines.Remove(this);
					}
					this._MstArticleItemInventory.Entity = value;
					if ((value != null))
					{
						value.TrnStockOutLines.Add(this);
						this._ItemInventoryId = value.Id;
					}
					else
					{
						this._ItemInventoryId = default(long);
					}
					this.SendPropertyChanged("MstArticleItemInventory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnStockOutLine", Storage="_MstUnit", ThisKey="UnitId", OtherKey="Id", IsForeignKey=true)]
		public MstUnit MstUnit
		{
			get
			{
				return this._MstUnit.Entity;
			}
			set
			{
				MstUnit previousValue = this._MstUnit.Entity;
				if (((previousValue != value) 
							|| (this._MstUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUnit.Entity = null;
						previousValue.TrnStockOutLines.Remove(this);
					}
					this._MstUnit.Entity = value;
					if ((value != null))
					{
						value.TrnStockOutLines.Add(this);
						this._UnitId = value.Id;
					}
					else
					{
						this._UnitId = default(long);
					}
					this.SendPropertyChanged("MstUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnStockOutLine1", Storage="_MstUnit1", ThisKey="BaseUnitId", OtherKey="Id", IsForeignKey=true)]
		public MstUnit MstUnit1
		{
			get
			{
				return this._MstUnit1.Entity;
			}
			set
			{
				MstUnit previousValue = this._MstUnit1.Entity;
				if (((previousValue != value) 
							|| (this._MstUnit1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUnit1.Entity = null;
						previousValue.TrnStockOutLines1.Remove(this);
					}
					this._MstUnit1.Entity = value;
					if ((value != null))
					{
						value.TrnStockOutLines1.Add(this);
						this._BaseUnitId = value.Id;
					}
					else
					{
						this._BaseUnitId = default(long);
					}
					this.SendPropertyChanged("MstUnit1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockOut_TrnStockOutLine", Storage="_TrnStockOut", ThisKey="OTId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TrnStockOut TrnStockOut
		{
			get
			{
				return this._TrnStockOut.Entity;
			}
			set
			{
				TrnStockOut previousValue = this._TrnStockOut.Entity;
				if (((previousValue != value) 
							|| (this._TrnStockOut.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnStockOut.Entity = null;
						previousValue.TrnStockOutLines.Remove(this);
					}
					this._TrnStockOut.Entity = value;
					if ((value != null))
					{
						value.TrnStockOutLines.Add(this);
						this._OTId = value.Id;
					}
					else
					{
						this._OTId = default(long);
					}
					this.SendPropertyChanged("TrnStockOut");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnStockTransfer")]
	public partial class TrnStockTransfer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _PeriodId;
		
		private long _BranchId;
		
		private string _STNumber;
		
		private string _STManualNumber;
		
		private System.DateTime _STDate;
		
		private long _ToBranchId;
		
		private long _AccountId;
		
		private long _ArticleId;
		
		private string _Particulars;
		
		private long _PreparedById;
		
		private long _CheckedById;
		
		private long _ApprovedById;
		
		private bool _IsLocked;
		
		private long _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private long _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<MstArticleItemInventory> _MstArticleItemInventories;
		
		private EntitySet<TrnInventory> _TrnInventories;
		
		private EntitySet<TrnJournal> _TrnJournals;
		
		private EntitySet<TrnStockTransferLine> _TrnStockTransferLines;
		
		private EntityRef<MstAccount> _MstAccount;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstBranch> _MstBranch;
		
		private EntityRef<MstBranch> _MstBranch1;
		
		private EntityRef<MstPeriod> _MstPeriod;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
		private EntityRef<MstUser> _MstUser3;
		
		private EntityRef<MstUser> _MstUser4;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnPeriodIdChanging(long value);
    partial void OnPeriodIdChanged();
    partial void OnBranchIdChanging(long value);
    partial void OnBranchIdChanged();
    partial void OnSTNumberChanging(string value);
    partial void OnSTNumberChanged();
    partial void OnSTManualNumberChanging(string value);
    partial void OnSTManualNumberChanged();
    partial void OnSTDateChanging(System.DateTime value);
    partial void OnSTDateChanged();
    partial void OnToBranchIdChanging(long value);
    partial void OnToBranchIdChanged();
    partial void OnAccountIdChanging(long value);
    partial void OnAccountIdChanged();
    partial void OnArticleIdChanging(long value);
    partial void OnArticleIdChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnPreparedByIdChanging(long value);
    partial void OnPreparedByIdChanged();
    partial void OnCheckedByIdChanging(long value);
    partial void OnCheckedByIdChanged();
    partial void OnApprovedByIdChanging(long value);
    partial void OnApprovedByIdChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(long value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(long value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public TrnStockTransfer()
		{
			this._MstArticleItemInventories = new EntitySet<MstArticleItemInventory>(new Action<MstArticleItemInventory>(this.attach_MstArticleItemInventories), new Action<MstArticleItemInventory>(this.detach_MstArticleItemInventories));
			this._TrnInventories = new EntitySet<TrnInventory>(new Action<TrnInventory>(this.attach_TrnInventories), new Action<TrnInventory>(this.detach_TrnInventories));
			this._TrnJournals = new EntitySet<TrnJournal>(new Action<TrnJournal>(this.attach_TrnJournals), new Action<TrnJournal>(this.detach_TrnJournals));
			this._TrnStockTransferLines = new EntitySet<TrnStockTransferLine>(new Action<TrnStockTransferLine>(this.attach_TrnStockTransferLines), new Action<TrnStockTransferLine>(this.detach_TrnStockTransferLines));
			this._MstAccount = default(EntityRef<MstAccount>);
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstBranch = default(EntityRef<MstBranch>);
			this._MstBranch1 = default(EntityRef<MstBranch>);
			this._MstPeriod = default(EntityRef<MstPeriod>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			this._MstUser3 = default(EntityRef<MstUser>);
			this._MstUser4 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodId", DbType="BigInt NOT NULL")]
		public long PeriodId
		{
			get
			{
				return this._PeriodId;
			}
			set
			{
				if ((this._PeriodId != value))
				{
					if (this._MstPeriod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPeriodIdChanging(value);
					this.SendPropertyChanging();
					this._PeriodId = value;
					this.SendPropertyChanged("PeriodId");
					this.OnPeriodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="BigInt NOT NULL")]
		public long BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._MstBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string STNumber
		{
			get
			{
				return this._STNumber;
			}
			set
			{
				if ((this._STNumber != value))
				{
					this.OnSTNumberChanging(value);
					this.SendPropertyChanging();
					this._STNumber = value;
					this.SendPropertyChanged("STNumber");
					this.OnSTNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STManualNumber", DbType="NVarChar(50)")]
		public string STManualNumber
		{
			get
			{
				return this._STManualNumber;
			}
			set
			{
				if ((this._STManualNumber != value))
				{
					this.OnSTManualNumberChanging(value);
					this.SendPropertyChanging();
					this._STManualNumber = value;
					this.SendPropertyChanged("STManualNumber");
					this.OnSTManualNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STDate", DbType="DateTime NOT NULL")]
		public System.DateTime STDate
		{
			get
			{
				return this._STDate;
			}
			set
			{
				if ((this._STDate != value))
				{
					this.OnSTDateChanging(value);
					this.SendPropertyChanging();
					this._STDate = value;
					this.SendPropertyChanged("STDate");
					this.OnSTDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToBranchId", DbType="BigInt NOT NULL")]
		public long ToBranchId
		{
			get
			{
				return this._ToBranchId;
			}
			set
			{
				if ((this._ToBranchId != value))
				{
					if (this._MstBranch1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnToBranchIdChanging(value);
					this.SendPropertyChanging();
					this._ToBranchId = value;
					this.SendPropertyChanged("ToBranchId");
					this.OnToBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="BigInt NOT NULL")]
		public long AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._MstAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleId", DbType="BigInt NOT NULL")]
		public long ArticleId
		{
			get
			{
				return this._ArticleId;
			}
			set
			{
				if ((this._ArticleId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticleIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleId = value;
					this.SendPropertyChanged("ArticleId");
					this.OnArticleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedById", DbType="BigInt NOT NULL")]
		public long PreparedById
		{
			get
			{
				return this._PreparedById;
			}
			set
			{
				if ((this._PreparedById != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreparedByIdChanging(value);
					this.SendPropertyChanging();
					this._PreparedById = value;
					this.SendPropertyChanged("PreparedById");
					this.OnPreparedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedById", DbType="BigInt NOT NULL")]
		public long CheckedById
		{
			get
			{
				return this._CheckedById;
			}
			set
			{
				if ((this._CheckedById != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckedByIdChanging(value);
					this.SendPropertyChanging();
					this._CheckedById = value;
					this.SendPropertyChanged("CheckedById");
					this.OnCheckedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedById", DbType="BigInt NOT NULL")]
		public long ApprovedById
		{
			get
			{
				return this._ApprovedById;
			}
			set
			{
				if ((this._ApprovedById != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApprovedByIdChanging(value);
					this.SendPropertyChanging();
					this._ApprovedById = value;
					this.SendPropertyChanged("ApprovedById");
					this.OnApprovedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="BigInt NOT NULL")]
		public long CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					if (this._MstUser3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="BigInt NOT NULL")]
		public long UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					if (this._MstUser4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockTransfer_MstArticleItemInventory", Storage="_MstArticleItemInventories", ThisKey="Id", OtherKey="STId")]
		public EntitySet<MstArticleItemInventory> MstArticleItemInventories
		{
			get
			{
				return this._MstArticleItemInventories;
			}
			set
			{
				this._MstArticleItemInventories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockTransfer_TrnInventory", Storage="_TrnInventories", ThisKey="Id", OtherKey="STId")]
		public EntitySet<TrnInventory> TrnInventories
		{
			get
			{
				return this._TrnInventories;
			}
			set
			{
				this._TrnInventories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockTransfer_TrnJournal", Storage="_TrnJournals", ThisKey="Id", OtherKey="STId")]
		public EntitySet<TrnJournal> TrnJournals
		{
			get
			{
				return this._TrnJournals;
			}
			set
			{
				this._TrnJournals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockTransfer_TrnStockTransferLine", Storage="_TrnStockTransferLines", ThisKey="Id", OtherKey="STId")]
		public EntitySet<TrnStockTransferLine> TrnStockTransferLines
		{
			get
			{
				return this._TrnStockTransferLines;
			}
			set
			{
				this._TrnStockTransferLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_TrnStockTransfer", Storage="_MstAccount", ThisKey="AccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount
		{
			get
			{
				return this._MstAccount.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount.Entity = null;
						previousValue.TrnStockTransfers.Remove(this);
					}
					this._MstAccount.Entity = value;
					if ((value != null))
					{
						value.TrnStockTransfers.Add(this);
						this._AccountId = value.Id;
					}
					else
					{
						this._AccountId = default(long);
					}
					this.SendPropertyChanged("MstAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnStockTransfer", Storage="_MstArticle", ThisKey="ArticleId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.TrnStockTransfers.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.TrnStockTransfers.Add(this);
						this._ArticleId = value.Id;
					}
					else
					{
						this._ArticleId = default(long);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnStockTransfer", Storage="_MstBranch", ThisKey="BranchId", OtherKey="Id", IsForeignKey=true)]
		public MstBranch MstBranch
		{
			get
			{
				return this._MstBranch.Entity;
			}
			set
			{
				MstBranch previousValue = this._MstBranch.Entity;
				if (((previousValue != value) 
							|| (this._MstBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBranch.Entity = null;
						previousValue.TrnStockTransfers.Remove(this);
					}
					this._MstBranch.Entity = value;
					if ((value != null))
					{
						value.TrnStockTransfers.Add(this);
						this._BranchId = value.Id;
					}
					else
					{
						this._BranchId = default(long);
					}
					this.SendPropertyChanged("MstBranch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnStockTransfer1", Storage="_MstBranch1", ThisKey="ToBranchId", OtherKey="Id", IsForeignKey=true)]
		public MstBranch MstBranch1
		{
			get
			{
				return this._MstBranch1.Entity;
			}
			set
			{
				MstBranch previousValue = this._MstBranch1.Entity;
				if (((previousValue != value) 
							|| (this._MstBranch1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBranch1.Entity = null;
						previousValue.TrnStockTransfers1.Remove(this);
					}
					this._MstBranch1.Entity = value;
					if ((value != null))
					{
						value.TrnStockTransfers1.Add(this);
						this._ToBranchId = value.Id;
					}
					else
					{
						this._ToBranchId = default(long);
					}
					this.SendPropertyChanged("MstBranch1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPeriod_TrnStockTransfer", Storage="_MstPeriod", ThisKey="PeriodId", OtherKey="Id", IsForeignKey=true)]
		public MstPeriod MstPeriod
		{
			get
			{
				return this._MstPeriod.Entity;
			}
			set
			{
				MstPeriod previousValue = this._MstPeriod.Entity;
				if (((previousValue != value) 
							|| (this._MstPeriod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPeriod.Entity = null;
						previousValue.TrnStockTransfers.Remove(this);
					}
					this._MstPeriod.Entity = value;
					if ((value != null))
					{
						value.TrnStockTransfers.Add(this);
						this._PeriodId = value.Id;
					}
					else
					{
						this._PeriodId = default(long);
					}
					this.SendPropertyChanged("MstPeriod");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockTransfer", Storage="_MstUser", ThisKey="PreparedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.TrnStockTransfers.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.TrnStockTransfers.Add(this);
						this._PreparedById = value.Id;
					}
					else
					{
						this._PreparedById = default(long);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockTransfer1", Storage="_MstUser1", ThisKey="CheckedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.TrnStockTransfers1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.TrnStockTransfers1.Add(this);
						this._CheckedById = value.Id;
					}
					else
					{
						this._CheckedById = default(long);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockTransfer2", Storage="_MstUser2", ThisKey="ApprovedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.TrnStockTransfers2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.TrnStockTransfers2.Add(this);
						this._ApprovedById = value.Id;
					}
					else
					{
						this._ApprovedById = default(long);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockTransfer3", Storage="_MstUser3", ThisKey="CreatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser3
		{
			get
			{
				return this._MstUser3.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser3.Entity;
				if (((previousValue != value) 
							|| (this._MstUser3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser3.Entity = null;
						previousValue.TrnStockTransfers3.Remove(this);
					}
					this._MstUser3.Entity = value;
					if ((value != null))
					{
						value.TrnStockTransfers3.Add(this);
						this._CreatedById = value.Id;
					}
					else
					{
						this._CreatedById = default(long);
					}
					this.SendPropertyChanged("MstUser3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnStockTransfer4", Storage="_MstUser4", ThisKey="UpdatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser4
		{
			get
			{
				return this._MstUser4.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser4.Entity;
				if (((previousValue != value) 
							|| (this._MstUser4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser4.Entity = null;
						previousValue.TrnStockTransfers4.Remove(this);
					}
					this._MstUser4.Entity = value;
					if ((value != null))
					{
						value.TrnStockTransfers4.Add(this);
						this._UpdatedById = value.Id;
					}
					else
					{
						this._UpdatedById = default(long);
					}
					this.SendPropertyChanged("MstUser4");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstArticleItemInventories(MstArticleItemInventory entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockTransfer = this;
		}
		
		private void detach_MstArticleItemInventories(MstArticleItemInventory entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockTransfer = null;
		}
		
		private void attach_TrnInventories(TrnInventory entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockTransfer = this;
		}
		
		private void detach_TrnInventories(TrnInventory entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockTransfer = null;
		}
		
		private void attach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockTransfer = this;
		}
		
		private void detach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockTransfer = null;
		}
		
		private void attach_TrnStockTransferLines(TrnStockTransferLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockTransfer = this;
		}
		
		private void detach_TrnStockTransferLines(TrnStockTransferLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockTransfer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnStockTransferLine")]
	public partial class TrnStockTransferLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _STId;
		
		private long _ItemId;
		
		private long _ItemInventoryId;
		
		private string _Particulars;
		
		private long _UnitId;
		
		private decimal _Cost;
		
		private decimal _Quantity;
		
		private decimal _Amount;
		
		private long _BaseUnitId;
		
		private decimal _BaseQuantity;
		
		private decimal _BaseCost;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstArticleItemInventory> _MstArticleItemInventory;
		
		private EntityRef<MstUnit> _MstUnit;
		
		private EntityRef<MstUnit> _MstUnit1;
		
		private EntityRef<TrnStockTransfer> _TrnStockTransfer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnSTIdChanging(long value);
    partial void OnSTIdChanged();
    partial void OnItemIdChanging(long value);
    partial void OnItemIdChanged();
    partial void OnItemInventoryIdChanging(long value);
    partial void OnItemInventoryIdChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnUnitIdChanging(long value);
    partial void OnUnitIdChanged();
    partial void OnCostChanging(decimal value);
    partial void OnCostChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnBaseUnitIdChanging(long value);
    partial void OnBaseUnitIdChanged();
    partial void OnBaseQuantityChanging(decimal value);
    partial void OnBaseQuantityChanged();
    partial void OnBaseCostChanging(decimal value);
    partial void OnBaseCostChanged();
    #endregion
		
		public TrnStockTransferLine()
		{
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstArticleItemInventory = default(EntityRef<MstArticleItemInventory>);
			this._MstUnit = default(EntityRef<MstUnit>);
			this._MstUnit1 = default(EntityRef<MstUnit>);
			this._TrnStockTransfer = default(EntityRef<TrnStockTransfer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STId", DbType="BigInt NOT NULL")]
		public long STId
		{
			get
			{
				return this._STId;
			}
			set
			{
				if ((this._STId != value))
				{
					if (this._TrnStockTransfer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSTIdChanging(value);
					this.SendPropertyChanging();
					this._STId = value;
					this.SendPropertyChanged("STId");
					this.OnSTIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="BigInt NOT NULL")]
		public long ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemInventoryId", DbType="BigInt NOT NULL")]
		public long ItemInventoryId
		{
			get
			{
				return this._ItemInventoryId;
			}
			set
			{
				if ((this._ItemInventoryId != value))
				{
					if (this._MstArticleItemInventory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemInventoryIdChanging(value);
					this.SendPropertyChanging();
					this._ItemInventoryId = value;
					this.SendPropertyChanged("ItemInventoryId");
					this.OnItemInventoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255)")]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="BigInt NOT NULL")]
		public long UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._MstUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(18,5) NOT NULL")]
		public decimal Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseUnitId", DbType="BigInt NOT NULL")]
		public long BaseUnitId
		{
			get
			{
				return this._BaseUnitId;
			}
			set
			{
				if ((this._BaseUnitId != value))
				{
					if (this._MstUnit1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBaseUnitIdChanging(value);
					this.SendPropertyChanging();
					this._BaseUnitId = value;
					this.SendPropertyChanged("BaseUnitId");
					this.OnBaseUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseQuantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal BaseQuantity
		{
			get
			{
				return this._BaseQuantity;
			}
			set
			{
				if ((this._BaseQuantity != value))
				{
					this.OnBaseQuantityChanging(value);
					this.SendPropertyChanging();
					this._BaseQuantity = value;
					this.SendPropertyChanged("BaseQuantity");
					this.OnBaseQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseCost", DbType="Decimal(18,5) NOT NULL")]
		public decimal BaseCost
		{
			get
			{
				return this._BaseCost;
			}
			set
			{
				if ((this._BaseCost != value))
				{
					this.OnBaseCostChanging(value);
					this.SendPropertyChanging();
					this._BaseCost = value;
					this.SendPropertyChanged("BaseCost");
					this.OnBaseCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnStockTransferLine", Storage="_MstArticle", ThisKey="ItemId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.TrnStockTransferLines.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.TrnStockTransferLines.Add(this);
						this._ItemId = value.Id;
					}
					else
					{
						this._ItemId = default(long);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleItemInventory_TrnStockTransferLine", Storage="_MstArticleItemInventory", ThisKey="ItemInventoryId", OtherKey="Id", IsForeignKey=true)]
		public MstArticleItemInventory MstArticleItemInventory
		{
			get
			{
				return this._MstArticleItemInventory.Entity;
			}
			set
			{
				MstArticleItemInventory previousValue = this._MstArticleItemInventory.Entity;
				if (((previousValue != value) 
							|| (this._MstArticleItemInventory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticleItemInventory.Entity = null;
						previousValue.TrnStockTransferLines.Remove(this);
					}
					this._MstArticleItemInventory.Entity = value;
					if ((value != null))
					{
						value.TrnStockTransferLines.Add(this);
						this._ItemInventoryId = value.Id;
					}
					else
					{
						this._ItemInventoryId = default(long);
					}
					this.SendPropertyChanged("MstArticleItemInventory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnStockTransferLine", Storage="_MstUnit", ThisKey="UnitId", OtherKey="Id", IsForeignKey=true)]
		public MstUnit MstUnit
		{
			get
			{
				return this._MstUnit.Entity;
			}
			set
			{
				MstUnit previousValue = this._MstUnit.Entity;
				if (((previousValue != value) 
							|| (this._MstUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUnit.Entity = null;
						previousValue.TrnStockTransferLines.Remove(this);
					}
					this._MstUnit.Entity = value;
					if ((value != null))
					{
						value.TrnStockTransferLines.Add(this);
						this._UnitId = value.Id;
					}
					else
					{
						this._UnitId = default(long);
					}
					this.SendPropertyChanged("MstUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnStockTransferLine1", Storage="_MstUnit1", ThisKey="BaseUnitId", OtherKey="Id", IsForeignKey=true)]
		public MstUnit MstUnit1
		{
			get
			{
				return this._MstUnit1.Entity;
			}
			set
			{
				MstUnit previousValue = this._MstUnit1.Entity;
				if (((previousValue != value) 
							|| (this._MstUnit1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUnit1.Entity = null;
						previousValue.TrnStockTransferLines1.Remove(this);
					}
					this._MstUnit1.Entity = value;
					if ((value != null))
					{
						value.TrnStockTransferLines1.Add(this);
						this._BaseUnitId = value.Id;
					}
					else
					{
						this._BaseUnitId = default(long);
					}
					this.SendPropertyChanged("MstUnit1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockTransfer_TrnStockTransferLine", Storage="_TrnStockTransfer", ThisKey="STId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TrnStockTransfer TrnStockTransfer
		{
			get
			{
				return this._TrnStockTransfer.Entity;
			}
			set
			{
				TrnStockTransfer previousValue = this._TrnStockTransfer.Entity;
				if (((previousValue != value) 
							|| (this._TrnStockTransfer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnStockTransfer.Entity = null;
						previousValue.TrnStockTransferLines.Remove(this);
					}
					this._TrnStockTransfer.Entity = value;
					if ((value != null))
					{
						value.TrnStockTransferLines.Add(this);
						this._STId = value.Id;
					}
					else
					{
						this._STId = default(long);
					}
					this.SendPropertyChanged("TrnStockTransfer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _UserName;
		
		private bool _IsAnonymous;
		
		private System.DateTime _LastActivityDate;
		
		private EntityRef<Membership> _Membership;
		
		private EntityRef<Profile> _Profile;
		
		private EntitySet<UsersInRole> _UsersInRoles;
		
		private EntityRef<Application> _Application;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnIsAnonymousChanging(bool value);
    partial void OnIsAnonymousChanged();
    partial void OnLastActivityDateChanging(System.DateTime value);
    partial void OnLastActivityDateChanged();
    #endregion
		
		public User()
		{
			this._Membership = default(EntityRef<Membership>);
			this._Profile = default(EntityRef<Profile>);
			this._UsersInRoles = new EntitySet<UsersInRole>(new Action<UsersInRole>(this.attach_UsersInRoles), new Action<UsersInRole>(this.detach_UsersInRoles));
			this._Application = default(EntityRef<Application>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
		public bool IsAnonymous
		{
			get
			{
				return this._IsAnonymous;
			}
			set
			{
				if ((this._IsAnonymous != value))
				{
					this.OnIsAnonymousChanging(value);
					this.SendPropertyChanging();
					this._IsAnonymous = value;
					this.SendPropertyChanged("IsAnonymous");
					this.OnIsAnonymousChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastActivityDate
		{
			get
			{
				return this._LastActivityDate;
			}
			set
			{
				if ((this._LastActivityDate != value))
				{
					this.OnLastActivityDateChanging(value);
					this.SendPropertyChanging();
					this._LastActivityDate = value;
					this.SendPropertyChanged("LastActivityDate");
					this.OnLastActivityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Membership", Storage="_Membership", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public Membership Membership
		{
			get
			{
				return this._Membership.Entity;
			}
			set
			{
				Membership previousValue = this._Membership.Entity;
				if (((previousValue != value) 
							|| (this._Membership.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Membership.Entity = null;
						previousValue.User = null;
					}
					this._Membership.Entity = value;
					if ((value != null))
					{
						value.User = this;
					}
					this.SendPropertyChanged("Membership");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Profile", Storage="_Profile", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public Profile Profile
		{
			get
			{
				return this._Profile.Entity;
			}
			set
			{
				Profile previousValue = this._Profile.Entity;
				if (((previousValue != value) 
							|| (this._Profile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Profile.Entity = null;
						previousValue.User = null;
					}
					this._Profile.Entity = value;
					if ((value != null))
					{
						value.User = this;
					}
					this.SendPropertyChanged("Profile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UsersInRole", Storage="_UsersInRoles", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<UsersInRole> UsersInRoles
		{
			get
			{
				return this._UsersInRoles;
			}
			set
			{
				this._UsersInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_User", Storage="_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public Application Application
		{
			get
			{
				return this._Application.Entity;
			}
			set
			{
				Application previousValue = this._Application.Entity;
				if (((previousValue != value) 
							|| (this._Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Application.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._Application.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UsersInRoles(UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UsersInRoles(UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UsersInRoles")]
	public partial class UsersInRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private System.Guid _RoleId;
		
		private EntityRef<Role> _Role;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    #endregion
		
		public UsersInRole()
		{
			this._Role = default(EntityRef<Role>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_UsersInRole", Storage="_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.UsersInRoles.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.UsersInRoles.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(System.Guid);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UsersInRole", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UsersInRoles.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UsersInRoles.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UsersOpenAuthAccounts")]
	public partial class UsersOpenAuthAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ApplicationName;
		
		private string _ProviderName;
		
		private string _ProviderUserId;
		
		private string _ProviderUserName;
		
		private string _MembershipUserName;
		
		private System.Nullable<System.DateTime> _LastUsedUtc;
		
		private EntityRef<UsersOpenAuthData> _UsersOpenAuthData;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationNameChanging(string value);
    partial void OnApplicationNameChanged();
    partial void OnProviderNameChanging(string value);
    partial void OnProviderNameChanged();
    partial void OnProviderUserIdChanging(string value);
    partial void OnProviderUserIdChanged();
    partial void OnProviderUserNameChanging(string value);
    partial void OnProviderUserNameChanged();
    partial void OnMembershipUserNameChanging(string value);
    partial void OnMembershipUserNameChanged();
    partial void OnLastUsedUtcChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUsedUtcChanged();
    #endregion
		
		public UsersOpenAuthAccount()
		{
			this._UsersOpenAuthData = default(EntityRef<UsersOpenAuthData>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationName", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ApplicationName
		{
			get
			{
				return this._ApplicationName;
			}
			set
			{
				if ((this._ApplicationName != value))
				{
					if (this._UsersOpenAuthData.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._ApplicationName = value;
					this.SendPropertyChanged("ApplicationName");
					this.OnApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderName", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProviderName
		{
			get
			{
				return this._ProviderName;
			}
			set
			{
				if ((this._ProviderName != value))
				{
					this.OnProviderNameChanging(value);
					this.SendPropertyChanging();
					this._ProviderName = value;
					this.SendPropertyChanged("ProviderName");
					this.OnProviderNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderUserId", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProviderUserId
		{
			get
			{
				return this._ProviderUserId;
			}
			set
			{
				if ((this._ProviderUserId != value))
				{
					this.OnProviderUserIdChanging(value);
					this.SendPropertyChanging();
					this._ProviderUserId = value;
					this.SendPropertyChanged("ProviderUserId");
					this.OnProviderUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderUserName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ProviderUserName
		{
			get
			{
				return this._ProviderUserName;
			}
			set
			{
				if ((this._ProviderUserName != value))
				{
					this.OnProviderUserNameChanging(value);
					this.SendPropertyChanging();
					this._ProviderUserName = value;
					this.SendPropertyChanged("ProviderUserName");
					this.OnProviderUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MembershipUserName", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string MembershipUserName
		{
			get
			{
				return this._MembershipUserName;
			}
			set
			{
				if ((this._MembershipUserName != value))
				{
					if (this._UsersOpenAuthData.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMembershipUserNameChanging(value);
					this.SendPropertyChanging();
					this._MembershipUserName = value;
					this.SendPropertyChanged("MembershipUserName");
					this.OnMembershipUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUsedUtc", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUsedUtc
		{
			get
			{
				return this._LastUsedUtc;
			}
			set
			{
				if ((this._LastUsedUtc != value))
				{
					this.OnLastUsedUtcChanging(value);
					this.SendPropertyChanging();
					this._LastUsedUtc = value;
					this.SendPropertyChanged("LastUsedUtc");
					this.OnLastUsedUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UsersOpenAuthData_UsersOpenAuthAccount", Storage="_UsersOpenAuthData", ThisKey="ApplicationName,MembershipUserName", OtherKey="ApplicationName,MembershipUserName", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public UsersOpenAuthData UsersOpenAuthData
		{
			get
			{
				return this._UsersOpenAuthData.Entity;
			}
			set
			{
				UsersOpenAuthData previousValue = this._UsersOpenAuthData.Entity;
				if (((previousValue != value) 
							|| (this._UsersOpenAuthData.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UsersOpenAuthData.Entity = null;
						previousValue.UsersOpenAuthAccounts.Remove(this);
					}
					this._UsersOpenAuthData.Entity = value;
					if ((value != null))
					{
						value.UsersOpenAuthAccounts.Add(this);
						this._ApplicationName = value.ApplicationName;
						this._MembershipUserName = value.MembershipUserName;
					}
					else
					{
						this._ApplicationName = default(string);
						this._MembershipUserName = default(string);
					}
					this.SendPropertyChanged("UsersOpenAuthData");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
